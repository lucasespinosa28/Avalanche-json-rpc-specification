
// Code generated by @open-rpc/generator DO NOT EDIT.
import { RequestManager, PostMessageWindowTransport, PostMessageIframeTransport, WebSocketTransport, HTTPTransport, Client, JSONRPCError } from "@open-rpc/client-js";
import _ from "lodash";
import { OpenrpcDocument as OpenRPC, MethodObject, ContentDescriptorObject } from "@open-rpc/meta-schema";
import { MethodCallValidator, MethodNotFoundError } from "@open-rpc/schema-utils-js";

export type Address = string;
export type StringDoaGddGA = string;
/**
 *
 * Hex representation of a Keccak 256 hash
 *
 */
export type Keccak = string;
/**
 *
 * Null
 *
 */
export type Null = null;
/**
 *
 * The block hash or null when its the pending block
 *
 */
export type BlockHashOrNull = Keccak | Null;
/**
 *
 * The hex representation of the block's height
 *
 */
export type BlockNumber = string;
/**
 *
 * The block number or null when its the pending block
 *
 */
export type BlockNumberOrNull = BlockNumber | Null;
/**
 *
 * The sender of the transaction
 *
 */
export type From = string;
/**
 *
 * The gas limit provided by the sender in Wei
 *
 */
export type TransactionGas = string;
/**
 *
 * The gas price willing to be paid by the sender in Wei
 *
 */
export type TransactionGasPrice = string;
/**
 *
 * Keccak 256 Hash of the RLP encoding of a transaction
 *
 */
export type TransactionHash = string;
/**
 *
 * The data field sent with the transaction
 *
 */
export type TransactionInput = string;
/**
 *
 * The total number of prior transactions made by the sender
 *
 */
export type TransactionNonce = string;
/**
 *
 * Destination address of the transaction. Null if it was a contract create.
 *
 */
export type To = Address | Null;
/**
 *
 * Hex representation of the integer
 *
 */
export type Integer = string;
/**
 *
 * The index of the transaction. null when its pending
 *
 */
export type TransactionIndex = Integer | Null;
/**
 *
 * Value of Ether being transferred in Wei
 *
 */
export type TransactionValue = string;
/**
 *
 * ECDSA recovery id
 *
 */
export type TransactionSigV = string;
/**
 *
 * ECDSA signature r
 *
 */
export type TransactionSigR = string;
/**
 *
 * ECDSA signature s
 *
 */
export type TransactionSigS = string;
/**
 *
 * The optional block height description
 *
 */
export type BlockNumberTag = "earliest" | "latest" | "pending";
export type NumberHo1ClIqD = number;
export interface ObjectOfStringDoaGddGANumberHo1ClIqDLjEorPOj {
  txID?: StringDoaGddGA;
  outputIndex?: NumberHo1ClIqD;
  [k: string]: any;
}
export type UnorderedSetOfObjectOfStringDoaGddGANumberHo1ClIqDLjEorPOjZ3FrnfAP = ObjectOfStringDoaGddGANumberHo1ClIqDLjEorPOj[];
/**
 *
 * specifies the format for the returned UTXOs. Can be either "cb58" or "hex" and defaults to "cb58".
 *
 */
export type AnyCVPkZfkL = any;
export type UnorderedSetOfStringDoaGddGADvj0XlFa = StringDoaGddGA[];
export interface ObjectOfStringDoaGddGAAddressAJNaKQBQ {
  address?: Address;
  utxo?: StringDoaGddGA;
  [k: string]: any;
}
/**
 *
 * is the total balance, in nAVAX.
 *
 */
export type NumberJCGGoG2P = number;
/**
 *
 * is the unlocked balance, in nAVAX.
 *
 */
export type NumberP3FC9PHt = number;
/**
 *
 * is the locked stakeable balance, in nAVAX.
 *
 */
export type NumberL6Q4SN4S = number;
/**
 *
 * is the locked and not stakeable balance, in nAVAX.
 *
 */
export type NumberFm61Op1N = number;
export type TxID = string;
export interface ObjectOfTxIDNumberHo1ClIqD69VDNu5Y {
  txID?: TxID;
  outputIndex?: NumberHo1ClIqD;
  [k: string]: any;
}
/**
 *
 *  are the IDs of the UTXOs that reference address.
 *
 */
export type UnorderedSetOfObjectOfTxIDNumberHo1ClIqD69VDNu5YpF9Ga0Z5 = ObjectOfTxIDNumberHo1ClIqD69VDNu5Y[];
/**
 *
 * is the blockchain’s ID.
 *
 */
export type StringOjNcTNl5 = string;
/**
 *
 * is the human-readable name of this blockchain.
 *
 */
export type StringDKEc8I2F = string;
/**
 *
 * is the ID of the Subnet that validates this blockchain.
 *
 */
export type StringInKlYZ6F = string;
/**
 *
 * is the ID of the Virtual Machine the blockchain runs.
 *
 */
export type StringUfYDgkNc = string;
export interface ObjectOfStringUfYDgkNcStringInKlYZ6FStringDKEc8I2FStringOjNcTNl5AAFPeeNo {
  id?: StringOjNcTNl5;
  name?: StringDKEc8I2F;
  subnetID?: StringInKlYZ6F;
  vmID?: StringUfYDgkNc;
  [k: string]: any;
}
/**
 *
 *  s the Unix time when the validator starts validating the Subnet.
 *
 */
export type NumberCkPiL9T4 = number;
/**
 *
 * is the Unix time when the validator stops validating the Subnet.
 *
 */
export type NumberX6PqqnTc = number;
/**
 *
 * is the amount of nAVAX this validator staked. Omitted if subnetID is not the Primary Network
 *
 */
export type NumberZljb5ZOi = number;
/**
 *
 * List of contract addresses from which to monitor events
 *
 */
export type Addresses = Address[];
export interface ObjectOfNumberHo1ClIqDNumberHo1ClIqDAddressesNHhcVYMt {
  locktime?: NumberHo1ClIqD;
  threshold?: NumberHo1ClIqD;
  addresses?: Addresses;
  [k: string]: any;
}
export type BooleanVyG3AETh = boolean;
/**
 *
 * is the Unix time when the validator starts validating the Subnet.
 *
 */
export type NumberZS0MMx1A = number;
/**
 *
 * is the validator’s node ID.
 *
 */
export type StringU14URhxQ = string;
export interface ObjectOfTxIDNumberZS0MMx1ANumberZljb5ZOiObjectOfNumberHo1ClIqDNumberHo1ClIqDAddressesNHhcVYMtNumberHo1ClIqDStringU14URhxQNumberX6PqqnTcK2OaXAFy {
  txID?: TxID;
  startTime?: NumberZS0MMx1A;
  endTime?: NumberX6PqqnTc;
  stakeAmount?: NumberZljb5ZOi;
  nodeID?: StringU14URhxQ;
  rewardOwner?: ObjectOfNumberHo1ClIqDNumberHo1ClIqDAddressesNHhcVYMt;
  potentialReward?: NumberHo1ClIqD;
  [k: string]: any;
}
export type UnorderedSetOfObjectOfTxIDNumberZS0MMx1ANumberZljb5ZOiObjectOfNumberHo1ClIqDNumberHo1ClIqDAddressesNHhcVYMtNumberHo1ClIqDStringU14URhxQNumberX6PqqnTcK2OaXAFytx2AdPt8 = ObjectOfTxIDNumberZS0MMx1ANumberZljb5ZOiObjectOfNumberHo1ClIqDNumberHo1ClIqDAddressesNHhcVYMtNumberHo1ClIqDStringU14URhxQNumberX6PqqnTcK2OaXAFy[];
export interface ObjectOfNumberHo1ClIqDTxIDNumberCkPiL9T4NumberZljb5ZOiObjectOfNumberHo1ClIqDNumberHo1ClIqDAddressesNHhcVYMtNumberHo1ClIqDStringDoaGddGANumberX6PqqnTcUnorderedSetOfObjectOfTxIDNumberZS0MMx1ANumberZljb5ZOiObjectOfNumberHo1ClIqDNumberHo1ClIqDAddressesNHhcVYMtNumberHo1ClIqDStringU14URhxQNumberX6PqqnTcK2OaXAFytx2AdPt8NumberHo1ClIqDBooleanVyG3AEThHpZBWZ54 {
  txID?: TxID;
  startTime?: NumberCkPiL9T4;
  endTime?: NumberX6PqqnTc;
  stakeAmount?: NumberZljb5ZOi;
  nodeID?: StringDoaGddGA;
  rewardOwner?: ObjectOfNumberHo1ClIqDNumberHo1ClIqDAddressesNHhcVYMt;
  potentialReward?: NumberHo1ClIqD;
  delegationFee?: NumberHo1ClIqD;
  uptime?: NumberHo1ClIqD;
  connected?: BooleanVyG3AETh;
  delegators?: UnorderedSetOfObjectOfTxIDNumberZS0MMx1ANumberZljb5ZOiObjectOfNumberHo1ClIqDNumberHo1ClIqDAddressesNHhcVYMtNumberHo1ClIqDStringU14URhxQNumberX6PqqnTcK2OaXAFytx2AdPt8;
  [k: string]: any;
}
/**
 *
 * if the node is connected.
 *
 */
export type BooleanMqW2Gfal = boolean;
export interface ObjectOfTxIDNumberZS0MMx1ANumberZljb5ZOiStringU14URhxQNumberX6PqqnTcNumberHo1ClIqDBooleanMqW2GfalC3Tj2OYE {
  txID?: TxID;
  startTime?: NumberZS0MMx1A;
  endTime?: NumberX6PqqnTc;
  stakeAmount?: NumberZljb5ZOi;
  nodeID?: StringU14URhxQ;
  delegationFee?: NumberHo1ClIqD;
  connected?: BooleanMqW2Gfal;
  [k: string]: any;
}
export type UnorderedSetOfObjectOfTxIDNumberZS0MMx1ANumberZljb5ZOiStringU14URhxQNumberX6PqqnTcNumberHo1ClIqDBooleanMqW2GfalC3Tj2OYElguK8Z1W = ObjectOfTxIDNumberZS0MMx1ANumberZljb5ZOiStringU14URhxQNumberX6PqqnTcNumberHo1ClIqDBooleanMqW2GfalC3Tj2OYE[];
export type UnorderedSetOfStringDoaGddGA8Uulm6IQ = StringDoaGddGA[];
export interface ObjectOfStringDoaGddGAAddressTUFok2IX {
  address?: Address;
  utxo?: StringDoaGddGA;
  [k: string]: any;
}
/**
 *
 * is this node's version
 *
 */
export type String9OVXUiHX = string;
/**
 *
 * is the version of the database this node is using
 *
 */
export type StringOnhjWyns = string;
/**
 *
 * is the Git commit that this node was built from
 *
 */
export type StringGn1XszHY = string;
/**
 *
 * is map where each key/value pair is the name of a VM, and the version of that VM this node runs
 *
 */
export interface ObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGA5OHTjo2U {
  avm?: StringDoaGddGA;
  evm?: StringDoaGddGA;
  platform?: StringDoaGddGA;
  [k: string]: any;
}
export interface ObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAMtoeI6Ie {
  ip?: StringDoaGddGA;
  publicIP?: StringDoaGddGA;
  nodeID?: StringDoaGddGA;
  version?: StringDoaGddGA;
  lastSent?: StringDoaGddGA;
  lastReceived?: StringDoaGddGA;
  [k: string]: any;
}
export type UnorderedSetOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAMtoeI6IeJMY8TQNp = ObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAMtoeI6Ie[];
/**
 *
 * A number only to be used once
 *
 */
export type Nonce = string;
/**
 *
 * The hex representation of the Keccak 256 of the RLP encoded block
 *
 */
export type BlockHash = string;
export type NonceOrNull = Nonce | Null;
/**
 *
 * Keccak hash of the uncles data in the block
 *
 */
export type BlockShaUncles = string;
/**
 *
 * The bloom filter for the logs of the block or null when its the pending block
 *
 */
export type BlockLogsBloom = string;
/**
 *
 * The root of the transactions trie of the block.
 *
 */
export type BlockTransactionsRoot = string;
/**
 *
 * The root of the final state trie of the block
 *
 */
export type BlockStateRoot = string;
/**
 *
 * The root of the receipts trie of the block
 *
 */
export type BlockReceiptsRoot = string;
export type AddressOrNull = Address | Null;
/**
 *
 * Integer of the difficulty for this block
 *
 */
export type BlockDifficulty = string;
/**
 *
 * Integer of the total difficulty of the chain until this block
 *
 */
export type BlockTotalDifficulty = Integer | Null;
/**
 *
 * The 'extra data' field of this block
 *
 */
export type BlockExtraData = string;
/**
 *
 * Integer the size of this block in bytes
 *
 */
export type BlockSize = string;
/**
 *
 * The maximum gas allowed in this block
 *
 */
export type BlockGasLimit = string;
/**
 *
 * The total used gas by all transactions in this block
 *
 */
export type BlockGasUsed = string;
/**
 *
 * The unix timestamp for when the block was collated
 *
 */
export type BlockTimeStamp = string;
export interface Transaction {
  blockHash?: BlockHashOrNull;
  blockNumber?: BlockNumberOrNull;
  from?: From;
  gas: TransactionGas;
  gasPrice: TransactionGasPrice;
  hash?: TransactionHash;
  input?: TransactionInput;
  nonce: TransactionNonce;
  to?: To;
  transactionIndex?: TransactionIndex;
  value?: TransactionValue;
  v?: TransactionSigV;
  r?: TransactionSigR;
  s?: TransactionSigS;
  [k: string]: any;
}
export type TransactionOrTransactionHash = Transaction | TransactionHash;
/**
 *
 * Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter
 *
 */
export type TransactionsOrHashes = TransactionOrTransactionHash[];
/**
 *
 * Block hash of the RLP encoding of an uncle block
 *
 */
export type UncleHash = string;
/**
 *
 * Array of uncle hashes
 *
 */
export type UncleHashes = UncleHash[];
/**
 *
 * The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.
 *
 */
export interface Block {
  number?: BlockNumberOrNull;
  hash?: BlockHashOrNull;
  parentHash?: BlockHash;
  nonce?: NonceOrNull;
  sha3Uncles?: BlockShaUncles;
  logsBloom?: BlockLogsBloom;
  transactionsRoot?: BlockTransactionsRoot;
  stateRoot?: BlockStateRoot;
  receiptsRoot?: BlockReceiptsRoot;
  miner?: AddressOrNull;
  difficulty?: BlockDifficulty;
  totalDifficulty?: BlockTotalDifficulty;
  extraData?: BlockExtraData;
  size?: BlockSize;
  gasLimit?: BlockGasLimit;
  gasUsed?: BlockGasUsed;
  timestamp?: BlockTimeStamp;
  transactions?: TransactionsOrHashes;
  uncles?: UncleHashes;
  [k: string]: any;
}
/**
 *
 * The contract address created, if the transaction was a contract creation, otherwise null
 *
 */
export type ReceiptContractAddress = Address | Null;
/**
 *
 * The gas units used by the transaction
 *
 */
export type ReceiptCumulativeGasUsed = string;
/**
 *
 * The total gas used by the transaction
 *
 */
export type ReceiptGasUsed = string;
/**
 *
 * Sender of the transaction
 *
 */
export type LogAddress = string;
/**
 *
 * The data/input string sent along with the transaction
 *
 */
export type LogData = string;
/**
 *
 * The index of the event within its transaction, null when its pending
 *
 */
export type LogIndex = string;
/**
 *
 * Whether or not the log was orphaned off the main chain
 *
 */
export type LogIsRemoved = boolean;
/**
 *
 * 32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))
 *
 */
export type Topic = string;
/**
 *
 * Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.
 *
 */
export type LogTopics = Topic[];
/**
 *
 * An indexed event generated during a transaction
 *
 */
export interface Log {
  address?: LogAddress;
  blockHash?: BlockHash;
  blockNumber?: BlockNumber;
  data?: LogData;
  logIndex?: LogIndex;
  removed?: LogIsRemoved;
  topics?: LogTopics;
  transactionHash?: TransactionHash;
  transactionIndex?: TransactionIndex;
  [k: string]: any;
}
/**
 *
 * An array of all the logs triggered during the transaction
 *
 */
export type Logs = Log[];
/**
 *
 * A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series
 *
 */
export type BloomFilter = string;
/**
 *
 * The intermediate stateRoot directly after transaction execution.
 *
 */
export type ReceiptPostTransactionState = string;
/**
 *
 * Whether or not the transaction threw an error.
 *
 */
export type ReceiptStatus = boolean;
/**
 *
 * The receipt of a transaction
 *
 */
export interface Receipt {
  blockHash: BlockHash;
  blockNumber: BlockNumber;
  contractAddress: ReceiptContractAddress;
  cumulativeGasUsed: ReceiptCumulativeGasUsed;
  from: From;
  gasUsed: ReceiptGasUsed;
  logs: Logs;
  logsBloom: BloomFilter;
  to: To;
  transactionHash: TransactionHash;
  transactionIndex: TransactionIndex;
  postTransactionState?: ReceiptPostTransactionState;
  status?: ReceiptStatus;
  [k: string]: any;
}
export type AnyHbW97Yqg = any;
export type AnyGVzl2YJR = any;
export interface ObjectOfStringDoaGddGAStringDoaGddGA4SZgw1S0 {
  address?: StringDoaGddGA;
  utxo?: StringDoaGddGA;
  [k: string]: any;
}
export type Ids = StringDoaGddGA[];
export type UnorderedSetOfStringDoaGddGARCi5AHUB = StringDoaGddGA[];
export type BlockNumberOrTag = BlockNumber | BlockNumberTag;
export interface SignTransaction {
  data: StringDoaGddGA;
  from: From;
  gas: TransactionGas;
  gasPrice: TransactionGasPrice;
  to: To;
  value: TransactionValue;
  [k: string]: any;
}
/**
 *
 * Hex representation of a variable length byte array
 *
 */
export type Bytes = string;
export type IsTransactionsIncluded = boolean;
export interface StartIndex {
  address?: StringDoaGddGA;
  utxo?: StringDoaGddGA;
  [k: string]: any;
}
export type Data = string;
export interface Balances {
  asset?: StringDoaGddGA;
  balance?: NumberHo1ClIqD;
  [k: string]: any;
}
export interface ObjectOfStringDoaGddGAStringDoaGddGANumberHo1ClIqDStringDoaGddGAZzZvQgFI {
  assetID?: StringDoaGddGA;
  name?: StringDoaGddGA;
  symbol?: StringDoaGddGA;
  denomination?: NumberHo1ClIqD;
  [k: string]: any;
}
export interface ObjectOfUnorderedSetOfObjectOfStringDoaGddGANumberHo1ClIqDLjEorPOjZ3FrnfAPNumberHo1ClIqDHIfq2P7W {
  balance?: NumberHo1ClIqD;
  utxoIDs?: UnorderedSetOfObjectOfStringDoaGddGANumberHo1ClIqDLjEorPOjZ3FrnfAP;
  [k: string]: any;
}
export interface ObjectOfStringDoaGddGAAnyCVPkZfkLPuZmtk8Z {
  tx?: StringDoaGddGA;
  encoding?: AnyCVPkZfkL;
  [k: string]: any;
}
export type Status = string;
export interface ObjectOfUnorderedSetOfStringDoaGddGADvj0XlFaNumberHo1ClIqDObjectOfStringDoaGddGAAddressAJNaKQBQAnyCVPkZfkL1ZHz1Bxo {
  numFetched?: NumberHo1ClIqD;
  utxos?: UnorderedSetOfStringDoaGddGADvj0XlFa;
  endIndex?: ObjectOfStringDoaGddGAAddressAJNaKQBQ;
  encoding?: AnyCVPkZfkL;
  [k: string]: any;
}
export interface ObjectOfUnorderedSetOfObjectOfTxIDNumberHo1ClIqD69VDNu5YpF9Ga0Z5NumberP3FC9PHtNumberL6Q4SN4SNumberFm61Op1NNumberJCGGoG2P7ODD4O8M {
  balance?: NumberJCGGoG2P;
  unlocked?: NumberP3FC9PHt;
  lockedStakeable?: NumberL6Q4SN4S;
  lockedNotStakeable?: NumberFm61Op1N;
  utxoIDs?: UnorderedSetOfObjectOfTxIDNumberHo1ClIqD69VDNu5YpF9Ga0Z5;
  [k: string]: any;
}
/**
 *
 *  is all of the blockchains that exists on the Avalanche network.
 *
 */
export type Blockchains = ObjectOfStringUfYDgkNcStringInKlYZ6FStringDKEc8I2FStringOjNcTNl5AAFPeeNo[];
export type Supply = number;
export type Validators = ObjectOfNumberHo1ClIqDTxIDNumberCkPiL9T4NumberZljb5ZOiObjectOfNumberHo1ClIqDNumberHo1ClIqDAddressesNHhcVYMtNumberHo1ClIqDStringDoaGddGANumberX6PqqnTcUnorderedSetOfObjectOfTxIDNumberZS0MMx1ANumberZljb5ZOiObjectOfNumberHo1ClIqDNumberHo1ClIqDAddressesNHhcVYMtNumberHo1ClIqDStringU14URhxQNumberX6PqqnTcK2OaXAFytx2AdPt8NumberHo1ClIqDBooleanVyG3AEThHpZBWZ54[];
export type Height = number;
export interface ObjectOfNumberHo1ClIqDNumberHo1ClIqDDx6Z4VqH {
  minValidatorStake?: NumberHo1ClIqD;
  minDelegatorStake?: NumberHo1ClIqD;
  [k: string]: any;
}
export interface ObjectOfUnorderedSetOfStringDoaGddGADvj0XlFaNumberHo1ClIqDMGfbUCXP {
  numFetched?: NumberHo1ClIqD;
  utxos?: UnorderedSetOfStringDoaGddGADvj0XlFa;
  [k: string]: any;
}
export interface AssetID {
  numFetched?: NumberHo1ClIqD;
  utxos?: UnorderedSetOfStringDoaGddGADvj0XlFa;
  [k: string]: any;
}
export interface Subnets {
  id?: StringDoaGddGA;
  controlKeys?: UnorderedSetOfStringDoaGddGA8Uulm6IQ;
  [k: string]: any;
}
export type Staked = number;
export type Stake = number;
export interface ObjectOfUnorderedSetOfStringDoaGddGADvj0XlFaNumberHo1ClIqDObjectOfStringDoaGddGAAddressTUFok2IXAnyCVPkZfkLOItHIivc {
  numFetched?: NumberHo1ClIqD;
  utxos?: UnorderedSetOfStringDoaGddGADvj0XlFa;
  endIndex?: ObjectOfStringDoaGddGAAddressTUFok2IX;
  encoding?: AnyCVPkZfkL;
  [k: string]: any;
}
export type SubnetID = string;
export type BlockchainIDs = StringDoaGddGA[];
export interface ObjectOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGA5OHTjo2UString9OVXUiHXStringGn1XszHYStringOnhjWynsL4OwtBVJ {
  version?: String9OVXUiHX;
  databaseVersion?: StringOnhjWyns;
  gitCommit?: StringGn1XszHY;
  vmVersions?: ObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGA5OHTjo2U;
  [k: string]: any;
}
export type BooleanLu7POU17 = boolean;
export interface ObjectOfUnorderedSetOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAMtoeI6IeJMY8TQNpNumberHo1ClIqDFEjTP7UK {
  numPeers?: NumberHo1ClIqD;
  peers?: UnorderedSetOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAMtoeI6IeJMY8TQNp;
  [k: string]: any;
}
export interface ObjectOfNumberHo1ClIqDNumberHo1ClIqD6FHq3FGd {
  creationTxFee?: NumberHo1ClIqD;
  txFee?: NumberHo1ClIqD;
  [k: string]: any;
}
export type ChainId = string;
export type IntegerOrNull = Integer | Null;
export type BlockOrNull = Block | Null;
export type TransactionOrNull = Transaction | Null;
export type TransactionReceiptOrNull = Receipt | Null;
export type AtomicTxStatusStatus = AnyHbW97Yqg | AnyGVzl2YJR;
export interface ObjectHAgrRKSz { [key: string]: any; }
export type NetworkId = string;
export type ClientVersion = string;
/**
 *
 * Generated! Represents an alias to any of the provided schemas
 *
 */
export type AnyOfStringDoaGddGAAddressStringDoaGddGAAddressStringDoaGddGATxIDStringDoaGddGATxIDAddressesNumberHo1ClIqDObjectOfStringDoaGddGAStringDoaGddGA4SZgw1S0StringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAAddressStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGATxIDStringDoaGddGAStringDoaGddGAStringDoaGddGAIdsAddressesTxIDStringDoaGddGATxIDAddressesNumberHo1ClIqDObjectOfStringDoaGddGAStringDoaGddGA4SZgw1S0StringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGANumberHo1ClIqDStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAUnorderedSetOfStringDoaGddGARCi5AHUBTransactionBlockNumberOrTagAddressBlockNumberStringDoaGddGAAddressBlockNumberSignTransactionAddressBlockNumberOrTagBytesBlockHashIsTransactionsIncludedBlockNumberOrTagIsTransactionsIncludedTransactionHashTransactionHashTxIDUnorderedSetOfStringDoaGddGADvj0XlFaStringDoaGddGAStringDoaGddGAStartIndexStringDoaGddGAStringDoaGddGAStringDoaGddGADataStringDoaGddGABalancesObjectOfStringDoaGddGAStringDoaGddGANumberHo1ClIqDStringDoaGddGAZzZvQgFIObjectOfUnorderedSetOfObjectOfStringDoaGddGANumberHo1ClIqDLjEorPOjZ3FrnfAPNumberHo1ClIqDHIfq2P7WObjectOfStringDoaGddGAAnyCVPkZfkLPuZmtk8ZStatusObjectOfUnorderedSetOfStringDoaGddGADvj0XlFaNumberHo1ClIqDObjectOfStringDoaGddGAAddressAJNaKQBQAnyCVPkZfkL1ZHz1BxoTxIDObjectOfUnorderedSetOfObjectOfTxIDNumberHo1ClIqD69VDNu5YpF9Ga0Z5NumberP3FC9PHtNumberL6Q4SN4SNumberFm61Op1NNumberJCGGoG2P7ODD4O8MBlockchainsStatusSupplyValidatorsHeightObjectOfNumberHo1ClIqDNumberHo1ClIqDDx6Z4VqHValidatorsObjectOfUnorderedSetOfStringDoaGddGADvj0XlFaNumberHo1ClIqDMGfbUCXPAssetIDSubnetsStakedStakeSubnetsStatusObjectOfUnorderedSetOfStringDoaGddGADvj0XlFaNumberHo1ClIqDObjectOfStringDoaGddGAAddressTUFok2IXAnyCVPkZfkLOItHIivcTxIDUnorderedSetOfStringDoaGddGADvj0XlFaSubnetIDBlockchainIDsStringDoaGddGANumberHo1ClIqDStringDoaGddGAObjectOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGA5OHTjo2UString9OVXUiHXStringGn1XszHYStringOnhjWynsL4OwtBVJBooleanLu7POU17ObjectOfUnorderedSetOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAMtoeI6IeJMY8TQNpNumberHo1ClIqDFEjTP7UKObjectOfNumberHo1ClIqDNumberHo1ClIqD6FHq3FGdBlockNumberOrTagBytesChainIdIntegerOrNullIntegerOrNullBytesNonceOrNullKeccakBlockOrNullBlockOrNullTransactionOrNullTransactionReceiptOrNullAtomicTxStatusStatusObjectHAgrRKSzTxIDNetworkIdClientVersionKeccak = StringDoaGddGA | Address | TxID | Addresses | NumberHo1ClIqD | ObjectOfStringDoaGddGAStringDoaGddGA4SZgw1S0 | Ids | UnorderedSetOfStringDoaGddGARCi5AHUB | Transaction | BlockNumberOrTag | BlockNumber | SignTransaction | Bytes | BlockHash | IsTransactionsIncluded | TransactionHash | UnorderedSetOfStringDoaGddGADvj0XlFa | StartIndex | Data | Balances | ObjectOfStringDoaGddGAStringDoaGddGANumberHo1ClIqDStringDoaGddGAZzZvQgFI | ObjectOfUnorderedSetOfObjectOfStringDoaGddGANumberHo1ClIqDLjEorPOjZ3FrnfAPNumberHo1ClIqDHIfq2P7W | ObjectOfStringDoaGddGAAnyCVPkZfkLPuZmtk8Z | Status | ObjectOfUnorderedSetOfStringDoaGddGADvj0XlFaNumberHo1ClIqDObjectOfStringDoaGddGAAddressAJNaKQBQAnyCVPkZfkL1ZHz1Bxo | ObjectOfUnorderedSetOfObjectOfTxIDNumberHo1ClIqD69VDNu5YpF9Ga0Z5NumberP3FC9PHtNumberL6Q4SN4SNumberFm61Op1NNumberJCGGoG2P7ODD4O8M | Blockchains | Supply | Validators | Height | ObjectOfNumberHo1ClIqDNumberHo1ClIqDDx6Z4VqH | ObjectOfUnorderedSetOfStringDoaGddGADvj0XlFaNumberHo1ClIqDMGfbUCXP | AssetID | Subnets | Staked | Stake | ObjectOfUnorderedSetOfStringDoaGddGADvj0XlFaNumberHo1ClIqDObjectOfStringDoaGddGAAddressTUFok2IXAnyCVPkZfkLOItHIivc | SubnetID | BlockchainIDs | ObjectOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGA5OHTjo2UString9OVXUiHXStringGn1XszHYStringOnhjWynsL4OwtBVJ | BooleanLu7POU17 | ObjectOfUnorderedSetOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAMtoeI6IeJMY8TQNpNumberHo1ClIqDFEjTP7UK | ObjectOfNumberHo1ClIqDNumberHo1ClIqD6FHq3FGd | ChainId | IntegerOrNull | NonceOrNull | Keccak | BlockOrNull | TransactionOrNull | TransactionReceiptOrNull | AtomicTxStatusStatus | ObjectHAgrRKSz | NetworkId | ClientVersion;
export type AvmBuildGenesis = (alias: StringDoaGddGA) => Promise<StringDoaGddGA>;
export type AvmGetAllBalances = (Address: Address) => Promise<Balances>;
export type AvmGetAssetDescription = (assetID: StringDoaGddGA) => Promise<ObjectOfStringDoaGddGAStringDoaGddGANumberHo1ClIqDStringDoaGddGAZzZvQgFI>;
export type AvmGetBalance = (Address: Address, assetID: StringDoaGddGA) => Promise<ObjectOfUnorderedSetOfObjectOfStringDoaGddGANumberHo1ClIqDLjEorPOjZ3FrnfAPNumberHo1ClIqDHIfq2P7W>;
export type AvmGetTx = (txID: TxID, encoding: StringDoaGddGA) => Promise<ObjectOfStringDoaGddGAAnyCVPkZfkLPuZmtk8Z>;
export type AvmGetTxStatus = (txID: TxID) => Promise<Status>;
export type AvmGetUTXOs = (addresses: Addresses, limit: NumberHo1ClIqD, startIndex: ObjectOfStringDoaGddGAStringDoaGddGA4SZgw1S0, sourceChain: StringDoaGddGA, encoding: StringDoaGddGA) => Promise<ObjectOfUnorderedSetOfStringDoaGddGADvj0XlFaNumberHo1ClIqDObjectOfStringDoaGddGAAddressAJNaKQBQAnyCVPkZfkLL5YMy317>;
export type AvmIssueTx = (tx: StringDoaGddGA, encoding: StringDoaGddGA) => Promise<TxID>;
export type PlatformGetBalance = (Address: Address) => Promise<ObjectOfUnorderedSetOfObjectOfTxIDNumberHo1ClIqD69VDNu5YpF9Ga0Z5NumberP3FC9PHtNumberL6Q4SN4SNumberFm61Op1NNumberJCGGoG2P7ODD4O8M>;
export type PlatformGetBlockchains = () => Promise<Blockchains>;
export type PlatformGetBlockchainStatus = (blockchainID: StringDoaGddGA) => Promise<Status>;
export type PlatformGetCurrentSupply = () => Promise<Supply>;
export type PlatformGetCurrentValidators = (subnetID: StringDoaGddGA, nodeIDs: StringDoaGddGA) => Promise<Validators>;
export type PlatformGetHeight = () => Promise<Height>;
export type PlatformGetMinStake = () => Promise<ObjectOfNumberHo1ClIqDNumberHo1ClIqDDx6Z4VqH>;
export type PlatformGetPendingValidators = (subnetID: StringDoaGddGA, nodeIDs: StringDoaGddGA) => Promise<Validators>;
export type PlatformGetRewardUTXOs = (txID: TxID, encoding: StringDoaGddGA) => Promise<ObjectOfUnorderedSetOfStringDoaGddGADvj0XlFaNumberHo1ClIqDMGfbUCXP>;
export type PlatformGetStakingAssetID = (subnetID: StringDoaGddGA, assetID: StringDoaGddGA) => Promise<AssetID>;
export type PlatformGetSubnets = (ids: Ids) => Promise<Subnets>;
export type PlatformGetStake = (addresses: Addresses) => Promise<Staked>;
export type PlatformGetTotalStake = () => Promise<Stake>;
export type PlatformGetTx = (txID: TxID, encoding: StringDoaGddGA) => Promise<Subnets>;
export type PlatformGetTxStatus = (txID: TxID) => Promise<Status>;
export type PlatformGetUTXOs = (addresses: Addresses, limit: NumberHo1ClIqD, startIndex: ObjectOfStringDoaGddGAStringDoaGddGA4SZgw1S0, sourceChain: StringDoaGddGA, encoding: StringDoaGddGA) => Promise<ObjectOfUnorderedSetOfStringDoaGddGADvj0XlFaNumberHo1ClIqDObjectOfStringDoaGddGAAddressTUFok2IXAnyCVPkZfkLKhuEIl1J>;
export type PlatformIssueTx = (tx: StringDoaGddGA, encoding: StringDoaGddGA) => Promise<TxID>;
export type PlatformSampleValidators = (size: NumberHo1ClIqD, subnetID: StringDoaGddGA) => Promise<UnorderedSetOfStringDoaGddGADvj0XlFa>;
export type PlatformValidatedBy = (blockchainID: StringDoaGddGA) => Promise<SubnetID>;
export type PlatformValidates = (subnetID: StringDoaGddGA) => Promise<BlockchainIDs>;
export type InfoGetBlockchainID = (alias: StringDoaGddGA) => Promise<StringDoaGddGA>;
export type InfoGetNetworkID = () => Promise<NumberHo1ClIqD>;
export type InfoGetNetworkName = () => Promise<StringDoaGddGA>;
export type InfoGetNodeVersion = () => Promise<ObjectOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGA5OHTjo2UString9OVXUiHXStringGn1XszHYStringOnhjWynsL4OwtBVJ>;
export type InfoIsBootstrapped = (chain: StringDoaGddGA) => Promise<BooleanLu7POU17>;
export type InfoPeers = (nodeIDs: UnorderedSetOfStringDoaGddGARCi5AHUB) => Promise<ObjectOfUnorderedSetOfObjectOfStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAStringDoaGddGAMtoeI6IeJMY8TQNpNumberHo1ClIqDFEjTP7UK>;
export type InfoGetTxFee = () => Promise<ObjectOfNumberHo1ClIqDNumberHo1ClIqD6FHq3FGd>;
export type EthBlockNumber = () => Promise<BlockNumberOrTag>;
export type EthCall = (transaction: Transaction, blockNumber: BlockNumberOrTag) => Promise<Bytes>;
export type EthChainId = () => Promise<ChainId>;
export type EthGetAssetBalance = (address: Address, blockNumber: BlockNumber, assetID: StringDoaGddGA) => Promise<IntegerOrNull>;
export type EthGetBalance = (address: Address, blockNumber: BlockNumber) => Promise<IntegerOrNull>;
export type EthSignTransaction = (Transaction: SignTransaction) => Promise<Bytes>;
export type EthGetTransactionCount = (address: Address, blockNumber: BlockNumberOrTag) => Promise<NonceOrNull>;
export type EthSendRawTransaction = (signedTransactionData: Bytes) => Promise<Keccak>;
export type EthGetBlockByHash = (blockHash: BlockHash, includeTransactions: IsTransactionsIncluded) => Promise<BlockOrNull>;
export type EthGetBlockByNumber = (blockNumber: BlockNumberOrTag, includeTransactions: IsTransactionsIncluded) => Promise<BlockOrNull>;
export type EthGetTransactionByHash = (transactionHash: TransactionHash) => Promise<TransactionOrNull>;
export type EthGetTransactionReceipt = (transactionHash: TransactionHash) => Promise<TransactionReceiptOrNull>;
export type AvaxGetAtomicTxStatus = (txID: TxID) => Promise<AtomicTxStatusStatus>;
export type AvaxGetUTXOs = (addresses: UnorderedSetOfStringDoaGddGADvj0XlFa, limit: StringDoaGddGA, sourceChain: StringDoaGddGA, startIndex: StartIndex, encoding: StringDoaGddGA) => Promise<ObjectHAgrRKSz>;
export type AvaxIssueTx = (tx: StringDoaGddGA, encoding: StringDoaGddGA) => Promise<TxID>;
export type NetVersion = () => Promise<NetworkId>;
export type Web3ClientVersion = () => Promise<ClientVersion>;
export type Web3Sha3 = (data: Data) => Promise<Keccak>;

export interface Options {
  transport: {
    type: "websocket" | "http" | "https" | "postmessagewindow" | "postmessageiframe";
    host: string;
    port: number;
    path?: string;
    protocol?: string;
  },
}

export class AvalancheJSONRPC {
  public rpc: Client;
  public static openrpcDocument: OpenRPC = {"openrpc":"1.2.4","info":{"version":"1.0.30","title":"Avalanche JSON-RPC","description":"This API lets you interact with an Avalanche client via JSON-RPC\n Use method tag to complete the url ex: https://api.avax.network/ext/vm/avm","license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"}},"servers":[{"name":"Mainnet","url":"https://api.avax.network/ext","summary":""}],"methods":[{"tags":[{"name":"/vm/avm"}],"name":"avm.buildGenesis","summary":"Given a JSON representation of this Virtual Machine’s genesis state, create the byte representation of that state.","params":[{"name":"alias","required":true,"description":"alias X,P or C","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"getBlockchainIDResult","schema":{"type":"string"}},"examples":[{"name":"buildGenesisExample","params":[{"name":"genesisData","value":{"genesisData":{"asset1":{"name":"myFixedCapAsset","symbol":"MFCA","initialState":{"fixedCap":[{"amount":100000,"address":"local18jma8ppw3nhx5r4ap8clazz0dps7rv5u00z96u"}]}},"asset2":{"name":"myVarCapAsset","symbol":"MVCA","initialState":{"variableCap":[{"minters":["local18jma8ppw3nhx5r4ap8clazz0dps7rv5u00z96u"],"threshold":1}]}}}}}],"result":{"name":"buildGenesisResultExample","value":{"bytes":"111115LHK2ZCYttSKPmmhsTDSuKiCkmHz65nUS1YqybvjirwGLLt376k1RwnTt72WobPqrG7rmgrKVqSq6VxDsKXYGnRmfhdLCEhsYjMegZmu5L5wEQ6k1BHu1QN6jk8kfoLQfAnKAxv8t5PmGJUwmTyoHz9aoDpfwJfkzjLut3TSSHzVLzH5bPoc5fYMwKGA1Zaps4Byo6rPpAZgiDG1jokzLuVXFDMxiFSDGHHA7uB5Nx2qaywtUXtyTi7JMYMKQMcB2UQEZbpPB9QcHg88mA8uzT2i5YYSiT9uZpAUjd6cfNiPedBJqi5AdjtcAmHvhszCS7YurbVmB4sHEP3PMxyKAHMnQ8dyxefQCDPUpSGMFp6qzomuXQSQeTi","encoding":"cb58"}}}]},{"tags":[{"name":"/bc/X"}],"name":"avm.getAllBalances","summary":"Get the balances of all assets controlled by a given address.","params":[{"name":"Address","required":true,"description":"X-chain address","schema":{"title":"address","type":"string","pattern":"^X-[a-fA-F\\d]{43}$"}}],"result":{"name":"getAllBalancesResult","schema":{"title":"balances","type":"object","properties":{"asset":{"type":"string","title":"string_doaGddGA"},"balance":{"type":"number","title":"number_Ho1clIqD"}}}},"examples":[{"name":"getAllBalancesExample","params":[{"name":"address","value":{"address":"X-avax1slt2dhfu6a6qezcn5sgtagumq8ag8we75f84sw"}}],"result":{"name":"getAllBalancesResultExample","value":{"balances":[{"asset":"AVAX","balance":"3363837072493520"},{"asset":"qNE62d87kVmY6C3Ff89XLWTvHBkmicJV9oM3KsxbGSvwhzWyJ","balance":"77"},{"asset":"2grQHEwGHj73JPFna6kGxoMtuz8mQDeX4v45oswjVhp5kqUQsL","balance":"10000000000000"}]}}}]},{"tags":[{"name":"/bc/X"}],"name":"avm.getAssetDescription","summary":"Get information about an asset.","params":[{"name":"assetID","required":true,"description":"is the id of the asset for which the information is requested.","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"getAssetDescriptionResult","schema":{"type":"object","properties":{"assetID":{"type":"string","title":"string_doaGddGA"},"name":{"type":"string","title":"string_doaGddGA"},"symbol":{"type":"string","title":"string_doaGddGA"},"denomination":{"type":"number","title":"number_Ho1clIqD"}}}},"examples":[{"name":"getAssetDescriptionExample","params":[{"name":"assetID","value":{"assetID":"FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"}}],"result":{"name":"getAssetDescriptionResultExample","value":{"assetID":"FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z","name":"Avalanche","symbol":"AVAX","denomination":"9"}}}]},{"name":"avm.getBalance","summary":"Get information about an asset.","params":[{"name":"Address","required":true,"description":"owner of the asset","schema":{"title":"address","type":"string","pattern":"^X-[a-fA-F\\d]{43}$"}},{"name":"assetID","required":true,"description":"id of the asset for which the balance is requested.","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"getBalanceResult","schema":{"type":"object","properties":{"balance":{"type":"number","title":"number_Ho1clIqD"},"utxoIDs":{"type":"array","items":{"type":"object","properties":{"txID":{"type":"string","title":"string_doaGddGA"},"outputIndex":{"type":"number","title":"number_Ho1clIqD"}},"title":"objectOf_string_doaGddGA_number_Ho1clIqD_ljEorPOj"},"title":"unorderedSetOf_objectOf_string_doaGddGA_number_Ho1clIqD_ljEorPOjZ3FrnfAP"}}}},"examples":[{"name":"getBalanceExample","params":[{"name":"AddressAndAssetID","value":{"address":"X-avax1slt2dhfu6a6qezcn5sgtagumq8ag8we75f84sw","assetID":"FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"}}],"result":{"name":"getBalanceResultExample","value":{"balance":"3363711663086440","utxoIDs":[{"txID":"Xq83i9hdMpsjYtgAYZCES5gTXLuu5u2WHCBQ7PiVErgkmVGtv","outputIndex":1},{"txID":"4ZJVAuLbYvtZ6TJqvNS6nbfqMr2yXWqR86oKbdAMbmgZWZ2Ln","outputIndex":1}]}}}]},{"tags":[{"name":"/bc/X"}],"name":"avm.getTx","summary":"Returns the specified transaction. The encoding parameter sets the format of the returned transaction. Can be either \"cb58\" or \"hex\". Defaults to \"cb58\".","params":[{"name":"txID","required":true,"schema":{"title":"txID","type":"string"}},{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}],"result":{"name":"getTxResult","schema":{"type":"object","properties":{"tx":{"type":"string","title":"string_doaGddGA"},"encoding":{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}}}},"examples":[{"name":"getTxExample","params":[{"name":"assetID","value":{"txID":"2mr6ACGzgAfF79MrRwRNL9uLocWJzPnZ3GfmGdJFUaBmPqieDb"}}],"result":{"name":"getTxResultExample","value":{"tx":"1111111116aDh9GNvVaie7axyHX8q8YEgkhZcLyPDa4tY1qW6Ah2NKTDAWkdUPi7SSYSxBXN8PPVv8MUZJpUtcVcbiVg6zjbiTZVTwmSbvkZJM15zkRYmEc8622XDWBajuPpCUb29kLzFGFb63CnioQMdTWAw2tS6SR3bp4wc8Bv3AJgmCVHF8fhqweQSDcQbU4GqqxhxLgHisw6e6Jo6pJXJj39wAKZH8wseSvBdVmiZEfyxtLe3nDwcfbe4w96eGX7JGwjkyKnJxp7avDVRHd7AcbkCTtAiUSGWCZkfnpJ93GMFTjWVaFfsegJbaLXqQMPNqeE54J26UEbfyJh5tgwMeRyeic7ABp8gJtUsAXjZzuquJEaovhMZ1bMaKS1AQtxJJsYwx6qbtkLeDxxPZyJgbMrw3uRTTLKrrKZ2jj4XXT5ZbRtCXZh39mxd8ehBWYfESHL6MPE9oy4u16hV5xQU96csBgwMA1rPYsLkNYwixgjWCD81UuA1ELyt8jqfuGttmLAQmyfnAeLnvSmuEJ71KmrNVUGErkvw9UrscToAFAXMUZy2rVGLP5bA1ErqMoiRAdwMfyp9msAQMXNqEgPe4K8Y5czBnAX6CRZqSKfhrn1CDgWK8mQVhucjkVYZfN27mL91ZpWuvXXVy2hy3LpVmz6ydxBvhQoTEe2cLVLKBvsYVcnYEMCrXFt9mQsU6PBaymFf5TenqKBjvzq6c8Wn9VHzzFDeq3","encoding":"cb58"}}}]},{"tags":[{"name":"/bc/X"}],"name":"avm.getTxStatus","summary":"Gets a transaction’s status by its ID. If the transaction was dropped, response will include a reason field with more information why the transaction was dropped.","params":[{"name":"txID","required":true,"schema":{"title":"txID","type":"string"}}],"result":{"name":"getTxStatusResult","description":"status is one of:\n Validating: The blockchain is being validated by this node.\n Created: The blockchain exists but isn’t being validated by this node.\n Preferred: The blockchain was proposed to be created and is likely to be created but the transaction isn’t yet accepted.\n Unknown: The blockchain either wasn’t proposed or the proposal to create it isn’t preferred. The proposal may be resubmitted.","schema":{"title":"status","type":"string"}},"examples":[{"name":"getTxStatusExample","params":[{"name":"txID","value":{"txID":"2mr6ACGzgAfF79MrRwRNL9uLocWJzPnZ3GfmGdJFUaBmPqieDb"}}],"result":{"name":"getTxStatusResultExample","value":{"status":"Accepted"}}}]},{"tags":[{"name":"/bc/X"}],"name":"avm.getUTXOs","summary":"Gets the UTXOs that reference a given address. If sourceChain is specified, then it will retrieve the atomic UTXOs exported from that chain to the X Chain.","params":[{"name":"addresses","required":true,"schema":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^X-[a-fA-F\\d]{43}$"}}},{"name":"limit","description":"If startIndex is omitted, will fetch all UTXOs up to limit.","schema":{"type":"number","title":"number_Ho1clIqD"}},{"name":"startIndex","schema":{"type":"object","properties":{"address":{"type":"string","title":"string_doaGddGA"},"utxo":{"type":"string","title":"string_doaGddGA"}},"title":"objectOf_string_doaGddGA_string_doaGddGA_4SZgw1s0"}},{"name":"sourceChain","schema":{"type":"string","title":"string_doaGddGA"}},{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}],"result":{"name":"getUTXOResult","schema":{"type":"object","properties":{"numFetched":{"type":"number","title":"number_Ho1clIqD"},"utxos":{"type":"array","items":{"type":"string","title":"string_doaGddGA"},"title":"unorderedSetOf_string_doaGddGADvj0xlFa"},"endIndex":{"type":"object","properties":{"address":{"title":"address","type":"string","pattern":"^X-[a-fA-F\\d]{43}$"},"utxo":{"type":"string","title":"string_doaGddGA"}},"title":"objectOf_string_doaGddGA_address_AJNaKQBQ"},"encoding":{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}}}},"examples":[{"name":"getUTXOsExample","params":[{"name":"txID","value":{"addresses":["X-avax1slt2dhfu6a6qezcn5sgtagumq8ag8we75f84sw"],"limit":5,"sourceChain":"X"}}],"result":{"name":"getUTXOsResultExample","value":{"numFetched":"5","utxos":["11ULuyZkzLpUPQEXEgzHFHQmeyZijBqP8vggWzC64rr797ha9tBjnpU4Cu96LwWdXukVmsDUm5R7Ncmh9vEK3Fd6ckQfW6cybXKoTGgGsQciCFwkQzn6WsrrvamjKHxqxg26LC9kAsaJsKayPZGC6yd6SGRqdUS26NTmZZ","11ES8BSj94FZ37PBbKPMBNPPdx19hA3xdc1hmpBHYwbpoPevn6TATJXYH3HjhDNJnmRmcVLyfxSobxhBgXWDRNL6m34zwg78sUPU8rggwoLc1mxyYUX7HqmGxAPN9UXixBKZHsTybbt2PXsbbfbksq8LsHH4hri3hbm3Mo","11J7N89W7GVNt676yEL2AF5DwXBdVeMDrzPAxiJdGRTZ5AxrHRK9Xdjbt4VQVJCaUKpDE1NiuwATVgwNgvT7sEY9Lt2SG3zTBx142fqDyrLdrACvPLwYQ16QD7EyDkpDvDCszjJwu9vUPfk5ipSkN996CrvWfGARZrAW3b","11AhmxLNquE4EcsQudrdmsTRY6TWh8UorAaaPwFU9KjvKRZeqvo886e2TsPxtNwttmD3bmKYvR8qF5XSNjWNam1LjdwqF8uzfnSd6adL35MeTHbvKH8nXQszDrnNWJhQpcBwX4nSWY9zP1k86ij9JFRcVpkUWiUz4yqhre","1127vttNWJtJATAaKPZFCUP2HTf2jTgMr2K2oSab82SBgu2zig1ph5t95fzMLbnwrj6ZUuHABenE2VoNWfTkrBi7sVFSpf2VQhb8mjSFV4XY8t1ouDcZPeqoRsGjJCcjravh3xVsiiaoofnV72hNtfTY4BAskFwd5C1jxG"],"endIndex":{"address":"X-avax1slt2dhfu6a6qezcn5sgtagumq8ag8we75f84sw","utxo":"2UR4mAx3j6t5ekcZ7yLAqtSuggE5XPamg89a5UQh94uB8Cs1RW"},"encoding":"cb58"}}}]},{"tags":[{"name":"/bc/X"}],"name":"avm.issueTx","summary":"Send a signed transaction to the network. encoding specifies the format of the signed transaction. Can be either \"cb58\" or \"hex\". Defaults to \"cb58\".","params":[{"name":"tx","required":true,"schema":{"type":"string","title":"string_doaGddGA"}},{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}],"result":{"name":"issueTxResult","schema":{"title":"txID","type":"string"}},"examples":[{"name":"issueTxExample","params":[{"name":"tx","value":{"tx":"6sTENqXfk3gahxkJbEPsmX9eJTEFZRSRw83cRJqoHWBiaeAhVbz9QV4i6SLd6Dek4eLsojeR8FbT3arFtsGz9ycpHFaWHLX69edJPEmj2tPApsEqsFd7wDVp7fFxkG6HmySR"}}],"result":{"name":"issueTxResultExample","value":{"txID":"NUPLwbt2hsYxpQg4H2o451hmTWQ4JZx2zMzM4SinwtHgAdX1JLPHXvWSXEnpecStLj"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getBalance","summary":"Get the balance of AVAX controlled by a given address.","params":[{"name":"Address","required":true,"description":"P-chain address","schema":{"title":"address","type":"string","pattern":"^P-[a-fA-F\\d]{43}$"}}],"result":{"name":"getBalanceResult","schema":{"type":"object","properties":{"balance":{"description":"is the total balance, in nAVAX.","type":"number","title":"number_jCGGoG2p"},"unlocked":{"description":"is the unlocked balance, in nAVAX.","type":"number","title":"number_p3FC9PHt"},"lockedStakeable":{"description":"is the locked stakeable balance, in nAVAX.","type":"number","title":"number_l6Q4sN4s"},"lockedNotStakeable":{"description":"is the locked and not stakeable balance, in nAVAX.","type":"number","title":"number_Fm61op1N"},"utxoIDs":{"description":" are the IDs of the UTXOs that reference address.","type":"array","items":{"type":"object","properties":{"txID":{"title":"txID","type":"string"},"outputIndex":{"type":"number","title":"number_Ho1clIqD"}},"title":"objectOf_txID_number_Ho1clIqD_69vDNu5y"},"title":"unorderedSetOf_objectOf_txID_number_Ho1clIqD_69vDNu5ypF9Ga0z5"}}}},"examples":[{"name":"getBalanceExample","params":[{"name":"address","value":{"address":"P-avax1skrhcldnmsflmnf9dja2v9fdxcyapmw7lu97mh"}}],"result":{"name":"getBalanceResultExample","value":{"balance":"1337775600000","unlocked":"1337325600000","lockedStakeable":"450000000","lockedNotStakeable":"0","utxoIDs":[{"txID":"24sn9NKqJKmEow1wQPBGHb3yaeCDYXK3gDfh82MvW1QEtNntRJ","outputIndex":0},{"txID":"rcbSZwB2dJfs7n3aVRXtQNkzbykNs2RR2amTCKNL2uEHitL9y","outputIndex":1},{"txID":"rcbSZwB2dJfs7n3aVRXtQNkzbykNs2RR2amTCKNL2uEHitL9y","outputIndex":2},{"txID":"rcbSZwB2dJfs7n3aVRXtQNkzbykNs2RR2amTCKNL2uEHitL9y","outputIndex":0}]}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getBlockchains","summary":"Get all the blockchains that exist (excluding the P-Chain).","params":[],"result":{"name":"getBlockchainsResult","schema":{"title":"blockchains","description":" is all of the blockchains that exists on the Avalanche network.","type":"array","items":{"type":"object","properties":{"id":{"description":"is the blockchain’s ID.","type":"string","title":"string_OjNcTNl5"},"name":{"description":"is the human-readable name of this blockchain.","type":"string","title":"string_DKEc8I2F"},"subnetID":{"description":"is the ID of the Subnet that validates this blockchain.","type":"string","title":"string_inKlYZ6f"},"vmID":{"description":"is the ID of the Virtual Machine the blockchain runs.","type":"string","title":"string_ufYDgkNc"}},"title":"objectOf_string_ufYDgkNc_string_inKlYZ6f_string_DKEc8I2F_string_OjNcTNl5_AAFPeeNo"}}},"examples":[{"name":"getBlockchainsExample","params":[],"result":{"name":"getBlockchainsResultExample","value":{"blockchains":[{"id":"ta1bV7y93DDiU6x9YgkUf89L5TS7h8wFDDKi8HjWezrTgAMy9","name":"C Chain PoW","subnetID":"2dc3NncNG29XHsByJSVAHwEgYT3XFtR3b4zPxi5KFr7eeCr6QX","vmID":"mgj786NP7uDwBCcq6YwThhaN8FLyybkCa4zBWTQbNgmK6k9A6"},{"id":"2YdeqYZZfGzhz6guB7f8kmg3QxhjEKwKnbbWUksNRHcF64eLcY","name":"X Chain PoW","subnetID":"2dc3NncNG29XHsByJSVAHwEgYT3XFtR3b4zPxi5KFr7eeCr6QX","vmID":"jvYyfQTxGMJLuGWa55kdP2p2zSUYsQ5Raupu4TW34ZAUBAbtq"}]}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getBlockchainStatus","summary":"Get the status of a blockchain.","params":[{"name":"blockchainID","required":true,"schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"getBlockchainStatusResult","description":"status is one of:\n Validating: The blockchain is being validated by this node.\n Created: The blockchain exists but isn’t being validated by this node.\n Preferred: The blockchain was proposed to be created and is likely to be created but the transaction isn’t yet accepted.\n Unknown: The blockchain either wasn’t proposed or the proposal to create it isn’t preferred. The proposal may be resubmitted.","schema":{"title":"status","type":"string"}},"examples":[{"name":"getBlockchainStatusExample","params":[{"name":"blockchainID","value":{"blockchainID":"11111111111111111111111111111111LpoYY"}}],"result":{"name":"getBlockchainStatusResultExample","value":{"status":"Syncing"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getCurrentSupply","summary":"Returns an upper bound on the number of AVAX that exist. This is an upper bound because it does not account for burnt tokens, including transaction fees.","params":[],"result":{"name":"getCurrentSupplyResult","description":"is an upper bound on the number of AVAX that exist, denominated in nAVAX.","schema":{"title":"supply","type":"number"}},"examples":[{"name":"getCurrentSupplyExample","params":[],"result":{"name":"getCurrentSupplyResultExample","value":{"supply":"387034884080126750"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getCurrentValidators","summary":"List the current validators of the given Subnet.","params":[{"name":"subnetID","description":"is the subnet whose current validators are returned. If omitted, returns the current validators of the Primary Network.","schema":{"type":"string","title":"string_doaGddGA"}},{"name":"nodeIDs","description":"is a list of the nodeIDs of current validators to request. If omitted, all current validators are returned. If a specified nodeID is not in the set of current validators, it will not be included in the response.","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"getCurrentValidatorsResult","schema":{"title":"validators","type":"array","items":{"type":"object","properties":{"txID":{"title":"txID","type":"string","description":"is the validator transaction."},"startTime":{"description":" s the Unix time when the validator starts validating the Subnet.","type":"number","title":"number_ckPiL9t4"},"endTime":{"description":"is the Unix time when the validator stops validating the Subnet.","type":"number","title":"number_x6pqqnTc"},"stakeAmount":{"description":"is the amount of nAVAX this validator staked. Omitted if subnetID is not the Primary Network","type":"number","title":"number_Zljb5zOi"},"nodeID":{"type":"string","title":"string_doaGddGA"},"rewardOwner":{"type":"object","properties":{"locktime":{"type":"number","title":"number_Ho1clIqD"},"threshold":{"type":"number","title":"number_Ho1clIqD"},"addresses":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^P-[a-fA-F\\d]{43}$"}}},"title":"objectOf_number_Ho1clIqD_number_Ho1clIqD_addresses_nHhcVYMt"},"potentialReward":{"type":"number","title":"number_Ho1clIqD"},"delegationFee":{"type":"number","title":"number_Ho1clIqD"},"uptime":{"type":"number","title":"number_Ho1clIqD"},"connected":{"type":"boolean","title":"boolean_vyG3AETh"},"delegators":{"type":"array","items":{"type":"object","properties":{"txID":{"title":"txID","type":"string","description":"is the validator transaction."},"startTime":{"description":"is the Unix time when the validator starts validating the Subnet.","type":"number","title":"number_ZS0MMx1A"},"endTime":{"description":"is the Unix time when the validator stops validating the Subnet.","type":"number","title":"number_x6pqqnTc"},"stakeAmount":{"description":"is the amount of nAVAX this validator staked. Omitted if subnetID is not the Primary Network","type":"number","title":"number_Zljb5zOi"},"nodeID":{"description":"is the validator’s node ID.","type":"string","title":"string_U14URhxQ"},"rewardOwner":{"type":"object","properties":{"locktime":{"type":"number","title":"number_Ho1clIqD"},"threshold":{"type":"number","title":"number_Ho1clIqD"},"addresses":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^P-[a-fA-F\\d]{43}$"}}},"title":"objectOf_number_Ho1clIqD_number_Ho1clIqD_addresses_nHhcVYMt"},"potentialReward":{"type":"number","title":"number_Ho1clIqD"}},"title":"objectOf_txID_number_ZS0MMx1A_number_Zljb5zOi_objectOf_number_Ho1clIqD_number_Ho1clIqD_addresses_nHhcVYMt_number_Ho1clIqD_string_U14URhxQ_number_x6pqqnTc_K2oaXAFy"},"title":"unorderedSetOf_objectOf_txID_number_ZS0MMx1A_number_Zljb5zOi_objectOf_number_Ho1clIqD_number_Ho1clIqD_addresses_nHhcVYMt_number_Ho1clIqD_string_U14URhxQ_number_x6pqqnTc_K2oaXAFytx2AdPt8"}},"title":"objectOf_number_Ho1clIqD_txID_number_ckPiL9t4_number_Zljb5zOi_objectOf_number_Ho1clIqD_number_Ho1clIqD_addresses_nHhcVYMt_number_Ho1clIqD_string_doaGddGA_number_x6pqqnTc_unorderedSetOf_objectOf_txID_number_ZS0MMx1A_number_Zljb5zOi_objectOf_number_Ho1clIqD_number_Ho1clIqD_addresses_nHhcVYMt_number_Ho1clIqD_string_U14URhxQ_number_x6pqqnTc_K2oaXAFytx2AdPt8_number_Ho1clIqD_boolean_vyG3AETh_hpZBWZ54"}}},"examples":[{"name":"getCurrentValidatorsExample","params":[{"name":"validators","value":{"subnetID":null,"nodeIDs":[]}}],"result":{"name":"getCurrentValidatorsResultExample","value":{"validators":[{"txID":"2tkoDiYeL5pzLTTd7vYu44sxHn1qzSnvDo3tPBRAA3dHei5Wqj","startTime":"1625874715","endTime":"1627689638","stakeAmount":"2030697338573","nodeID":"NodeID-G3wqVNTivZYAJXNADe5UNdPXSUgfmAK3n","rewardOwner":{"locktime":"0","threshold":"1","addresses":["P-avax15n95k8u6vlzw95nm654tlena5wdu5rmd6gjtt2"]},"potentialReward":"10186594659","delegationFee":"2.0000","uptime":"0.0001","connected":false,"delegators":null},{"txID":"2NtNfdCkmHFQAkT2evzziqh6r8zgkfYn1GHma4TwFWBsVVzoFt","startTime":"1624670764","endTime":"1627695301","stakeAmount":"2000000000000","nodeID":"NodeID-22F5CwB9PSEeuXbkrHeZ9c4CYQQUpP8xJ","rewardOwner":{"locktime":"0","threshold":"1","addresses":["P-avax14dg5hevhgxaypg7958zgy3h3rgmfr799hptzdu"]},"potentialReward":"16901476329","delegationFee":"2.0000","uptime":"0.9939","connected":true,"delegators":[{"txID":"2nor6559sCpEuAwHGSuPq9n5fcdjYsbF6Ef2sQGNru2SixqA8s","startTime":"1625068269","endTime":"1627695301","stakeAmount":"25000000000","nodeID":"NodeID-22F5CwB9PSEeuXbkrHeZ9c4CYQQUpP8xJ","rewardOwner":{"locktime":"0","threshold":"1","addresses":["P-avax1uxu3dlqd7h3pqltx5vnj8aa5upmd5wwgdsa9rs"]},"potentialReward":"183024616"}]}]}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getHeight","summary":"Returns the height of the last accepted block.","params":[],"result":{"name":"getHeightResult","schema":{"title":"height","type":"number"}},"examples":[{"name":"getHeightExample","params":[],"result":{"name":"getHeightResultExample","value":{"height":"663215"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getMinStake","summary":"Get the minimum amount of AVAX required to validate the Primary Network and the minimum amount of AVAX that can be delegated.","params":[],"result":{"name":"getMinStakeResult","schema":{"type":"object","properties":{"minValidatorStake":{"type":"number","title":"number_Ho1clIqD"},"minDelegatorStake":{"type":"number","title":"number_Ho1clIqD"}}}},"examples":[{"name":"getMinStakeExample","params":[],"result":{"name":"getMinStakeResultExample","value":{"minValidatorStake":"2000000000000","minDelegatorStake":"25000000000"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getPendingValidators","summary":"List the validators in the pending validator set of the specified Subnet. Each validator is not currently validating the Subnet but will in the future.","params":[{"name":"subnetID","description":"is the subnet whose current validators are returned. If omitted, returns the current validators of the Primary Network.","schema":{"type":"string","title":"string_doaGddGA"}},{"name":"nodeIDs","description":"is a list of the nodeIDs of current validators to request. If omitted, all current validators are returned. If a specified nodeID is not in the set of current validators, it will not be included in the response.","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"getPendingValidatorsResult","schema":{"title":"validators","type":"object","properties":{"validators":{"type":"array","items":{"type":"object","properties":{"txID":{"title":"txID","type":"string","description":"is the validator transaction."},"startTime":{"description":"is the Unix time when the validator starts validating the Subnet.","type":"number","title":"number_ZS0MMx1A"},"endTime":{"description":"is the Unix time when the validator stops validating the Subnet.","type":"number","title":"number_x6pqqnTc"},"stakeAmount":{"description":"is the amount of nAVAX this validator staked. Omitted if subnetID is not the Primary Network","type":"number","title":"number_Zljb5zOi"},"nodeID":{"description":"is the validator’s node ID.","type":"string","title":"string_U14URhxQ"},"delegationFee":{"type":"number","title":"number_Ho1clIqD"},"connected":{"description":"if the node is connected.","type":"boolean","title":"boolean_mqW2Gfal"}},"title":"objectOf_txID_number_ZS0MMx1A_number_Zljb5zOi_string_U14URhxQ_number_x6pqqnTc_number_Ho1clIqD_boolean_mqW2Gfal_C3Tj2OYE"},"title":"unorderedSetOf_objectOf_txID_number_ZS0MMx1A_number_Zljb5zOi_string_U14URhxQ_number_x6pqqnTc_number_Ho1clIqD_boolean_mqW2Gfal_C3Tj2OYElguK8z1w"}},"delegators":{"type":"array","items":{"type":"object","properties":{"txID":{"description":"is the validator transaction.","$ref":"#/components/schemas/TxID"},"startTime":{"$ref":"#/components/schemas/StartTime"},"endTime":{"$ref":"#/components/schemas/EndTime"},"stakeAmount":{"$ref":"#/components/schemas/StakeAmount"},"nodeID":{"$ref":"#/components/schemas/NodeID"}}}}}},"examples":[{"name":"getPendingValidatorsExample","params":[{"name":"validators","value":{"subnetID":null,"nodeIDs":[]}}],"result":{"name":"getPendingValidatorsResultExample","value":{"validators":[],"delegators":[]}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getRewardUTXOs","summary":"Returns the UTXOs that were rewarded after the provided transaction's staking or delegation period ended.","params":[{"name":"txID","required":true,"description":"is the ID of the staking or delegating transaction.","schema":{"title":"txID","type":"string"}},{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}],"result":{"name":"getRewardUTXOsResult","schema":{"type":"object","properties":{"numFetched":{"type":"number","title":"number_Ho1clIqD"},"utxos":{"type":"array","items":{"type":"string","title":"string_doaGddGA"},"title":"unorderedSetOf_string_doaGddGADvj0xlFa"}}}},"examples":[{"name":"getRewardUTXOsExample","params":[{"name":"txID","value":{"txID":"2nmH8LithVbdjaXsxVQCQfXtzN9hBbmebrsaEYnLM9T32Uy2Y4"}}],"result":{"name":"getRewardUTXOsResultExample","value":{"numFetched":"2","utxos":["11Zf8cc55Qy1rVgy3t87MJVCSEu539whRSwpdbrtHS6oh5Hnwv1gz8G3BtLJ73MPspLkD93cygZufT4TPYZCmuxW5cRdPrVMbZAHfb6uyGM1jNGBhBiQAgQ6V1yceYf825g27TT6WU4bTdbniWdECDWdGdi84hdiqSJH2y","11Zf8cc55Qy1rVgy3t87MJVCSEu539whRSwpdbrtHS6oh5Hnwv1NjNhqZnievVs2kBD9qTrayBYRs91emGTtmnu2wzqpLstbAPJDdVjf3kjwGWywNCdjV6TPGojVR5vHpJhBVRtHTQXR9VP9MBdHXge8zEBsQJAoZhTbr2"],"encoding":"cb58"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getStakingAssetID","summary":"Retrieve an assetID for a subnet’s staking asset. Currently, this only returns the Primary Network’s staking assetID.","params":[{"name":"subnetID","description":" is the subnet whose assetID is requested.","schema":{"type":"string","title":"string_doaGddGA"}},{"name":"assetID","required":true,"description":" is the assetID for a subnet’s staking asset.","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"getStakingAssetIDResult","schema":{"title":"assetID","type":"object","properties":{"numFetched":{"type":"number","title":"number_Ho1clIqD"},"utxos":{"type":"array","items":{"type":"string","title":"string_doaGddGA"},"title":"unorderedSetOf_string_doaGddGADvj0xlFa"}}}},"examples":[{"name":"getStakingAssetIDExample","params":[],"result":{"name":"getStakingAssetIDResultExample","value":{"assetID":"FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getSubnets","summary":"Get info about the Subnets.","params":[{"name":"ids","description":" is the subnet whose assetID is requested.","required":true,"schema":{"title":"ids","type":"array","items":{"type":"string","title":"string_doaGddGA"}}}],"result":{"name":"getSubnetsResult","schema":{"title":"subnets","type":"object","properties":{"id":{"type":"string","title":"string_doaGddGA"},"controlKeys":{"type":"array","items":{"type":"string","title":"string_doaGddGA"},"threshold":{"type":"number"},"title":"unorderedSetOf_string_doaGddGA8Uulm6iQ"}}}},"examples":[{"name":"getSubnetsExample","params":[],"result":{"name":"getSubnetsResultExample","value":{"subnets":[{"id":"LLDx2QFUaxDwzdVmyLMJVQ13SBXb49L6VvbhFtLkNzFvKsMfJ","controlKeys":["P-avax14mzgygnzng8ck2luxctlz3pjl7hjrgpnmquddy","P-avax16te45r7l8hq4d7nha8gqv4pmg7kwr9azrhdzll"],"threshold":"2"},{"id":"uAc3jrvkuacxsAHAX8aFfYdxxA87Wsood2mdQtNHNEG7fR2bm","controlKeys":["P-avax14mzgygnzng8ck2luxctlz3pjl7hjrgpnmquddy","P-avax16te45r7l8hq4d7nha8gqv4pmg7kwr9azrhdzll"],"threshold":"2"}]}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getStake","summary":"Get the amount of nAVAX staked by a set of addresses. The amount returned does not include staking rewards.","params":[{"name":"addresses","required":true,"schema":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^P-[a-fA-F\\d]{43}$"}}}],"result":{"name":"getStakeResult","schema":{"title":"staked","type":"number"}},"examples":[{"name":"getBlockchainStatusExample","params":[{"name":"Address","value":{"addresses":["P-avax1skrhcldnmsflmnf9dja2v9fdxcyapmw7lu97mh"]}}],"result":{"name":"getBlockchainStatusResultExample","value":{"staked":"18000000000000","stakedOutputs":["11CgK12iK1vdfQGvwDfWeorU1gs2fgBJh1RNeaKqK1G8KbK8opRGYhPv1uZSCJffph8eh83wjf6j9YGsX94UCnFbijemszc7p2Qx1uhU7xyWXTB7ZLsTjgocTiLLaXwMZLiMk","11CgK12iK1vdfQGvwDfWeorU1gs2fgBJh1RNeaKqK1G8KbK8opRGYhPv1vHfD18QAMmY9XMoU5Kv6skYidQi8PGzsb6TYb2QXv31voiqBQ8ePqNEhGrfb1CbscwGbvQSchobE","11CgK12iK1vdfQGvwDfWeorU1gs2fgBJh1RNeaKqK1G8KbK8opRGYhPv1vHfD18QAMmY9XMzzh53PBG8C8mJvVaryBRVfrNDy2hB9f4rvDqo5D6LYcdqTXJJeM2TjdRhup5og","11CgK12iK1vdfQGvwDfWeorU1gs2fgBJh1RNeaKqK1G8KbK8opRGYhPv1w1tDhb8W2QRbvgTHofjHf6XJpaqQ6nYiX8JDsCFYuKc8joTUL3bG9R8kTyMbSN25h7oTXnbxz6Lc"],"encoding":"cb58"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getTotalStake","summary":"Get the total amount of nAVAX staked on the Primary Network.","params":[],"result":{"name":"getTotalStakeResult","schema":{"title":"stake","type":"number"}},"examples":[{"name":"getTotalStakeExample","params":[],"result":{"name":"getTotalStakeResultExample","value":{"stake":"217247125482267554"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getTx","summary":"Gets a transaction by its ID.","params":[{"name":"txID","required":true,"schema":{"title":"txID","type":"string"}},{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}],"result":{"name":"getTxResult","schema":{"title":"subnets","type":"object","properties":{"tx":{"type":"string","title":"string_doaGddGA"},"encoding":{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}}}},"examples":[{"name":"getTxExample","params":[{"name":"txID","value":{"txID":"2tkoDiYeL5pzLTTd7vYu44sxHn1qzSnvDo3tPBRAA3dHei5Wqj"}}],"result":{"name":"getTxResultExample","value":{"tx":"111117dhRHcpR3NN84kmPbVTQdf8ZUhDVKYVGj2cWTeEu4souqdazKGBuhPuvGmwDVowZpAhmoxv7cdi9PxbxhMbe8121EJEmVbwHC4F3zigTz15bf12qaJf8r6vECwve1iWZvuJrnAthkuhVwYLZ5Pd51EEjm16AJ4gFa7zwXeVjY3YoVoqPyChKpcR2inDu73sxUkNCYUeg9dSwR2RUTvBMQb8CeH7YR6eYSmbM87vKySnEYcFhLCrUH9skjn1Uc8rg4uK9QAEiKGjC6fnh2JMnJNY2Dv5f4zxRn5b1H2549yZJ5ngaHVSxHMxTvpZex3C2WP5B5pXqBrrpePRULS6RXVyrkQYX9ctrYfVoRjskKq7f5ZzTPH6bmJUWUtJLLRvQt3pUR8ikRLfSNHCpq8n4RNmZuwLYiUWQMGn6zRJNQusrzFsKLdykvVSGkEza9Cq7cbNJrG4cJwD3DGSm9mNzXoQ71ogEG6SBZ4LPQ2xtbzKE6R8gsS4ipWfYJpCKwgho7Ae6dvfcW3uQZvEDxiprVs5UbbW9EAMffUJz3HAqzbknBTNF1VUA5ovyxGX74cVq5MnVfX5ouXfvqnnCekEZh7NxHkWF6qBvNKDfa541Aaum6ENJ8s5mniZsWzXiCdHZRTQJ7ZT6Vj2aerb86V15FEKpWJ2SPtCP9tdRqYfPnBae6xhRLFocc3dyva5qWmMkELsKbD4D92uFEAdc1kAUgMDfg5THsYQTrLocAurihfnqMXKzmeiZBZmb78h5amiDUqyffCotNXgZBXw5WiqAeyWsKT8wSmeWATDV3EfUJztqkHjEqwMjowS3rUVpBdyPUawy9n2QqN1mYvLp8ogJNLbvTUpQ9NjauVNA6tfWC56oBbqYqPdbbNhFctyCPkJ9yf4Kyg5YgdqrWVu4SzBAetEjxNmaPgJvm8WX48nJJ16asL2CHQaPpadKAFzB3dDcxozYXUi78rAVVXQSNm6Y8VFKws7wWmUb6eFNYuA8h7ngNbwSG5q6uLCMFg7HZe2CNoV57gyYWfsi676umnpoeL8sD6hHnW3pzewPBjKTNetjgVSzESSN9iw6uo6SovDXSteNMfnPJhYJXwffeEmP46ECnbCe24hjzjEqAtkMYMFa6AV1H5inmRWoQYuhH9xPdQmR7ZfJTzpvrSvS6Qqsp6AuwG6AXEGzfw1cVJTW","encoding":"cb58"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getTxStatus","summary":"Gets a transaction’s status by its ID. If the transaction was dropped, response will include a reason field with more information why the transaction was dropped.","params":[{"name":"txID","required":true,"schema":{"title":"txID","type":"string"}}],"result":{"name":"getTxStatusResult","description":"status is one of:\n Validating: The blockchain is being validated by this node.\n Created: The blockchain exists but isn’t being validated by this node.\n Preferred: The blockchain was proposed to be created and is likely to be created but the transaction isn’t yet accepted.\n Unknown: The blockchain either wasn’t proposed or the proposal to create it isn’t preferred. The proposal may be resubmitted.","schema":{"title":"status","type":"string"}},"examples":[{"name":"getTxStatusExample","params":[{"name":"txID","value":{"txID":"2nmH8LithVbdjaXsxVQCQfXtzN9hBbmebrsaEYnLM9T32Uy2Y4"}}],"result":{"name":"getTxStatusResultExample","value":{"status":"Committed"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.getUTXOs","summary":"Gets the UTXOs that reference a given set of addresses.","params":[{"name":"addresses","required":true,"schema":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^P-[a-fA-F\\d]{43}$"}}},{"name":"limit","description":"If startIndex is omitted, will fetch all UTXOs up to limit.","schema":{"type":"number","title":"number_Ho1clIqD"}},{"name":"startIndex","schema":{"type":"object","properties":{"address":{"type":"string","title":"string_doaGddGA"},"utxo":{"type":"string","title":"string_doaGddGA"}},"title":"objectOf_string_doaGddGA_string_doaGddGA_4SZgw1s0"}},{"name":"sourceChain","schema":{"type":"string","title":"string_doaGddGA"}},{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}],"result":{"name":"getUTXOsResult","schema":{"type":"object","properties":{"numFetched":{"type":"number","title":"number_Ho1clIqD"},"utxos":{"type":"array","items":{"type":"string","title":"string_doaGddGA"},"title":"unorderedSetOf_string_doaGddGADvj0xlFa"},"endIndex":{"type":"object","properties":{"address":{"title":"address","type":"string","pattern":"^P-[a-fA-F\\d]{43}$"},"utxo":{"type":"string","title":"string_doaGddGA"}},"title":"objectOf_string_doaGddGA_address_tUFok2iX"},"encoding":{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}}}},"examples":[{"name":"getUTXOsExample","params":[{"name":"Addresses","value":{"addresses":["P-avax1skrhcldnmsflmnf9dja2v9fdxcyapmw7lu97mh"],"sourceChain":"X","limit":5}}],"result":{"name":"getUTXOsResultExample","value":{"numFetched":"0","utxos":[],"endIndex":{"address":"P-avax1skrhcldnmsflmnf9dja2v9fdxcyapmw7lu97mh","utxo":"11111111111111111111111111111111LpoYY"},"encoding":"cb58"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.issueTx","summary":"Issue a transaction to the Platform Chain.","params":[{"name":"tx","required":true,"schema":{"type":"string","title":"string_doaGddGA"}},{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}],"result":{"name":"issueTxResult","schema":{"title":"txID","type":"string"}},"examples":[{"name":"issueTxExample","params":[{"name":"txID","value":{"tx":"111Bit5JNASbJyTLrd2kWkYRoc96swEWoWdmEhuGAFK3rCAyTnTzomuFwgx1SCUdUE71KbtXPnqj93KGr3CeftpPN37kVyqBaAQ5xaDjr7wVBTUYi9iV7kYJnHF61yovViJF74mJJy7WWQKeRMDRTiPuii5gsd11gtNahCCsKbm9seJtk2h1wAPZn9M1eL84CGVPnLUiLP"}}],"result":{"name":"issueTxResultExample","value":{"txID":"G3BuH6ytQ2averrLxJJugjWZHTRubzCrUZEXoheG5JMqL5ccY"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.sampleValidators","summary":"Sample validators from the specified Subnet.","params":[{"name":"size","description":"is the number of validators to sample.","required":true,"schema":{"type":"number","title":"number_Ho1clIqD"}},{"name":"subnetID","description":" is the Subnet to sampled from. If omitted, defaults to the Primary Network.","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"sampleValidatorsResult","description":"Each element of validators is the ID of a validator.","schema":{"type":"array","items":{"type":"string","title":"string_doaGddGA"}}},"examples":[{"name":"sampleValidatorsExample","params":[{"name":"size","value":{"size":5}}],"result":{"name":"sampleValidatorsResultExample","value":{"validators":["NodeID-2HvkjoRiMzEcZgpWKNAruLKNv9r7Lb2pv","NodeID-D3onstuMsGRctDjbksXU6BV3rrCbWHkB9","NodeID-KNLkh3KVKFFhBWujmcZ5P3p2fJc3BbdNA","NodeID-LxrJtyQXpdweZH7LR3ujcEQZJ9VDTW3tC","NodeID-NkYLNRp4S6exbWamVvMzUUpXvHeVEzLR6"]}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.validatedBy","summary":"Get the Subnet that validates a given blockchain.","params":[{"name":"blockchainID","description":"is the blockchain’s ID.","required":true,"schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"validatedByResult","description":"is the ID of the Subnet that validates the blockchain.","schema":{"title":"subnetID","type":"string"}},"examples":[{"name":"validatedByExample","params":[{"name":"blockchainID","value":{"blockchainID":"2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"}}],"result":{"name":"validatedByResultExample","value":{"subnetID":"11111111111111111111111111111111LpoYY"}}}]},{"tags":[{"name":"/bc/P"}],"name":"platform.validates","summary":"Get the IDs of the blockchains a Subnet validates.","params":[{"name":"subnetID","description":"subnetID is the Subnet’s ID.","required":true,"schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"validatesResult","description":"Each element of blockchainIDs is the ID of a blockchain the Subnet validates.","schema":{"title":"blockchainIDs","type":"array","items":{"type":"string","title":"string_doaGddGA"}}},"examples":[{"name":"validatesExample","params":[{"name":"subnetID","value":{"subnetID":"11111111111111111111111111111111LpoYY"}}],"result":{"name":"validatesResultExample","value":{"blockchainIDs":["2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5","2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"]}}}]},{"tags":[{"name":"/info"}],"name":"info.getBlockchainID","summary":"Given a blockchain’s alias, get its ID.","params":[{"name":"alias","required":true,"description":"alias X,P or C","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"getBlockchainIDResult","schema":{"type":"string"}},"examples":[{"name":"getBlockchainIDExample","params":[{"name":"TransactionHash","value":{"alias":"X"}}],"result":{"name":"getBlockchainIDResultExample","value":"0x5508f1e4304cdc7d1f601e8e0322629ddcfb4ad1b1858d09e6c0b78bc097e863"}}]},{"tags":[{"name":"/info"}],"name":"info.getNetworkID","summary":"Get the ID of the network this node is participating in.","params":[],"result":{"name":"getNetworkIDResult","schema":{"type":"number"}},"examples":[{"name":"getNetworkIDExample","params":[],"result":{"name":"getNetworkIDResultExample","value":{"networkID":"1"}}}]},{"tags":[{"name":"/info"}],"name":"info.getNetworkName","summary":"Get the name of the network this node is participating in.","params":[],"result":{"name":"getNetworkNameResult","schema":{"type":"string"}},"examples":[{"name":"getNetworkNameExample","params":[],"result":{"name":"getNetworkNameResultExample","value":{"networkName":"mainnet"}}}]},{"tags":[{"name":"/info"}],"name":"info.getNodeVersion","summary":"Get the version of this node.","params":[],"result":{"name":"getNodeVersionResult","schema":{"type":"object","properties":{"version":{"description":"is this node's version","type":"string","title":"string_9OVXUiHX"},"databaseVersion":{"description":"is the version of the database this node is using","type":"string","title":"string_onhjWyns"},"gitCommit":{"description":"is the Git commit that this node was built from","type":"string","title":"string_gn1XszHY"},"vmVersions":{"description":"is map where each key/value pair is the name of a VM, and the version of that VM this node runs","type":"object","properties":{"avm":{"type":"string","title":"string_doaGddGA"},"evm":{"type":"string","title":"string_doaGddGA"},"platform":{"type":"string","title":"string_doaGddGA"}},"title":"objectOf_string_doaGddGA_string_doaGddGA_string_doaGddGA_5OHTjo2U"}}}},"examples":[{"name":"getNodeVersionExample","params":[],"result":{"name":"getNodeVersionResultExample","value":{"version":"avalanche/1.4.12","databaseVersion":"v1.4.5","gitCommit":"507233ad896c8d64567c450cd9b4ad971d98cee8","vmVersions":{"avm":"v1.4.12","evm":"v0.5.7-rc.1","platform":"v1.4.12"}}}}]},{"tags":[{"name":"/info"}],"name":"info.isBootstrapped","summary":"Check whether a given chain is done bootstrapping","params":[{"name":"chain","required":true,"description":"chain X, P or C","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"isBootstrappedResult","schema":{"tile":"isBootstrapped","type":"boolean"}},"examples":[{"name":"isBootstrappedExample","params":[{"name":"chain","value":{"chain":"X"}}],"result":{"name":"isBootstrappedResultExample","value":{"networkName":"mainnet"}}}]},{"tags":[{"name":"/info"}],"name":"info.peers","summary":"Get a description of peer connections.","params":[{"name":"nodeIDs","description":"is an optional parameter to specify what nodeID's descriptions should be returned. If this parameter is left empty, descriptions for all active connections will be returned. If the node is not connected to a specified nodeID, it will be omitted from the response.","schema":{"tile":"nodeIDs","type":"array","items":{"type":"string","title":"string_doaGddGA"},"title":"unorderedSetOf_string_doaGddGARCi5aHUB"}}],"result":{"name":"peersResult","schema":{"type":"object","properties":{"numPeers":{"type":"number","title":"number_Ho1clIqD"},"peers":{"type":"array","items":{"type":"object","properties":{"ip":{"type":"string","title":"string_doaGddGA"},"publicIP":{"type":"string","title":"string_doaGddGA"},"nodeID":{"type":"string","title":"string_doaGddGA"},"version":{"type":"string","title":"string_doaGddGA"},"lastSent":{"type":"string","title":"string_doaGddGA"},"lastReceived":{"type":"string","title":"string_doaGddGA"}},"title":"objectOf_string_doaGddGA_string_doaGddGA_string_doaGddGA_string_doaGddGA_string_doaGddGA_string_doaGddGA_MtoeI6ie"},"title":"unorderedSetOf_objectOf_string_doaGddGA_string_doaGddGA_string_doaGddGA_string_doaGddGA_string_doaGddGA_string_doaGddGA_MtoeI6ieJMY8TQNp"}}}},"examples":[{"name":"peersExample","params":[],"result":{"name":"peersResultExample","value":[{"ip":"3.128.138.36:9651","publicIP":"3.128.138.36:9651","nodeID":"NodeID-9CkG9MBNavnw7EVSRsuFr7ws9gascDQy3","version":"avalanche/1.4.12","lastSent":"2021-07-30T10:57:12Z","lastReceived":"2021-07-30T10:57:12Z","benched":[]},{"ip":"3.23.198.85:9651","publicIP":"3.23.198.85:9651","nodeID":"NodeID-2Acrc5w3sGyPD649vtLpfYreyjWWnofU4","version":"avalanche/1.4.10","lastSent":"2021-07-30T10:57:09Z","lastReceived":"2021-07-30T10:57:09Z","benched":[]}]}}]},{"tags":[{"name":"/info"}],"name":"info.getTxFee","summary":"Get the fees of the network.","params":[],"result":{"name":"getTxFeeResult","schema":{"type":"object","properties":{"creationTxFee":{"type":"number","title":"number_Ho1clIqD"},"txFee":{"type":"number","title":"number_Ho1clIqD"}}}},"examples":[{"name":"getTxFeeExample","params":[],"result":{"name":"getTxFeeResultExample","value":{"creationTxFee":"10000000","txFee":"1000000"}}}]},{"tags":[{"name":"/bc/C/rpc"}],"name":"eth_blockNumber","summary":"Returns the number of most recent block.","params":[],"result":{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}},"examples":[{"name":"blockNumberExample","params":[],"result":{"name":"blockNumberResultExample","value":"0x2b2340"}}]},{"tags":[{"name":"/bc/C/rpc"}],"name":"eth_call","summary":"Executes a new message call (locally) immediately without creating a transaction on the block chain.","params":[{"required":true,"name":"transaction","schema":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}},{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"returnValue","description":"The return value of the executed contract","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"examples":[{"name":"callExample","params":[{"name":"address","value":{"to":"0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7","data":"0xc92aecc4"}},{"name":"blockNumber","value":"latest"}],"result":{"name":"callResultExample","value":"0x"}}]},{"tags":[{"name":"/bc/C/rpc"}],"name":"eth_chainId","summary":"Returns the currently configured chain id","description":"Returns the currently configured chain id, a value used in replay-protected transaction signing as introduced by [EIP-155](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md).","params":[],"result":{"name":"chainId","description":"hex format integer of the current chain id. Defaults are ETC=61, ETH=1, Morden=62.","schema":{"title":"chainId","type":"string","pattern":"^0x[a-fA-F\\d]+$"}},"examples":[{"name":"chainIdExample","params":[],"result":{"name":"chainIdResultExample","value":"0xa86a"}}]},{"tags":[{"name":"/bc/C/rpc"}],"name":"eth_getAssetBalance","summary":"Returns balance of first class Avalanche Native Tokens on the C-Chain","params":[{"name":"address","required":true,"description":"owner of the asset","schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"blockNumber","required":true,"description":"the block number or hash at which to retrieve the balance","schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}},{"name":"assetID","required":true,"description":"id of the asset for which the balance is requested","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"getAssetBalanceResult","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getAssetBalanceExample","params":[{"name":"0x233a0248528e82f0D3d9Ab932f255a9667154E8C","value":"latest"},{"name":"blockNumber","value":"latest"},{"name":"assetID","value":"FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"}],"result":{"name":"getAssetBalanceResultExample","value":"0x0"}}]},{"tags":[{"name":"/bc/C/rpc"}],"name":"eth_getBalance","summary":"Returns AVAX balance of a given or account or contract","params":[{"name":"address","required":true,"description":"The address of the account or contract","schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"blockNumber","description":"A BlockNumber at which to request the balance","schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}}],"result":{"name":"getBalanceResult","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBalanceExample","params":[{"name":"Address","value":"0x233a0248528e82f0D3d9Ab932f255a9667154E8C"},{"name":"BlockNumber","value":"latest"}],"result":{"name":"getBalanceResultExample","value":{"txID":"NUPLwbt2hsYxpQg4H2o451hmTWQ4JZx2zMzM4SinwtHgAdX1JLPHXvWSXEnpecStLj"}}}]},{"tags":[{"name":"/bc/C/rpc"}],"name":"eth_signTransaction","summary":"Signs a transaction that can be submitted to the network at a later time using with eth_sendRawTransaction.","params":[{"name":"Transaction","required":true,"schema":{"title":"signTransaction","type":"object","required":["data","from","gas","gasPrice","to","value"],"properties":{"data":{"type":"string","title":"string_doaGddGA"},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"}}}}],"result":{"name":"Encoded transaction","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}}},{"tags":[{"name":"/bc/C/rpc"}],"name":"eth_getTransactionCount","summary":"Returns the number of transactions sent from an address","params":[{"name":"address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"transactionCount","schema":{"title":"nonceOrNull","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionCountExample","params":[{"name":"Address","value":"0xE17Ea0479beF107fe23AeCD9d984fcE6FD96dCa6"},{"name":"BlockNumber","value":"latest"}],"result":{"name":"getTransactionCountResultExample","value":"0x42"}}]},{"tags":[{"name":"/bc/C/rpc"}],"name":"eth_sendRawTransaction","summary":"Creates new message call transaction or a contract creation for signed transactions.","params":[{"name":"signedTransactionData","required":true,"description":"The signed transaction data","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}}],"result":{"name":"transactionHash","description":"The transaction hash, or the zero hash if the transaction is not yet available.","schema":{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"}}},{"tags":[{"name":"/bc/C/rpc"}],"name":"eth_getBlockByHash","summary":"Gets a block for a given hash","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"includeTransactions","description":"If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.","required":true,"schema":{"title":"isTransactionsIncluded","type":"boolean"}}],"result":{"name":"getBlockByHashResult","schema":{"title":"blockOrNull","oneOf":[{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBlockByHashExample","params":[{"name":"Address","value":"0xe20b733bd281ee2fa40dc6b4c3b61fb152356b02cd111a885ac3d81e84bcf8e6"},{"name":"isTransactionsIncluded","value":true}],"result":{"name":"getBlockByHashExampleResult","value":{"blockExtraData":"0x","difficulty":"0x1","extDataHash":"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421","extraData":"0x","gasLimit":"0x7a1200","gasUsed":"0x1fa79","hash":"0xe20b733bd281ee2fa40dc6b4c3b61fb152356b02cd111a885ac3d81e84bcf8e6","logsBloom":"0xminer":"0x0100000000000000000000000000000000000000","mixHash":"0x0000000000000000000000000000000000000000000000000000000000000000","nonce":"0x0000000000000000","number":"0x2b2467","parentHash":"0xb4b0343c9557772d16460be8866e807c82d0835ad96dd10642c20a1dd7f4fd44","receiptsRoot":"0x75e95716f026716f8a39599f32e5e875f7bac8afe8e64cfa0d389bcc5563ccc2","sha3Uncles":"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347","size":"0x382","stateRoot":"0x8e09d050f1fb71cc01d16d5d03994cf26d37477c0049fb8efeb6b766060bd040","timestamp":"0x61049d85","totalDifficulty":"0x2b2467","transactions":[{"blockHash":"0xe20b733bd281ee2fa40dc6b4c3b61fb152356b02cd111a885ac3d81e84bcf8e6","blockNumber":"0x2b2467","from":"0x741d2cbf05ccdcaf537692ebdeb1dd86039d6db7","gas":"0x2383d","gasPrice":"0x34630b8a00","hash":"0x8faf3db0288f9abbbae9e9ab8552a21a62cb85596f53c08c9b68727ba098c094","input":"0xa2a1623d000000000000000000000000000000000000000000000043e0c5c0f891de4d860000000000000000000000000000000000000000000000000000000000000080000000000000000000000000741d2cbf05ccdcaf537692ebdeb1dd86039d6db70000000000000000000000000000000000000000000000000000017afa08cb450000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000ba7deebbfc5fa1100fb055a87773e1e99cd3507a","nonce":"0x1f29","to":"0xe54ca86531e17ef3616d22ca28b0d458b6c89106","transactionIndex":"0x0","value":"0x556f64c1fe7fa0000","type":"0x0","v":"0x150f8","r":"0x9f5a848525414d38c6b64f0e158f069479838b662058844b70213e5ff924e991","s":"0x6f541ca8d3d9811661025203089233bd0c751c82d9e160682be5c55d93a1d0a"}],"transactionsRoot":"0xdf14e5d58dde108b941dd65e42f593f1760e6afabc04d6f7741566286a7ce47f","uncles":[]}}}]},{"tags":[{"name":"/bc/C/rpc"}],"name":"eth_getBlockByNumber","summary":"Gets a block for a given number","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}},{"name":"includeTransactions","description":"If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.","required":true,"schema":{"title":"isTransactionsIncluded","type":"boolean"}}],"result":{"name":"getBlockByNumberResult","schema":{"title":"blockOrNull","oneOf":[{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBlockByNumberExample","params":[{"name":"BlockNumber","value":"0x2b2467"},{"name":"isTransactionsIncluded","value":true}],"result":{"name":"getBlockByNumberExampleResult","value":{"blockExtraData":"0x","difficulty":"0x1","extDataHash":"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421","extraData":"0x","gasLimit":"0x7a1200","gasUsed":"0x1fa79","hash":"0xe20b733bd281ee2fa40dc6b4c3b61fb152356b02cd111a885ac3d81e84bcf8e6","logsBloom":"0xminer":"0x0100000000000000000000000000000000000000","mixHash":"0x0000000000000000000000000000000000000000000000000000000000000000","nonce":"0x0000000000000000","number":"0x2b2467","parentHash":"0xb4b0343c9557772d16460be8866e807c82d0835ad96dd10642c20a1dd7f4fd44","receiptsRoot":"0x75e95716f026716f8a39599f32e5e875f7bac8afe8e64cfa0d389bcc5563ccc2","sha3Uncles":"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347","size":"0x382","stateRoot":"0x8e09d050f1fb71cc01d16d5d03994cf26d37477c0049fb8efeb6b766060bd040","timestamp":"0x61049d85","totalDifficulty":"0x2b2467","transactions":[{"blockHash":"0xe20b733bd281ee2fa40dc6b4c3b61fb152356b02cd111a885ac3d81e84bcf8e6","blockNumber":"0x2b2467","from":"0x741d2cbf05ccdcaf537692ebdeb1dd86039d6db7","gas":"0x2383d","gasPrice":"0x34630b8a00","hash":"0x8faf3db0288f9abbbae9e9ab8552a21a62cb85596f53c08c9b68727ba098c094","input":"0xa2a1623d000000000000000000000000000000000000000000000043e0c5c0f891de4d860000000000000000000000000000000000000000000000000000000000000080000000000000000000000000741d2cbf05ccdcaf537692ebdeb1dd86039d6db70000000000000000000000000000000000000000000000000000017afa08cb450000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000ba7deebbfc5fa1100fb055a87773e1e99cd3507a","nonce":"0x1f29","to":"0xe54ca86531e17ef3616d22ca28b0d458b6c89106","transactionIndex":"0x0","value":"0x556f64c1fe7fa0000","type":"0x0","v":"0x150f8","r":"0x9f5a848525414d38c6b64f0e158f069479838b662058844b70213e5ff924e991","s":"0x6f541ca8d3d9811661025203089233bd0c751c82d9e160682be5c55d93a1d0a"}],"transactionsRoot":"0xdf14e5d58dde108b941dd65e42f593f1760e6afabc04d6f7741566286a7ce47f","uncles":[]}}}]},{"tags":[{"name":"/bc/C/rpc"}],"name":"eth_getTransactionByHash","summary":"Returns the information about a transaction requested by transaction hash.","params":[{"name":"transactionHash","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}],"result":{"name":"transactionResult","description":"Returns a transaction or null","schema":{"title":"TransactionOrNull","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionByHashExample","params":[{"name":"TransactionHash","value":"0x7f9bff67d69a79543a82308485fd3acae0713b8a81223ff1a3b0a6d257446c0d"}],"result":{"name":"getTransactionByHashResultExample","value":[{"blockHash":"0xa18a201a037c01a99943bcc3f715901bc46954967e6dad4a8d04d7044813c9db","blockNumber":"0x2b2481","from":"0xd84d2e392ca6b993f98bf48e53a722c1b57dc66b","gas":"0x493e0","gasPrice":"0x34630b8a00","hash":"0x7f9bff67d69a79543a82308485fd3acae0713b8a81223ff1a3b0a6d257446c0d","input":"0xe9fad8ee","nonce":"0x8","to":"0x39124af473501ccd83a5791ea1efbc2e6dd78f10","transactionIndex":"0x0","value":"0x0","type":"0x0","v":"0x150f7","r":"0xc06dbda9c570ecaa3ce1af65bed110fa3475770d2ed2fddae9f401993a934d02","s":"0x32c9fd37487a6bf6d6a70c657efb59063b75b7584d3e695ba73007e66eaca6a1"}]}}]},{"tags":[{"name":"/bc/C/rpc"}],"name":"eth_getTransactionReceipt","summary":"Returns the receipt information of a transaction by its hash.","params":[{"name":"transactionHash","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}],"result":{"name":"transactionReceiptResult","description":"returns either a receipt or null","schema":{"title":"transactionReceiptOrNull","oneOf":[{"title":"receipt","type":"object","description":"The receipt of a transaction","required":["blockHash","blockNumber","contractAddress","cumulativeGasUsed","from","gasUsed","logs","logsBloom","to","transactionHash","transactionIndex"],"properties":{"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"contractAddress":{"title":"ReceiptContractAddress","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}],"description":"The contract address created, if the transaction was a contract creation, otherwise null"},"cumulativeGasUsed":{"title":"ReceiptCumulativeGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The gas units used by the transaction"},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gasUsed":{"title":"ReceiptGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total gas used by the transaction"},"logs":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}},"logsBloom":{"title":"bloomFilter","type":"string","description":"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"postTransactionState":{"title":"ReceiptPostTransactionState","type":"string","description":"The intermediate stateRoot directly after transaction execution.","pattern":"^0x[a-fA-F\\d]{64}$"},"status":{"title":"ReceiptStatus","description":"Whether or not the transaction threw an error.","type":"boolean"}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionReceiptExample","params":[{"name":"TransactionHash","value":"0x6b61a565d49eb99cdd45b8836279f5686eafbb81b3ee8dc19b93eb8ef2d283ff"}],"result":{"name":"tTransactionReceiptResultExample","value":{"blockHash":"0x43030dd7556aab55f369f6145d9e3767c38fd3f5468ef8a5dbffae837292b9df","blockNumber":"0x2b2490","contractAddress":null,"cumulativeGasUsed":"0xb871","from":"0xe558e2d80bbb2290b62af64400d66cc69bbb29a3","gasUsed":"0xb871","logs":[{"address":"0xa5e59761ebd4436fa4d20e1a27cba29fb2471fc6","topics":["0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","0x000000000000000000000000e558e2d80bbb2290b62af64400d66cc69bbb29a3","0x00000000000000000000000060ae616a2155ee3d9a68541ba4544862310933d4"],"data":"0x0000000000000000000000000000000000000000ffffffffffffffffffffffff","blockNumber":"0x2b2490","transactionHash":"0x6b61a565d49eb99cdd45b8836279f5686eafbb81b3ee8dc19b93eb8ef2d283ff","transactionIndex":"0x0","blockHash":"0x43030dd7556aab55f369f6145d9e3767c38fd3f5468ef8a5dbffae837292b9df","logIndex":"0x0","removed":false}],"logsBloom":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000001004000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000004008000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000010000000000000000004000000000800000000000000200000000000000000","status":"0x1","to":"0xa5e59761ebd4436fa4d20e1a27cba29fb2471fc6","transactionHash":"0x6b61a565d49eb99cdd45b8836279f5686eafbb81b3ee8dc19b93eb8ef2d283ff","transactionIndex":"0x0","type":"0x0"}}}]},{"tags":[{"name":"/bc/C/avax"}],"name":"avax.getAtomicTxStatus","summary":"Get the status of an atomic transaction sent to the network.","params":[{"name":"txID","required":true,"schema":{"title":"txID","type":"string"}}],"result":{"name":"AtomicTxStatusResult","schema":{"title":"AtomicTxStatusStatus","oneOf":[{"name":"status","schema":{"title":"status","type":"string"},"title":"any_HbW97yqg"},{"schema":{"type":"object","properties":{"status":{"type":"string"},"blockHeight":{"schema":{"type":"number"}}}},"title":"any_gVzl2YJR"}]}},"examples":[{"name":"getBlockchainIDExample","params":[{"name":"txId","value":{"txID":"2uC1ym6GNUZGfYHSbaaniVfi4zPQtZMjwbYZnjpZUnUDykEy35"}}],"result":{"name":"getBlockchainIDResultExample","value":{"status":"Accepted","blockHeight":"2825076"}}}]},{"tags":[{"name":"/bc/C/avax"}],"name":"avax.getUTXOs","summary":"Gets the UTXOs that reference a given address.","params":[{"name":"addresses","description":"is a list of UTXOs such that each UTXO references at least one address in addresses.","required":true,"schema":{"type":"array","items":{"type":"string","title":"string_doaGddGA"},"title":"unorderedSetOf_string_doaGddGADvj0xlFa"}},{"name":"limit","description":"At most limit UTXOs are returned. If limit is omitted or greater than 1024, it is set to 1024.","schema":{"type":"string","title":"string_doaGddGA"}},{"name":"sourceChain","required":true,"schema":{"type":"string","title":"string_doaGddGA"}},{"name":"startIndex","description":"If startIndex is omitted, will fetch all UTXOs up to limit","schema":{"title":"startIndex","type":"object","properties":{"address":{"type":"string","title":"string_doaGddGA"},"utxo":{"type":"string","title":"string_doaGddGA"}}}},{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}],"result":{"name":"getUTXOsResult","schema":{"type":"object"}},"examples":[{"name":"getBlockchainIDExample","params":[{"name":"Address","value":{"addresses":["C-avax1nz70l5hlhpjch24fr6xcvpj3tmr2uladasg4jn"],"sourceChain":"X","encoding":"cb58"}}],"result":{"name":"getBlockchainIDResultExample","value":{"numFetched":"0","utxos":[],"endIndex":{"address":"C-avax1nz70l5hlhpjch24fr6xcvpj3tmr2uladasg4jn","utxo":"11111111111111111111111111111111LpoYY"},"encoding":"cb58"}}}]},{"tags":[{"name":"/bc/C/avax"}],"name":"avax.issueTx","summary":"Send a signed transaction to the network. encoding specifies the format of the signed transaction. Can be either \"cb58\" or \"hex\". Defaults to \"cb58\".","params":[{"name":"tx","required":true,"schema":{"type":"string","title":"string_doaGddGA"}},{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"}],"result":{"name":"issueTxResult","schema":{"title":"txID","type":"string"}}},{"tags":[{"name":"/bc/C/rpc"}],"name":"net_version","summary":"Network identifier associated with network","description":"Returns the network ID associated with the current network.","params":[],"result":{"name":"networkId","description":"Network ID associated with the current network","schema":{"title":"networkId","type":"string","pattern":"^[\\d]+$"}},"examples":[{"name":"netversionExample","params":[],"result":{"name":"netversionResultExample","value":"1"}}]},{"tags":[{"name":"/bc/C/rpc"}],"name":"web3_clientVersion","description":"Returns the version of the current client","summary":"current client version","params":[],"result":{"name":"clientVersion","description":"client version","schema":{"title":"clientVersion","type":"string"}},"examples":[{"name":"clientVersionExample","params":[],"result":{"name":"clientVersionResultExample","value":"v0.5.7-rc.1"}}]},{"tags":[{"name":"/bc/C/rpc"}],"name":"web3_sha3","summary":"Hashes data","description":"Hashes data using the Keccak-256 algorithm","params":[{"name":"data","description":"data to hash using the Keccak-256 algorithm","summary":"data to hash","schema":{"title":"data","type":"string","pattern":"^0x[a-fA-F\\d]+$"}}],"result":{"name":"hashedData","description":"Keccak-256 hash of the given data","schema":{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"}},"examples":[{"name":"sha3Example","params":[{"name":"sha3ParamExample","value":"0x736e6f7773746f726d"}],"result":{"name":"sha3ResultExample","value":"0x627119bb8286874a15d562d32829613311a678da26ca7a6a785ec4ad85937d06"}}]}],"components":{"schemas":{"Bytes65":{"title":"65 hex encoded bytes","type":"string","pattern":"^0x[0-9a-f]{512}$"},"ProofNode":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"},"StorageProofKey":{"title":"storageProofKey","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The key used to get the storage slot in its account tree."},"StorageProof":{"title":"storageProofSet","type":"array","description":"Current block header PoW hash.","items":{"title":"storageProof","type":"object","description":"Object proving a relationship of a storage value to an account's storageHash.","properties":{"key":{"title":"storageProofKey","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The key used to get the storage slot in its account tree."},"value":{"title":"storageProofValue","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The value of the storage slot in its account tree"},"proof":{"title":"proofNodes","type":"array","description":"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value","items":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"}}}}},"ProofNodes":{"title":"proofNodes","type":"array","description":"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value","items":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"}},"PowHash":{"title":"powHash","type":"string","description":"Current block header PoW hash.","pattern":"^0x([a-fA-F\\d]{64})?$"},"SeedHash":{"title":"seedHash","type":"string","description":"The seed hash used for the DAG.","pattern":"^0x([a-fA-F\\d]{64})?$"},"MixHash":{"title":"mixHash","type":"string","description":"The mix digest.","pattern":"^0x([a-fA-F\\d]{64})?$"},"Difficulty":{"title":"difficulty","type":"string","description":"The boundary condition ('target'), 2^256 / difficulty.","pattern":"^0x([a-fA-F\\d]{64})?$"},"FilterId":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."},"BlockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"BlockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"BlockNumberTag":{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]},"BlockOrNull":{"title":"blockOrNull","oneOf":[{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},{"title":"null","type":"null","description":"Null"}]},"IntegerOrNull":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]},"AddressOrNull":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"Receipt":{"title":"receipt","type":"object","description":"The receipt of a transaction","required":["blockHash","blockNumber","contractAddress","cumulativeGasUsed","from","gasUsed","logs","logsBloom","to","transactionHash","transactionIndex"],"properties":{"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"contractAddress":{"title":"ReceiptContractAddress","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}],"description":"The contract address created, if the transaction was a contract creation, otherwise null"},"cumulativeGasUsed":{"title":"ReceiptCumulativeGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The gas units used by the transaction"},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gasUsed":{"title":"ReceiptGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total gas used by the transaction"},"logs":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}},"logsBloom":{"title":"bloomFilter","type":"string","description":"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"postTransactionState":{"title":"ReceiptPostTransactionState","type":"string","description":"The intermediate stateRoot directly after transaction execution.","pattern":"^0x[a-fA-F\\d]{64}$"},"status":{"title":"ReceiptStatus","description":"Whether or not the transaction threw an error.","type":"boolean"}}},"BloomFilter":{"title":"bloomFilter","type":"string","description":"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series"},"Log":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}},"Topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"Topic":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"},"TransactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"BlockNumberOrNull":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"BlockHashOrNull":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"NonceOrNull":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"From":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"To":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"Block":{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},"SignTransaction":{"title":"signTransaction","type":"object","required":["data","from","gas","gasPrice","to","value"],"properties":{"data":{"type":"string","title":"string_doaGddGA"},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"}}},"Transaction":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},"Transactions":{"title":"transactions","description":"An array of transactions","type":"array","items":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}},"TransactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"KeccakOrPending":{"title":"keccakOrPending","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}]},"Keccak":{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},"Nonce":{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},"Null":{"title":"null","type":"null","description":"Null"},"Integer":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},"TxID":{"title":"txID","type":"string"},"StartTime":{"description":"is the Unix time when the validator starts validating the Subnet.","type":"number","title":"number_ZS0MMx1A"},"EndTime":{"description":"is the Unix time when the validator stops validating the Subnet.","type":"number","title":"number_x6pqqnTc"},"StakeAmount":{"description":"is the amount of nAVAX this validator staked. Omitted if subnetID is not the Primary Network","type":"number","title":"number_Zljb5zOi"},"Encoding":{"name":"encoding","description":"specifies the format for the returned UTXOs. Can be either \"cb58\" or \"hex\" and defaults to \"cb58\".","schema":{"type":"string","title":"string_doaGddGA"},"title":"any_cVPkZfkL"},"NodeID":{"description":"is the validator’s node ID.","type":"string","title":"string_U14URhxQ"},"Address":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},"XAddress":{"title":"address","type":"string","pattern":"^X-[a-fA-F\\d]{43}$"},"XAddresses":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^X-[a-fA-F\\d]{43}$"}},"PAddress":{"title":"address","type":"string","pattern":"^P-[a-fA-F\\d]{43}$"},"PAddresses":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^P-[a-fA-F\\d]{43}$"}},"Addresses":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},"Position":{"title":"position","type":"string","description":"Hex representation of the storage slot where the variable exists","pattern":"^0x([a-fA-F0-9]?)+$"},"DataWord":{"title":"dataWord","type":"string","description":"Hex representation of a 256 bit unit of data","pattern":"^0x([a-fA-F\\d]{64})?$"},"Bytes":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"contentDescriptors":{"Block":{"name":"block","summary":"A block","description":"A block object","schema":{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}}},"Null":{"name":"Null","description":"JSON Null value","summary":"Null value","schema":{"title":"null","type":"null","description":"Null"}},"Signature":{"name":"signature","summary":"The signature.","required":true,"schema":{"title":"signatureBytes","type":"string","description":"Hex representation of byte array between 2 and 65 chars long","pattern":"0x^([A-Fa-f0-9]{2}){65}$"}},"GasPrice":{"name":"gasPrice","required":true,"schema":{"title":"gasPriceResult","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Integer of the current gas price"}},"Transaction":{"required":true,"name":"transaction","schema":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}},"TransactionResult":{"name":"transactionResult","description":"Returns a transaction or null","schema":{"title":"TransactionOrNull","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"null","type":"null","description":"Null"}]}},"UncleCountResult":{"name":"uncleCountResult","description":"The Number of total uncles in the given block","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"Message":{"name":"message","required":true,"schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"Filter":{"name":"filter","required":true,"schema":{"title":"filter","type":"object","description":"A filter used to monitor the blockchain for log/events","properties":{"fromBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"toBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"address":{"title":"oneOrArrayOfAddresses","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}]},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}}}}},"Address":{"name":"address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},"BlockHash":{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},"Nonce":{"name":"nonce","required":true,"schema":{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"}},"Position":{"name":"key","required":true,"schema":{"title":"position","type":"string","description":"Hex representation of the storage slot where the variable exists","pattern":"^0x([a-fA-F0-9]?)+$"}},"Logs":{"name":"logs","description":"An array of all logs matching filter with given id.","schema":{"title":"setOfLogs","type":"array","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}},"FilterId":{"name":"filterId","schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}},"BlockNumber":{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}},"TransactionHash":{"name":"transactionHash","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}}}} ;
  public transport: HTTPTransport | WebSocketTransport | PostMessageWindowTransport | PostMessageIframeTransport;
  private validator: MethodCallValidator;
  private timeout: number | undefined;

  constructor(options: Options) {

    if (options.transport === undefined || options.transport.type === undefined) {
      throw new Error("Invalid constructor params");
    }
    const {type, host, port, protocol} = options.transport;
    let path = options.transport.path || "";
    if(path && path[0] !== "/") {
        path = "/" + path;
    }
    switch (type) {
      case 'http':
      case 'https':
        this.transport = new HTTPTransport((protocol || type) + "://" + host + ":" + port + path);
        break;
      case 'websocket':
        this.transport = new WebSocketTransport((protocol || "ws://") + host + ":" + port + path);
        break;
      case 'postmessageiframe':
        this.transport = new PostMessageIframeTransport(protocol + "://" + host + ":" + port + path);
        break;
      case 'postmessagewindow':
        this.transport = new PostMessageWindowTransport(protocol + "://" + host + ":" + port + path);
        break;
      default:
        throw new Error("unsupported transport");
        break;
    }
    this.rpc = new Client(new RequestManager([this.transport]));
    this.validator = new MethodCallValidator(AvalancheJSONRPC.openrpcDocument);
  }
  /**
   * Adds a JSONRPC notification handler to handle receiving notifications.
   * @example
   * myClient.onNotification((data)=>console.log(data));
   */
  public onNotification(callback: (data: any) => void) {
    this.rpc.onNotification(callback);
  }

  /**
   * Adds an optional JSONRPCError handler to handle receiving errors that cannot be resolved to a specific request
   * @example
   * myClient.onError((err: JSONRPCError)=>console.log(err.message));
   */
  public onError(callback: (data: JSONRPCError) => void) {
     this.rpc.onError(callback);
  }

  /**
   * Sets a default timeout in ms for all requests excluding notifications.
   * @example
   * // 20s timeout
   * myClient.setDefaultTimeout(20000);
   * // Removes timeout from request
   * myClient.setDefaultTimeout(undefined);
   */
   public setDefaultTimeout(ms?: number) {
    this.timeout = ms;
  }

  /**
   * Initiates [[AvalancheJSONRPC.startBatch]] in order to build a batch call.
   *
   * Subsequent calls to [[AvalancheJSONRPC.request]] will be added to the batch.
   * Once [[AvalancheJSONRPC.stopBatch]] is called, the promises for the [[AvalancheJSONRPC.request]]
   * will then be resolved.  If there is already a batch in progress this method is a noop.
   *
   * @example
   * myClient.startBatch();
   * myClient.foo().then(() => console.log("foobar"))
   * myClient.bar().then(() => console.log("foobarbaz"))
   * myClient.stopBatch();
   */
  public startBatch(): void {
    return this.rpc.startBatch();
  }

  /**
   * Initiates [[Client.stopBatch]] in order to finalize and send the batch to the underlying transport.
   *
   * stopBatch will send the [[AvalancheJSONRPC]] calls made since the last [[AvalancheJSONRPC.startBatch]] call. For
   * that reason, [[AvalancheJSONRPC.startBatch]] MUST be called before [[AvalancheJSONRPC.stopBatch]].
   *
   * @example
   * myClient.startBatch();
   * myClient.foo().then(() => console.log("foobar"))
   * myClient.bar().then(() => console.log("foobarbaz"))
   * myClient.stopBatch();
   */
  public stopBatch(): void {
    return this.rpc.stopBatch();
  }

  private request(methodName: string, params: any[]): Promise<any> {
    const methodObject = _.find((AvalancheJSONRPC.openrpcDocument.methods as MethodObject[]), ({name}) => name === methodName) as MethodObject;
    const notification = methodObject.result ? false : true;
    const openRpcMethodValidationErrors = this.validator.validate(methodName, params);
    if ( openRpcMethodValidationErrors instanceof MethodNotFoundError || openRpcMethodValidationErrors.length > 0) {
      return Promise.reject(openRpcMethodValidationErrors);
    }

    let rpcParams;
    if (methodObject.paramStructure && methodObject.paramStructure === "by-name") {
      rpcParams = _.zipObject(_.map(methodObject.params, "name"), params);
    } else {
      rpcParams = params;
    }
    if (notification) {
      return this.rpc.notify({method: methodName, params: rpcParams});
    }
    return this.rpc.request({method: methodName, params: rpcParams}, this.timeout);
  }

  
  /**
   * Given a JSON representation of this Virtual Machine’s genesis state, create the byte representation of that state.
   */
  // tslint:disable-next-line:max-line-length
  public avm.buildGenesis: AvmBuildGenesis = (...params) => {
    return this.request("avm.buildGenesis", params);
  }
  
  /**
   * Get the balances of all assets controlled by a given address.
   */
  // tslint:disable-next-line:max-line-length
  public avm.getAllBalances: AvmGetAllBalances = (...params) => {
    return this.request("avm.getAllBalances", params);
  }
  
  /**
   * Get information about an asset.
   */
  // tslint:disable-next-line:max-line-length
  public avm.getAssetDescription: AvmGetAssetDescription = (...params) => {
    return this.request("avm.getAssetDescription", params);
  }
  
  /**
   * Get information about an asset.
   */
  // tslint:disable-next-line:max-line-length
  public avm.getBalance: AvmGetBalance = (...params) => {
    return this.request("avm.getBalance", params);
  }
  
  /**
   * Returns the specified transaction. The encoding parameter sets the format of the returned transaction. Can be either "cb58" or "hex". Defaults to "cb58".
   */
  // tslint:disable-next-line:max-line-length
  public avm.getTx: AvmGetTx = (...params) => {
    return this.request("avm.getTx", params);
  }
  
  /**
   * Gets a transaction’s status by its ID. If the transaction was dropped, response will include a reason field with more information why the transaction was dropped.
   */
  // tslint:disable-next-line:max-line-length
  public avm.getTxStatus: AvmGetTxStatus = (...params) => {
    return this.request("avm.getTxStatus", params);
  }
  
  /**
   * Gets the UTXOs that reference a given address. If sourceChain is specified, then it will retrieve the atomic UTXOs exported from that chain to the X Chain.
   */
  // tslint:disable-next-line:max-line-length
  public avm.getUTXOs: AvmGetUTXOs = (...params) => {
    return this.request("avm.getUTXOs", params);
  }
  
  /**
   * Send a signed transaction to the network. encoding specifies the format of the signed transaction. Can be either "cb58" or "hex". Defaults to "cb58".
   */
  // tslint:disable-next-line:max-line-length
  public avm.issueTx: AvmIssueTx = (...params) => {
    return this.request("avm.issueTx", params);
  }
  
  /**
   * Get the balance of AVAX controlled by a given address.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getBalance: PlatformGetBalance = (...params) => {
    return this.request("platform.getBalance", params);
  }
  
  /**
   * Get all the blockchains that exist (excluding the P-Chain).
   */
  // tslint:disable-next-line:max-line-length
  public platform.getBlockchains: PlatformGetBlockchains = (...params) => {
    return this.request("platform.getBlockchains", params);
  }
  
  /**
   * Get the status of a blockchain.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getBlockchainStatus: PlatformGetBlockchainStatus = (...params) => {
    return this.request("platform.getBlockchainStatus", params);
  }
  
  /**
   * Returns an upper bound on the number of AVAX that exist. This is an upper bound because it does not account for burnt tokens, including transaction fees.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getCurrentSupply: PlatformGetCurrentSupply = (...params) => {
    return this.request("platform.getCurrentSupply", params);
  }
  
  /**
   * List the current validators of the given Subnet.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getCurrentValidators: PlatformGetCurrentValidators = (...params) => {
    return this.request("platform.getCurrentValidators", params);
  }
  
  /**
   * Returns the height of the last accepted block.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getHeight: PlatformGetHeight = (...params) => {
    return this.request("platform.getHeight", params);
  }
  
  /**
   * Get the minimum amount of AVAX required to validate the Primary Network and the minimum amount of AVAX that can be delegated.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getMinStake: PlatformGetMinStake = (...params) => {
    return this.request("platform.getMinStake", params);
  }
  
  /**
   * List the validators in the pending validator set of the specified Subnet. Each validator is not currently validating the Subnet but will in the future.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getPendingValidators: PlatformGetPendingValidators = (...params) => {
    return this.request("platform.getPendingValidators", params);
  }
  
  /**
   * Returns the UTXOs that were rewarded after the provided transaction's staking or delegation period ended.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getRewardUTXOs: PlatformGetRewardUTXOs = (...params) => {
    return this.request("platform.getRewardUTXOs", params);
  }
  
  /**
   * Retrieve an assetID for a subnet’s staking asset. Currently, this only returns the Primary Network’s staking assetID.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getStakingAssetID: PlatformGetStakingAssetID = (...params) => {
    return this.request("platform.getStakingAssetID", params);
  }
  
  /**
   * Get info about the Subnets.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getSubnets: PlatformGetSubnets = (...params) => {
    return this.request("platform.getSubnets", params);
  }
  
  /**
   * Get the amount of nAVAX staked by a set of addresses. The amount returned does not include staking rewards.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getStake: PlatformGetStake = (...params) => {
    return this.request("platform.getStake", params);
  }
  
  /**
   * Get the total amount of nAVAX staked on the Primary Network.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getTotalStake: PlatformGetTotalStake = (...params) => {
    return this.request("platform.getTotalStake", params);
  }
  
  /**
   * Gets a transaction by its ID.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getTx: PlatformGetTx = (...params) => {
    return this.request("platform.getTx", params);
  }
  
  /**
   * Gets a transaction’s status by its ID. If the transaction was dropped, response will include a reason field with more information why the transaction was dropped.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getTxStatus: PlatformGetTxStatus = (...params) => {
    return this.request("platform.getTxStatus", params);
  }
  
  /**
   * Gets the UTXOs that reference a given set of addresses.
   */
  // tslint:disable-next-line:max-line-length
  public platform.getUTXOs: PlatformGetUTXOs = (...params) => {
    return this.request("platform.getUTXOs", params);
  }
  
  /**
   * Issue a transaction to the Platform Chain.
   */
  // tslint:disable-next-line:max-line-length
  public platform.issueTx: PlatformIssueTx = (...params) => {
    return this.request("platform.issueTx", params);
  }
  
  /**
   * Sample validators from the specified Subnet.
   */
  // tslint:disable-next-line:max-line-length
  public platform.sampleValidators: PlatformSampleValidators = (...params) => {
    return this.request("platform.sampleValidators", params);
  }
  
  /**
   * Get the Subnet that validates a given blockchain.
   */
  // tslint:disable-next-line:max-line-length
  public platform.validatedBy: PlatformValidatedBy = (...params) => {
    return this.request("platform.validatedBy", params);
  }
  
  /**
   * Get the IDs of the blockchains a Subnet validates.
   */
  // tslint:disable-next-line:max-line-length
  public platform.validates: PlatformValidates = (...params) => {
    return this.request("platform.validates", params);
  }
  
  /**
   * Given a blockchain’s alias, get its ID.
   */
  // tslint:disable-next-line:max-line-length
  public info.getBlockchainID: InfoGetBlockchainID = (...params) => {
    return this.request("info.getBlockchainID", params);
  }
  
  /**
   * Get the ID of the network this node is participating in.
   */
  // tslint:disable-next-line:max-line-length
  public info.getNetworkID: InfoGetNetworkID = (...params) => {
    return this.request("info.getNetworkID", params);
  }
  
  /**
   * Get the name of the network this node is participating in.
   */
  // tslint:disable-next-line:max-line-length
  public info.getNetworkName: InfoGetNetworkName = (...params) => {
    return this.request("info.getNetworkName", params);
  }
  
  /**
   * Get the version of this node.
   */
  // tslint:disable-next-line:max-line-length
  public info.getNodeVersion: InfoGetNodeVersion = (...params) => {
    return this.request("info.getNodeVersion", params);
  }
  
  /**
   * Check whether a given chain is done bootstrapping
   */
  // tslint:disable-next-line:max-line-length
  public info.isBootstrapped: InfoIsBootstrapped = (...params) => {
    return this.request("info.isBootstrapped", params);
  }
  
  /**
   * Get a description of peer connections.
   */
  // tslint:disable-next-line:max-line-length
  public info.peers: InfoPeers = (...params) => {
    return this.request("info.peers", params);
  }
  
  /**
   * Get the fees of the network.
   */
  // tslint:disable-next-line:max-line-length
  public info.getTxFee: InfoGetTxFee = (...params) => {
    return this.request("info.getTxFee", params);
  }
  
  /**
   * Returns the number of most recent block.
   */
  // tslint:disable-next-line:max-line-length
  public eth_blockNumber: EthBlockNumber = (...params) => {
    return this.request("eth_blockNumber", params);
  }
  
  /**
   * Executes a new message call (locally) immediately without creating a transaction on the block chain.
   */
  // tslint:disable-next-line:max-line-length
  public eth_call: EthCall = (...params) => {
    return this.request("eth_call", params);
  }
  
  /**
   * Returns the currently configured chain id
   */
  // tslint:disable-next-line:max-line-length
  public eth_chainId: EthChainId = (...params) => {
    return this.request("eth_chainId", params);
  }
  
  /**
   * Returns balance of first class Avalanche Native Tokens on the C-Chain
   */
  // tslint:disable-next-line:max-line-length
  public eth_getAssetBalance: EthGetAssetBalance = (...params) => {
    return this.request("eth_getAssetBalance", params);
  }
  
  /**
   * Returns AVAX balance of a given or account or contract
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBalance: EthGetBalance = (...params) => {
    return this.request("eth_getBalance", params);
  }
  
  /**
   * Signs a transaction that can be submitted to the network at a later time using with eth_sendRawTransaction.
   */
  // tslint:disable-next-line:max-line-length
  public eth_signTransaction: EthSignTransaction = (...params) => {
    return this.request("eth_signTransaction", params);
  }
  
  /**
   * Returns the number of transactions sent from an address
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionCount: EthGetTransactionCount = (...params) => {
    return this.request("eth_getTransactionCount", params);
  }
  
  /**
   * Creates new message call transaction or a contract creation for signed transactions.
   */
  // tslint:disable-next-line:max-line-length
  public eth_sendRawTransaction: EthSendRawTransaction = (...params) => {
    return this.request("eth_sendRawTransaction", params);
  }
  
  /**
   * Gets a block for a given hash
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBlockByHash: EthGetBlockByHash = (...params) => {
    return this.request("eth_getBlockByHash", params);
  }
  
  /**
   * Gets a block for a given number
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBlockByNumber: EthGetBlockByNumber = (...params) => {
    return this.request("eth_getBlockByNumber", params);
  }
  
  /**
   * Returns the information about a transaction requested by transaction hash.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionByHash: EthGetTransactionByHash = (...params) => {
    return this.request("eth_getTransactionByHash", params);
  }
  
  /**
   * Returns the receipt information of a transaction by its hash.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionReceipt: EthGetTransactionReceipt = (...params) => {
    return this.request("eth_getTransactionReceipt", params);
  }
  
  /**
   * Get the status of an atomic transaction sent to the network.
   */
  // tslint:disable-next-line:max-line-length
  public avax.getAtomicTxStatus: AvaxGetAtomicTxStatus = (...params) => {
    return this.request("avax.getAtomicTxStatus", params);
  }
  
  /**
   * Gets the UTXOs that reference a given address.
   */
  // tslint:disable-next-line:max-line-length
  public avax.getUTXOs: AvaxGetUTXOs = (...params) => {
    return this.request("avax.getUTXOs", params);
  }
  
  /**
   * Send a signed transaction to the network. encoding specifies the format of the signed transaction. Can be either "cb58" or "hex". Defaults to "cb58".
   */
  // tslint:disable-next-line:max-line-length
  public avax.issueTx: AvaxIssueTx = (...params) => {
    return this.request("avax.issueTx", params);
  }
  
  /**
   * Network identifier associated with network
   */
  // tslint:disable-next-line:max-line-length
  public net_version: NetVersion = (...params) => {
    return this.request("net_version", params);
  }
  
  /**
   * current client version
   */
  // tslint:disable-next-line:max-line-length
  public web3_clientVersion: Web3ClientVersion = (...params) => {
    return this.request("web3_clientVersion", params);
  }
  
  /**
   * Hashes data
   */
  // tslint:disable-next-line:max-line-length
  public web3_sha3: Web3Sha3 = (...params) => {
    return this.request("web3_sha3", params);
  }
  
}
export default AvalancheJSONRPC;
