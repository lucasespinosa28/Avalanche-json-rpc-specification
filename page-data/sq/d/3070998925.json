{"data":{"openrpcDocument":{"id":"openrpcDocument","openrpcDocument":"{\n  \"openrpc\": \"1.2.4\",\n  \"info\": {\n    \"version\": \"1.0.30\",\n    \"title\": \"Avalanche JSON-RPC\",\n    \"description\": \"This API lets you interact with an Avalanche client via JSON-RPC\\n Use method tag to complete the url ex: https://api.avax.network/ext/vm/avm\",\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"servers\": [\n    {\n      \"name\": \"Mainnet\",\n      \"url\": \"https://api.avax.network/ext\",\n      \"summary\": \"\"\n    }\n  ],\n  \"methods\": [\n    {\n      \"tags\": [\n        {\n          \"name\": \"/vm/avm\"\n        }\n      ],\n      \"name\": \"avm.buildGenesis\",\n      \"summary\": \"Given a JSON representation of this Virtual Machineâ€™s genesis state, create the byte representation of that state.\",\n      \"params\": [\n        {\n          \"name\": \"alias\",\n          \"required\": true,\n          \"description\": \"alias X,P or C\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getBlockchainIDResult\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"buildGenesisExample\",\n          \"params\": [\n            {\n              \"name\": \"genesisData\",\n              \"value\": {\n                \"genesisData\": {\n                  \"asset1\": {\n                    \"name\": \"myFixedCapAsset\",\n                    \"symbol\": \"MFCA\",\n                    \"initialState\": {\n                      \"fixedCap\": [\n                        {\n                          \"amount\": 100000,\n                          \"address\": \"local18jma8ppw3nhx5r4ap8clazz0dps7rv5u00z96u\"\n                        }\n                      ]\n                    }\n                  },\n                  \"asset2\": {\n                    \"name\": \"myVarCapAsset\",\n                    \"symbol\": \"MVCA\",\n                    \"initialState\": {\n                      \"variableCap\": [\n                        {\n                          \"minters\": [\n                            \"local18jma8ppw3nhx5r4ap8clazz0dps7rv5u00z96u\"\n                          ],\n                          \"threshold\": 1\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"buildGenesisResultExample\",\n            \"value\": {\n              \"bytes\": \"111115LHK2ZCYttSKPmmhsTDSuKiCkmHz65nUS1YqybvjirwGLLt376k1RwnTt72WobPqrG7rmgrKVqSq6VxDsKXYGnRmfhdLCEhsYjMegZmu5L5wEQ6k1BHu1QN6jk8kfoLQfAnKAxv8t5PmGJUwmTyoHz9aoDpfwJfkzjLut3TSSHzVLzH5bPoc5fYMwKGA1Zaps4Byo6rPpAZgiDG1jokzLuVXFDMxiFSDGHHA7uB5Nx2qaywtUXtyTi7JMYMKQMcB2UQEZbpPB9QcHg88mA8uzT2i5YYSiT9uZpAUjd6cfNiPedBJqi5AdjtcAmHvhszCS7YurbVmB4sHEP3PMxyKAHMnQ8dyxefQCDPUpSGMFp6qzomuXQSQeTi\",\n              \"encoding\": \"cb58\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/X\"\n        }\n      ],\n      \"name\": \"avm.getAllBalances\",\n      \"summary\": \"Get the balances of all assets controlled by a given address.\",\n      \"params\": [\n        {\n          \"name\": \"Address\",\n          \"required\": true,\n          \"description\": \"X-chain address\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/XAddress\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getAllBalancesResult\",\n        \"schema\": {\n          \"title\": \"balances\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"asset\": {\n              \"type\": \"string\"\n            },\n            \"balance\": {\n              \"type\": \"number\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getAllBalancesExample\",\n          \"params\": [\n            {\n              \"name\": \"address\",\n              \"value\": {\n                \"address\": \"X-avax1slt2dhfu6a6qezcn5sgtagumq8ag8we75f84sw\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getAllBalancesResultExample\",\n            \"value\": {\n              \"balances\": [\n                {\n                  \"asset\": \"AVAX\",\n                  \"balance\": \"3363837072493520\"\n                },\n                {\n                  \"asset\": \"qNE62d87kVmY6C3Ff89XLWTvHBkmicJV9oM3KsxbGSvwhzWyJ\",\n                  \"balance\": \"77\"\n                },\n                {\n                  \"asset\": \"2grQHEwGHj73JPFna6kGxoMtuz8mQDeX4v45oswjVhp5kqUQsL\",\n                  \"balance\": \"10000000000000\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/X\"\n        }\n      ],\n      \"name\": \"avm.getAssetDescription\",\n      \"summary\": \"Get information about an asset.\",\n      \"params\": [\n        {\n          \"name\": \"assetID\",\n          \"required\": true,\n          \"description\": \"is the id of the asset for which the information is requested.\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getAssetDescriptionResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"assetID\": {\n              \"type\": \"string\"\n            },\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"symbol\": {\n              \"type\": \"string\"\n            },\n            \"denomination\": {\n              \"type\": \"number\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getAssetDescriptionExample\",\n          \"params\": [\n            {\n              \"name\": \"assetID\",\n              \"value\": {\n                \"assetID\": \"FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getAssetDescriptionResultExample\",\n            \"value\": {\n              \"assetID\": \"FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z\",\n              \"name\": \"Avalanche\",\n              \"symbol\": \"AVAX\",\n              \"denomination\": \"9\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"avm.getBalance\",\n      \"summary\": \"Get information about an asset.\",\n      \"params\": [\n        {\n          \"name\": \"Address\",\n          \"required\": true,\n          \"description\": \"owner of the asset\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/XAddress\"\n          }\n        },\n        {\n          \"name\": \"assetID\",\n          \"required\": true,\n          \"description\": \"id of the asset for which the balance is requested.\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getBalanceResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"balance\": {\n              \"type\": \"number\"\n            },\n            \"utxoIDs\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"txID\": {\n                    \"type\": \"string\"\n                  },\n                  \"outputIndex\": {\n                    \"type\": \"number\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBalanceExample\",\n          \"params\": [\n            {\n              \"name\": \"AddressAndAssetID\",\n              \"value\": {\n                \"address\": \"X-avax1slt2dhfu6a6qezcn5sgtagumq8ag8we75f84sw\",\n                \"assetID\": \"FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBalanceResultExample\",\n            \"value\": {\n              \"balance\": \"3363711663086440\",\n              \"utxoIDs\": [\n                {\n                  \"txID\": \"Xq83i9hdMpsjYtgAYZCES5gTXLuu5u2WHCBQ7PiVErgkmVGtv\",\n                  \"outputIndex\": 1\n                },\n                {\n                  \"txID\": \"4ZJVAuLbYvtZ6TJqvNS6nbfqMr2yXWqR86oKbdAMbmgZWZ2Ln\",\n                  \"outputIndex\": 1\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/X\"\n        }\n      ],\n      \"name\": \"avm.getTx\",\n      \"summary\": \"Returns the specified transaction. The encoding parameter sets the format of the returned transaction. Can be either \\\"cb58\\\" or \\\"hex\\\". Defaults to \\\"cb58\\\".\",\n      \"params\": [\n        {\n          \"name\": \"txID\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/TxID\"\n          }\n        },\n        {\n          \"$ref\": \"#/components/schemas/Encoding\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"getTxResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"tx\": {\n              \"type\": \"string\"\n            },\n            \"encoding\": {\n              \"$ref\": \"#/components/schemas/Encoding\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTxExample\",\n          \"params\": [\n            {\n              \"name\": \"assetID\",\n              \"value\": {\n                \"txID\": \"2mr6ACGzgAfF79MrRwRNL9uLocWJzPnZ3GfmGdJFUaBmPqieDb\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTxResultExample\",\n            \"value\": {\n              \"tx\": \"1111111116aDh9GNvVaie7axyHX8q8YEgkhZcLyPDa4tY1qW6Ah2NKTDAWkdUPi7SSYSxBXN8PPVv8MUZJpUtcVcbiVg6zjbiTZVTwmSbvkZJM15zkRYmEc8622XDWBajuPpCUb29kLzFGFb63CnioQMdTWAw2tS6SR3bp4wc8Bv3AJgmCVHF8fhqweQSDcQbU4GqqxhxLgHisw6e6Jo6pJXJj39wAKZH8wseSvBdVmiZEfyxtLe3nDwcfbe4w96eGX7JGwjkyKnJxp7avDVRHd7AcbkCTtAiUSGWCZkfnpJ93GMFTjWVaFfsegJbaLXqQMPNqeE54J26UEbfyJh5tgwMeRyeic7ABp8gJtUsAXjZzuquJEaovhMZ1bMaKS1AQtxJJsYwx6qbtkLeDxxPZyJgbMrw3uRTTLKrrKZ2jj4XXT5ZbRtCXZh39mxd8ehBWYfESHL6MPE9oy4u16hV5xQU96csBgwMA1rPYsLkNYwixgjWCD81UuA1ELyt8jqfuGttmLAQmyfnAeLnvSmuEJ71KmrNVUGErkvw9UrscToAFAXMUZy2rVGLP5bA1ErqMoiRAdwMfyp9msAQMXNqEgPe4K8Y5czBnAX6CRZqSKfhrn1CDgWK8mQVhucjkVYZfN27mL91ZpWuvXXVy2hy3LpVmz6ydxBvhQoTEe2cLVLKBvsYVcnYEMCrXFt9mQsU6PBaymFf5TenqKBjvzq6c8Wn9VHzzFDeq3\",\n              \"encoding\": \"cb58\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/X\"\n        }\n      ],\n      \"name\": \"avm.getTxStatus\",\n      \"summary\": \"Gets a transactionâ€™s status by its ID. If the transaction was dropped, response will include a reason field with more information why the transaction was dropped.\",\n      \"params\": [\n        {\n          \"name\": \"txID\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/TxID\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getTxStatusResult\",\n        \"description\": \"status is one of:\\n Validating: The blockchain is being validated by this node.\\n Created: The blockchain exists but isnâ€™t being validated by this node.\\n Preferred: The blockchain was proposed to be created and is likely to be created but the transaction isnâ€™t yet accepted.\\n Unknown: The blockchain either wasnâ€™t proposed or the proposal to create it isnâ€™t preferred. The proposal may be resubmitted.\",\n        \"schema\": {\n          \"title\": \"status\",\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTxStatusExample\",\n          \"params\": [\n            {\n              \"name\": \"txID\",\n              \"value\": {\n                \"txID\": \"2mr6ACGzgAfF79MrRwRNL9uLocWJzPnZ3GfmGdJFUaBmPqieDb\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTxStatusResultExample\",\n            \"value\": {\n              \"status\": \"Accepted\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/X\"\n        }\n      ],\n      \"name\": \"avm.getUTXOs\",\n      \"summary\": \"Gets the UTXOs that reference a given address. If sourceChain is specified, then it will retrieve the atomic UTXOs exported from that chain to the X Chain.\",\n      \"params\": [\n        {\n          \"name\": \"addresses\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/XAddresses\"\n          }\n        },\n        {\n          \"name\": \"limit\",\n          \"description\": \"If startIndex is omitted, will fetch all UTXOs up to limit.\",\n          \"schema\": {\n            \"type\": \"number\"\n          }\n        },\n        {\n          \"name\": \"startIndex\",\n          \"schema\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"address\": {\n                \"type\": \"string\"\n              },\n              \"utxo\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        {\n          \"name\": \"sourceChain\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"$ref\": \"#/components/schemas/Encoding\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"getUTXOResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"numFetched\": {\n              \"type\": \"number\"\n            },\n            \"utxos\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"endIndex\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"address\": {\n                  \"$ref\": \"#/components/schemas/XAddress\"\n                },\n                \"utxo\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"encoding\": {\n              \"$ref\": \"#/components/schemas/Encoding\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getUTXOsExample\",\n          \"params\": [\n            {\n              \"name\": \"txID\",\n              \"value\": {\n                \"addresses\": [\n                  \"X-avax1slt2dhfu6a6qezcn5sgtagumq8ag8we75f84sw\"\n                ],\n                \"limit\": 5,\n                \"sourceChain\": \"X\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getUTXOsResultExample\",\n            \"value\": {\n              \"numFetched\": \"5\",\n              \"utxos\": [\n                \"11ULuyZkzLpUPQEXEgzHFHQmeyZijBqP8vggWzC64rr797ha9tBjnpU4Cu96LwWdXukVmsDUm5R7Ncmh9vEK3Fd6ckQfW6cybXKoTGgGsQciCFwkQzn6WsrrvamjKHxqxg26LC9kAsaJsKayPZGC6yd6SGRqdUS26NTmZZ\",\n                \"11ES8BSj94FZ37PBbKPMBNPPdx19hA3xdc1hmpBHYwbpoPevn6TATJXYH3HjhDNJnmRmcVLyfxSobxhBgXWDRNL6m34zwg78sUPU8rggwoLc1mxyYUX7HqmGxAPN9UXixBKZHsTybbt2PXsbbfbksq8LsHH4hri3hbm3Mo\",\n                \"11J7N89W7GVNt676yEL2AF5DwXBdVeMDrzPAxiJdGRTZ5AxrHRK9Xdjbt4VQVJCaUKpDE1NiuwATVgwNgvT7sEY9Lt2SG3zTBx142fqDyrLdrACvPLwYQ16QD7EyDkpDvDCszjJwu9vUPfk5ipSkN996CrvWfGARZrAW3b\",\n                \"11AhmxLNquE4EcsQudrdmsTRY6TWh8UorAaaPwFU9KjvKRZeqvo886e2TsPxtNwttmD3bmKYvR8qF5XSNjWNam1LjdwqF8uzfnSd6adL35MeTHbvKH8nXQszDrnNWJhQpcBwX4nSWY9zP1k86ij9JFRcVpkUWiUz4yqhre\",\n                \"1127vttNWJtJATAaKPZFCUP2HTf2jTgMr2K2oSab82SBgu2zig1ph5t95fzMLbnwrj6ZUuHABenE2VoNWfTkrBi7sVFSpf2VQhb8mjSFV4XY8t1ouDcZPeqoRsGjJCcjravh3xVsiiaoofnV72hNtfTY4BAskFwd5C1jxG\"\n              ],\n              \"endIndex\": {\n                \"address\": \"X-avax1slt2dhfu6a6qezcn5sgtagumq8ag8we75f84sw\",\n                \"utxo\": \"2UR4mAx3j6t5ekcZ7yLAqtSuggE5XPamg89a5UQh94uB8Cs1RW\"\n              },\n              \"encoding\": \"cb58\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/X\"\n        }\n      ],\n      \"name\": \"avm.issueTx\",\n      \"summary\": \"Send a signed transaction to the network. encoding specifies the format of the signed transaction. Can be either \\\"cb58\\\" or \\\"hex\\\". Defaults to \\\"cb58\\\".\",\n      \"params\": [\n        {\n          \"name\": \"tx\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"$ref\": \"#/components/schemas/Encoding\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"issueTxResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/TxID\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"issueTxExample\",\n          \"params\": [\n            {\n              \"name\": \"tx\",\n              \"value\": {\n                \"tx\": \"6sTENqXfk3gahxkJbEPsmX9eJTEFZRSRw83cRJqoHWBiaeAhVbz9QV4i6SLd6Dek4eLsojeR8FbT3arFtsGz9ycpHFaWHLX69edJPEmj2tPApsEqsFd7wDVp7fFxkG6HmySR\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"issueTxResultExample\",\n            \"value\": {\n              \"txID\": \"NUPLwbt2hsYxpQg4H2o451hmTWQ4JZx2zMzM4SinwtHgAdX1JLPHXvWSXEnpecStLj\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getBalance\",\n      \"summary\": \"Get the balance of AVAX controlled by a given address.\",\n      \"params\": [\n        {\n          \"name\": \"Address\",\n          \"required\": true,\n          \"description\": \"P-chain address\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/PAddress\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getBalanceResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"balance\": {\n              \"description\": \"is the total balance, in nAVAX.\",\n              \"type\": \"number\"\n            },\n            \"unlocked\": {\n              \"description\": \"is the unlocked balance, in nAVAX.\",\n              \"type\": \"number\"\n            },\n            \"lockedStakeable\": {\n              \"description\": \"is the locked stakeable balance, in nAVAX.\",\n              \"type\": \"number\"\n            },\n            \"lockedNotStakeable\": {\n              \"description\": \"is the locked and not stakeable balance, in nAVAX.\",\n              \"type\": \"number\"\n            },\n            \"utxoIDs\": {\n              \"description\": \" are the IDs of the UTXOs that reference address.\",\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"txID\": {\n                    \"$ref\": \"#/components/schemas/TxID\"\n                  },\n                  \"outputIndex\": {\n                    \"type\": \"number\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBalanceExample\",\n          \"params\": [\n            {\n              \"name\": \"address\",\n              \"value\": {\n                \"address\": \"P-avax1skrhcldnmsflmnf9dja2v9fdxcyapmw7lu97mh\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBalanceResultExample\",\n            \"value\": {\n              \"balance\": \"1337775600000\",\n              \"unlocked\": \"1337325600000\",\n              \"lockedStakeable\": \"450000000\",\n              \"lockedNotStakeable\": \"0\",\n              \"utxoIDs\": [\n                {\n                  \"txID\": \"24sn9NKqJKmEow1wQPBGHb3yaeCDYXK3gDfh82MvW1QEtNntRJ\",\n                  \"outputIndex\": 0\n                },\n                {\n                  \"txID\": \"rcbSZwB2dJfs7n3aVRXtQNkzbykNs2RR2amTCKNL2uEHitL9y\",\n                  \"outputIndex\": 1\n                },\n                {\n                  \"txID\": \"rcbSZwB2dJfs7n3aVRXtQNkzbykNs2RR2amTCKNL2uEHitL9y\",\n                  \"outputIndex\": 2\n                },\n                {\n                  \"txID\": \"rcbSZwB2dJfs7n3aVRXtQNkzbykNs2RR2amTCKNL2uEHitL9y\",\n                  \"outputIndex\": 0\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getBlockchains\",\n      \"summary\": \"Get all the blockchains that exist (excluding the P-Chain).\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"getBlockchainsResult\",\n        \"schema\": {\n          \"title\": \"blockchains\",\n          \"description\": \" is all of the blockchains that exists on the Avalanche network.\",\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"description\": \"is the blockchainâ€™s ID.\",\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"description\": \"is the human-readable name of this blockchain.\",\n                \"type\": \"string\"\n              },\n              \"subnetID\": {\n                \"description\": \"is the ID of the Subnet that validates this blockchain.\",\n                \"type\": \"string\"\n              },\n              \"vmID\": {\n                \"description\": \"is the ID of the Virtual Machine the blockchain runs.\",\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBlockchainsExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getBlockchainsResultExample\",\n            \"value\": {\n              \"blockchains\": [\n                {\n                  \"id\": \"ta1bV7y93DDiU6x9YgkUf89L5TS7h8wFDDKi8HjWezrTgAMy9\",\n                  \"name\": \"C Chain PoW\",\n                  \"subnetID\": \"2dc3NncNG29XHsByJSVAHwEgYT3XFtR3b4zPxi5KFr7eeCr6QX\",\n                  \"vmID\": \"mgj786NP7uDwBCcq6YwThhaN8FLyybkCa4zBWTQbNgmK6k9A6\"\n                },\n                {\n                  \"id\": \"2YdeqYZZfGzhz6guB7f8kmg3QxhjEKwKnbbWUksNRHcF64eLcY\",\n                  \"name\": \"X Chain PoW\",\n                  \"subnetID\": \"2dc3NncNG29XHsByJSVAHwEgYT3XFtR3b4zPxi5KFr7eeCr6QX\",\n                  \"vmID\": \"jvYyfQTxGMJLuGWa55kdP2p2zSUYsQ5Raupu4TW34ZAUBAbtq\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getBlockchainStatus\",\n      \"summary\": \"Get the status of a blockchain.\",\n      \"params\": [\n        {\n          \"name\": \"blockchainID\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getBlockchainStatusResult\",\n        \"description\": \"status is one of:\\n Validating: The blockchain is being validated by this node.\\n Created: The blockchain exists but isnâ€™t being validated by this node.\\n Preferred: The blockchain was proposed to be created and is likely to be created but the transaction isnâ€™t yet accepted.\\n Unknown: The blockchain either wasnâ€™t proposed or the proposal to create it isnâ€™t preferred. The proposal may be resubmitted.\",\n        \"schema\": {\n          \"title\": \"status\",\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBlockchainStatusExample\",\n          \"params\": [\n            {\n              \"name\": \"blockchainID\",\n              \"value\": {\n                \"blockchainID\": \"11111111111111111111111111111111LpoYY\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBlockchainStatusResultExample\",\n            \"value\": {\n              \"status\": \"Syncing\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getCurrentSupply\",\n      \"summary\": \"Returns an upper bound on the number of AVAX that exist. This is an upper bound because it does not account for burnt tokens, including transaction fees.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"getCurrentSupplyResult\",\n        \"description\": \"is an upper bound on the number of AVAX that exist, denominated in nAVAX.\",\n        \"schema\": {\n          \"title\": \"supply\",\n          \"type\": \"number\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getCurrentSupplyExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getCurrentSupplyResultExample\",\n            \"value\": {\n              \"supply\": \"387034884080126750\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getCurrentValidators\",\n      \"summary\": \"List the current validators of the given Subnet.\",\n      \"params\": [\n        {\n          \"name\": \"subnetID\",\n          \"description\": \"is the subnet whose current validators are returned. If omitted, returns the current validators of the Primary Network.\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"nodeIDs\",\n          \"description\": \"is a list of the nodeIDs of current validators to request. If omitted, all current validators are returned. If a specified nodeID is not in the set of current validators, it will not be included in the response.\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getCurrentValidatorsResult\",\n        \"schema\": {\n          \"title\": \"validators\",\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"txID\": {\n                \"description\": \"is the validator transaction.\",\n                \"$ref\": \"#/components/schemas/TxID\"\n              },\n              \"startTime\": {\n                \"description\": \" s the Unix time when the validator starts validating the Subnet.\",\n                \"type\": \"number\"\n              },\n              \"endTime\": {\n                \"description\": \"is the Unix time when the validator stops validating the Subnet.\",\n                \"type\": \"number\"\n              },\n              \"stakeAmount\": {\n                \"description\": \"is the amount of nAVAX this validator staked. Omitted if subnetID is not the Primary Network\",\n                \"type\": \"number\"\n              },\n              \"nodeID\": {\n                \"type\": \"string\"\n              },\n              \"rewardOwner\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"locktime\": {\n                    \"type\": \"number\"\n                  },\n                  \"threshold\": {\n                    \"type\": \"number\"\n                  },\n                  \"addresses\": {\n                    \"$ref\": \"#/components/schemas/PAddresses\"\n                  }\n                }\n              },\n              \"potentialReward\": {\n                \"type\": \"number\"\n              },\n              \"delegationFee\": {\n                \"type\": \"number\"\n              },\n              \"uptime\": {\n                \"type\": \"number\"\n              },\n              \"connected\": {\n                \"type\": \"boolean\"\n              },\n              \"delegators\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"txID\": {\n                      \"description\": \"is the validator transaction.\",\n                      \"$ref\": \"#/components/schemas/TxID\"\n                    },\n                    \"startTime\": {\n                      \"$ref\": \"#/components/schemas/StartTime\"\n                    },\n                    \"endTime\": {\n                      \"$ref\": \"#/components/schemas/EndTime\"\n                    },\n                    \"stakeAmount\": {\n                      \"$ref\": \"#/components/schemas/StakeAmount\"\n                    },\n                    \"nodeID\": {\n                      \"$ref\": \"#/components/schemas/NodeID\"\n                    },\n                    \"rewardOwner\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"locktime\": {\n                          \"type\": \"number\"\n                        },\n                        \"threshold\": {\n                          \"type\": \"number\"\n                        },\n                        \"addresses\": {\n                          \"$ref\": \"#/components/schemas/PAddresses\"\n                        }\n                      }\n                    },\n                    \"potentialReward\": {\n                      \"type\": \"number\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getCurrentValidatorsExample\",\n          \"params\": [\n            {\n              \"name\": \"validators\",\n              \"value\": {\n                \"subnetID\": null,\n                \"nodeIDs\": []\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getCurrentValidatorsResultExample\",\n            \"value\": {\n              \"validators\": [\n                {\n                  \"txID\": \"2tkoDiYeL5pzLTTd7vYu44sxHn1qzSnvDo3tPBRAA3dHei5Wqj\",\n                  \"startTime\": \"1625874715\",\n                  \"endTime\": \"1627689638\",\n                  \"stakeAmount\": \"2030697338573\",\n                  \"nodeID\": \"NodeID-G3wqVNTivZYAJXNADe5UNdPXSUgfmAK3n\",\n                  \"rewardOwner\": {\n                    \"locktime\": \"0\",\n                    \"threshold\": \"1\",\n                    \"addresses\": [\n                      \"P-avax15n95k8u6vlzw95nm654tlena5wdu5rmd6gjtt2\"\n                    ]\n                  },\n                  \"potentialReward\": \"10186594659\",\n                  \"delegationFee\": \"2.0000\",\n                  \"uptime\": \"0.0001\",\n                  \"connected\": false,\n                  \"delegators\": null\n                },\n                {\n                  \"txID\": \"2NtNfdCkmHFQAkT2evzziqh6r8zgkfYn1GHma4TwFWBsVVzoFt\",\n                  \"startTime\": \"1624670764\",\n                  \"endTime\": \"1627695301\",\n                  \"stakeAmount\": \"2000000000000\",\n                  \"nodeID\": \"NodeID-22F5CwB9PSEeuXbkrHeZ9c4CYQQUpP8xJ\",\n                  \"rewardOwner\": {\n                    \"locktime\": \"0\",\n                    \"threshold\": \"1\",\n                    \"addresses\": [\n                      \"P-avax14dg5hevhgxaypg7958zgy3h3rgmfr799hptzdu\"\n                    ]\n                  },\n                  \"potentialReward\": \"16901476329\",\n                  \"delegationFee\": \"2.0000\",\n                  \"uptime\": \"0.9939\",\n                  \"connected\": true,\n                  \"delegators\": [\n                    {\n                      \"txID\": \"2nor6559sCpEuAwHGSuPq9n5fcdjYsbF6Ef2sQGNru2SixqA8s\",\n                      \"startTime\": \"1625068269\",\n                      \"endTime\": \"1627695301\",\n                      \"stakeAmount\": \"25000000000\",\n                      \"nodeID\": \"NodeID-22F5CwB9PSEeuXbkrHeZ9c4CYQQUpP8xJ\",\n                      \"rewardOwner\": {\n                        \"locktime\": \"0\",\n                        \"threshold\": \"1\",\n                        \"addresses\": [\n                          \"P-avax1uxu3dlqd7h3pqltx5vnj8aa5upmd5wwgdsa9rs\"\n                        ]\n                      },\n                      \"potentialReward\": \"183024616\"\n                    }\n                  ]\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getHeight\",\n      \"summary\": \"Returns the height of the last accepted block.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"getHeightResult\",\n        \"schema\": {\n          \"title\": \"height\",\n          \"type\": \"number\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getHeightExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getHeightResultExample\",\n            \"value\": {\n              \"height\": \"663215\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getMinStake\",\n      \"summary\": \"Get the minimum amount of AVAX required to validate the Primary Network and the minimum amount of AVAX that can be delegated.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"getMinStakeResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"minValidatorStake\": {\n              \"type\": \"number\"\n            },\n            \"minDelegatorStake\": {\n              \"type\": \"number\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getMinStakeExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getMinStakeResultExample\",\n            \"value\": {\n              \"minValidatorStake\": \"2000000000000\",\n              \"minDelegatorStake\": \"25000000000\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getPendingValidators\",\n      \"summary\": \"List the validators in the pending validator set of the specified Subnet. Each validator is not currently validating the Subnet but will in the future.\",\n      \"params\": [\n        {\n          \"name\": \"subnetID\",\n          \"description\": \"is the subnet whose current validators are returned. If omitted, returns the current validators of the Primary Network.\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"nodeIDs\",\n          \"description\": \"is a list of the nodeIDs of current validators to request. If omitted, all current validators are returned. If a specified nodeID is not in the set of current validators, it will not be included in the response.\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getPendingValidatorsResult\",\n        \"schema\": {\n          \"title\": \"validators\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"validators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"txID\": {\n                    \"description\": \"is the validator transaction.\",\n                    \"$ref\": \"#/components/schemas/TxID\"\n                  },\n                  \"startTime\": {\n                    \"$ref\": \"#/components/schemas/StartTime\"\n                  },\n                  \"endTime\": {\n                    \"$ref\": \"#/components/schemas/EndTime\"\n                  },\n                  \"stakeAmount\": {\n                    \"$ref\": \"#/components/schemas/StakeAmount\"\n                  },\n                  \"nodeID\": {\n                    \"$ref\": \"#/components/schemas/NodeID\"\n                  },\n                  \"delegationFee\": {\n                    \"type\": \"number\"\n                  },\n                  \"connected\": {\n                    \"description\": \"if the node is connected.\",\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            }\n          },\n          \"delegators\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"txID\": {\n                  \"description\": \"is the validator transaction.\",\n                  \"$ref\": \"#/components/schemas/TxID\"\n                },\n                \"startTime\": {\n                  \"$ref\": \"#/components/schemas/StartTime\"\n                },\n                \"endTime\": {\n                  \"$ref\": \"#/components/schemas/EndTime\"\n                },\n                \"stakeAmount\": {\n                  \"$ref\": \"#/components/schemas/StakeAmount\"\n                },\n                \"nodeID\": {\n                  \"$ref\": \"#/components/schemas/NodeID\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getPendingValidatorsExample\",\n          \"params\": [\n            {\n              \"name\": \"validators\",\n              \"value\": {\n                \"subnetID\": null,\n                \"nodeIDs\": []\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getPendingValidatorsResultExample\",\n            \"value\": {\n              \"validators\": [],\n              \"delegators\": []\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getRewardUTXOs\",\n      \"summary\": \"Returns the UTXOs that were rewarded after the provided transaction's staking or delegation period ended.\",\n      \"params\": [\n        {\n          \"name\": \"txID\",\n          \"required\": true,\n          \"description\": \"is the ID of the staking or delegating transaction.\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/TxID\"\n          }\n        },\n        {\n          \"$ref\": \"#/components/schemas/Encoding\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"getRewardUTXOsResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"numFetched\": {\n              \"type\": \"number\"\n            },\n            \"utxos\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getRewardUTXOsExample\",\n          \"params\": [\n            {\n              \"name\": \"txID\",\n              \"value\": {\n                \"txID\": \"2nmH8LithVbdjaXsxVQCQfXtzN9hBbmebrsaEYnLM9T32Uy2Y4\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getRewardUTXOsResultExample\",\n            \"value\": {\n              \"numFetched\": \"2\",\n              \"utxos\": [\n                \"11Zf8cc55Qy1rVgy3t87MJVCSEu539whRSwpdbrtHS6oh5Hnwv1gz8G3BtLJ73MPspLkD93cygZufT4TPYZCmuxW5cRdPrVMbZAHfb6uyGM1jNGBhBiQAgQ6V1yceYf825g27TT6WU4bTdbniWdECDWdGdi84hdiqSJH2y\",\n                \"11Zf8cc55Qy1rVgy3t87MJVCSEu539whRSwpdbrtHS6oh5Hnwv1NjNhqZnievVs2kBD9qTrayBYRs91emGTtmnu2wzqpLstbAPJDdVjf3kjwGWywNCdjV6TPGojVR5vHpJhBVRtHTQXR9VP9MBdHXge8zEBsQJAoZhTbr2\"\n              ],\n              \"encoding\": \"cb58\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getStakingAssetID\",\n      \"summary\": \"Retrieve an assetID for a subnetâ€™s staking asset. Currently, this only returns the Primary Networkâ€™s staking assetID.\",\n      \"params\": [\n        {\n          \"name\": \"subnetID\",\n          \"description\": \" is the subnet whose assetID is requested.\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"assetID\",\n          \"required\": true,\n          \"description\": \" is the assetID for a subnetâ€™s staking asset.\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getStakingAssetIDResult\",\n        \"schema\": {\n          \"title\": \"assetID\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"numFetched\": {\n              \"type\": \"number\"\n            },\n            \"utxos\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getStakingAssetIDExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getStakingAssetIDResultExample\",\n            \"value\": {\n              \"assetID\": \"FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getSubnets\",\n      \"summary\": \"Get info about the Subnets.\",\n      \"params\": [\n        {\n          \"name\": \"ids\",\n          \"description\": \" is the subnet whose assetID is requested.\",\n          \"required\": true,\n          \"schema\": {\n            \"title\": \"ids\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getSubnetsResult\",\n        \"schema\": {\n          \"title\": \"subnets\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\"\n            },\n            \"controlKeys\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"threshold\": {\n                \"type\": \"number\"\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getSubnetsExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getSubnetsResultExample\",\n            \"value\": {\n              \"subnets\": [\n                {\n                  \"id\": \"LLDx2QFUaxDwzdVmyLMJVQ13SBXb49L6VvbhFtLkNzFvKsMfJ\",\n                  \"controlKeys\": [\n                    \"P-avax14mzgygnzng8ck2luxctlz3pjl7hjrgpnmquddy\",\n                    \"P-avax16te45r7l8hq4d7nha8gqv4pmg7kwr9azrhdzll\"\n                  ],\n                  \"threshold\": \"2\"\n                },\n                {\n                  \"id\": \"uAc3jrvkuacxsAHAX8aFfYdxxA87Wsood2mdQtNHNEG7fR2bm\",\n                  \"controlKeys\": [\n                    \"P-avax14mzgygnzng8ck2luxctlz3pjl7hjrgpnmquddy\",\n                    \"P-avax16te45r7l8hq4d7nha8gqv4pmg7kwr9azrhdzll\"\n                  ],\n                  \"threshold\": \"2\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getStake\",\n      \"summary\": \"Get the amount of nAVAX staked by a set of addresses. The amount returned does not include staking rewards.\",\n      \"params\": [\n        {\n          \"name\": \"addresses\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/PAddresses\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getStakeResult\",\n        \"schema\": {\n          \"title\": \"staked\",\n          \"type\": \"number\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBlockchainStatusExample\",\n          \"params\": [\n            {\n              \"name\": \"Address\",\n              \"value\": {\n                \"addresses\": [\n                  \"P-avax1skrhcldnmsflmnf9dja2v9fdxcyapmw7lu97mh\"\n                ]\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBlockchainStatusResultExample\",\n            \"value\": {\n              \"staked\": \"18000000000000\",\n              \"stakedOutputs\": [\n                \"11CgK12iK1vdfQGvwDfWeorU1gs2fgBJh1RNeaKqK1G8KbK8opRGYhPv1uZSCJffph8eh83wjf6j9YGsX94UCnFbijemszc7p2Qx1uhU7xyWXTB7ZLsTjgocTiLLaXwMZLiMk\",\n                \"11CgK12iK1vdfQGvwDfWeorU1gs2fgBJh1RNeaKqK1G8KbK8opRGYhPv1vHfD18QAMmY9XMoU5Kv6skYidQi8PGzsb6TYb2QXv31voiqBQ8ePqNEhGrfb1CbscwGbvQSchobE\",\n                \"11CgK12iK1vdfQGvwDfWeorU1gs2fgBJh1RNeaKqK1G8KbK8opRGYhPv1vHfD18QAMmY9XMzzh53PBG8C8mJvVaryBRVfrNDy2hB9f4rvDqo5D6LYcdqTXJJeM2TjdRhup5og\",\n                \"11CgK12iK1vdfQGvwDfWeorU1gs2fgBJh1RNeaKqK1G8KbK8opRGYhPv1w1tDhb8W2QRbvgTHofjHf6XJpaqQ6nYiX8JDsCFYuKc8joTUL3bG9R8kTyMbSN25h7oTXnbxz6Lc\"\n              ],\n              \"encoding\": \"cb58\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getTotalStake\",\n      \"summary\": \"Get the total amount of nAVAX staked on the Primary Network.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"getTotalStakeResult\",\n        \"schema\": {\n          \"title\": \"stake\",\n          \"type\": \"number\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTotalStakeExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getTotalStakeResultExample\",\n            \"value\": {\n              \"stake\": \"217247125482267554\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getTx\",\n      \"summary\": \"Gets a transaction by its ID.\",\n      \"params\": [\n        {\n          \"name\": \"txID\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/TxID\"\n          }\n        },\n        {\n          \"$ref\": \"#/components/schemas/Encoding\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"getTxResult\",\n        \"schema\": {\n          \"title\": \"subnets\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"tx\": {\n              \"type\": \"string\"\n            },\n            \"encoding\": {\n              \"$ref\": \"#/components/schemas/Encoding\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTxExample\",\n          \"params\": [\n            {\n              \"name\": \"txID\",\n              \"value\": {\n                \"txID\": \"2tkoDiYeL5pzLTTd7vYu44sxHn1qzSnvDo3tPBRAA3dHei5Wqj\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTxResultExample\",\n            \"value\": {\n              \"tx\": \"111117dhRHcpR3NN84kmPbVTQdf8ZUhDVKYVGj2cWTeEu4souqdazKGBuhPuvGmwDVowZpAhmoxv7cdi9PxbxhMbe8121EJEmVbwHC4F3zigTz15bf12qaJf8r6vECwve1iWZvuJrnAthkuhVwYLZ5Pd51EEjm16AJ4gFa7zwXeVjY3YoVoqPyChKpcR2inDu73sxUkNCYUeg9dSwR2RUTvBMQb8CeH7YR6eYSmbM87vKySnEYcFhLCrUH9skjn1Uc8rg4uK9QAEiKGjC6fnh2JMnJNY2Dv5f4zxRn5b1H2549yZJ5ngaHVSxHMxTvpZex3C2WP5B5pXqBrrpePRULS6RXVyrkQYX9ctrYfVoRjskKq7f5ZzTPH6bmJUWUtJLLRvQt3pUR8ikRLfSNHCpq8n4RNmZuwLYiUWQMGn6zRJNQusrzFsKLdykvVSGkEza9Cq7cbNJrG4cJwD3DGSm9mNzXoQ71ogEG6SBZ4LPQ2xtbzKE6R8gsS4ipWfYJpCKwgho7Ae6dvfcW3uQZvEDxiprVs5UbbW9EAMffUJz3HAqzbknBTNF1VUA5ovyxGX74cVq5MnVfX5ouXfvqnnCekEZh7NxHkWF6qBvNKDfa541Aaum6ENJ8s5mniZsWzXiCdHZRTQJ7ZT6Vj2aerb86V15FEKpWJ2SPtCP9tdRqYfPnBae6xhRLFocc3dyva5qWmMkELsKbD4D92uFEAdc1kAUgMDfg5THsYQTrLocAurihfnqMXKzmeiZBZmb78h5amiDUqyffCotNXgZBXw5WiqAeyWsKT8wSmeWATDV3EfUJztqkHjEqwMjowS3rUVpBdyPUawy9n2QqN1mYvLp8ogJNLbvTUpQ9NjauVNA6tfWC56oBbqYqPdbbNhFctyCPkJ9yf4Kyg5YgdqrWVu4SzBAetEjxNmaPgJvm8WX48nJJ16asL2CHQaPpadKAFzB3dDcxozYXUi78rAVVXQSNm6Y8VFKws7wWmUb6eFNYuA8h7ngNbwSG5q6uLCMFg7HZe2CNoV57gyYWfsi676umnpoeL8sD6hHnW3pzewPBjKTNetjgVSzESSN9iw6uo6SovDXSteNMfnPJhYJXwffeEmP46ECnbCe24hjzjEqAtkMYMFa6AV1H5inmRWoQYuhH9xPdQmR7ZfJTzpvrSvS6Qqsp6AuwG6AXEGzfw1cVJTW\",\n              \"encoding\": \"cb58\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getTxStatus\",\n      \"summary\": \"Gets a transactionâ€™s status by its ID. If the transaction was dropped, response will include a reason field with more information why the transaction was dropped.\",\n      \"params\": [\n        {\n          \"name\": \"txID\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/TxID\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getTxStatusResult\",\n        \"description\": \"status is one of:\\n Validating: The blockchain is being validated by this node.\\n Created: The blockchain exists but isnâ€™t being validated by this node.\\n Preferred: The blockchain was proposed to be created and is likely to be created but the transaction isnâ€™t yet accepted.\\n Unknown: The blockchain either wasnâ€™t proposed or the proposal to create it isnâ€™t preferred. The proposal may be resubmitted.\",\n        \"schema\": {\n          \"title\": \"status\",\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTxStatusExample\",\n          \"params\": [\n            {\n              \"name\": \"txID\",\n              \"value\": {\n                \"txID\": \"2nmH8LithVbdjaXsxVQCQfXtzN9hBbmebrsaEYnLM9T32Uy2Y4\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTxStatusResultExample\",\n            \"value\": {\n              \"status\": \"Committed\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.getUTXOs\",\n      \"summary\": \"Gets the UTXOs that reference a given set of addresses.\",\n      \"params\": [\n        {\n          \"name\": \"addresses\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/PAddresses\"\n          }\n        },\n        {\n          \"name\": \"limit\",\n          \"description\": \"If startIndex is omitted, will fetch all UTXOs up to limit.\",\n          \"schema\": {\n            \"type\": \"number\"\n          }\n        },\n        {\n          \"name\": \"startIndex\",\n          \"schema\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"address\": {\n                \"type\": \"string\"\n              },\n              \"utxo\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        {\n          \"name\": \"sourceChain\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"$ref\": \"#/components/schemas/Encoding\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"getUTXOsResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"numFetched\": {\n              \"type\": \"number\"\n            },\n            \"utxos\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"endIndex\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"address\": {\n                  \"$ref\": \"#/components/schemas/PAddress\"\n                },\n                \"utxo\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"encoding\": {\n              \"$ref\": \"#/components/schemas/Encoding\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getUTXOsExample\",\n          \"params\": [\n            {\n              \"name\": \"Addresses\",\n              \"value\": {\n                \"addresses\": [\n                  \"P-avax1skrhcldnmsflmnf9dja2v9fdxcyapmw7lu97mh\"\n                ],\n                \"sourceChain\": \"X\",\n                \"limit\": 5\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getUTXOsResultExample\",\n            \"value\": {\n              \"numFetched\": \"0\",\n              \"utxos\": [],\n              \"endIndex\": {\n                \"address\": \"P-avax1skrhcldnmsflmnf9dja2v9fdxcyapmw7lu97mh\",\n                \"utxo\": \"11111111111111111111111111111111LpoYY\"\n              },\n              \"encoding\": \"cb58\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.issueTx\",\n      \"summary\": \"Issue a transaction to the Platform Chain.\",\n      \"params\": [\n        {\n          \"name\": \"tx\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"$ref\": \"#/components/schemas/Encoding\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"issueTxResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/TxID\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"issueTxExample\",\n          \"params\": [\n            {\n              \"name\": \"txID\",\n              \"value\": {\n                \"tx\": \"111Bit5JNASbJyTLrd2kWkYRoc96swEWoWdmEhuGAFK3rCAyTnTzomuFwgx1SCUdUE71KbtXPnqj93KGr3CeftpPN37kVyqBaAQ5xaDjr7wVBTUYi9iV7kYJnHF61yovViJF74mJJy7WWQKeRMDRTiPuii5gsd11gtNahCCsKbm9seJtk2h1wAPZn9M1eL84CGVPnLUiLP\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"issueTxResultExample\",\n            \"value\": {\n              \"txID\": \"G3BuH6ytQ2averrLxJJugjWZHTRubzCrUZEXoheG5JMqL5ccY\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.sampleValidators\",\n      \"summary\": \"Sample validators from the specified Subnet.\",\n      \"params\": [\n        {\n          \"name\": \"size\",\n          \"description\": \"is the number of validators to sample.\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"number\"\n          }\n        },\n        {\n          \"name\": \"subnetID\",\n          \"description\": \" is the Subnet to sampled from. If omitted, defaults to the Primary Network.\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"sampleValidatorsResult\",\n        \"description\": \"Each element of validators is the ID of a validator.\",\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"sampleValidatorsExample\",\n          \"params\": [\n            {\n              \"name\": \"size\",\n              \"value\": {\n                \"size\": 5\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"sampleValidatorsResultExample\",\n            \"value\": {\n              \"validators\": [\n                \"NodeID-2HvkjoRiMzEcZgpWKNAruLKNv9r7Lb2pv\",\n                \"NodeID-D3onstuMsGRctDjbksXU6BV3rrCbWHkB9\",\n                \"NodeID-KNLkh3KVKFFhBWujmcZ5P3p2fJc3BbdNA\",\n                \"NodeID-LxrJtyQXpdweZH7LR3ujcEQZJ9VDTW3tC\",\n                \"NodeID-NkYLNRp4S6exbWamVvMzUUpXvHeVEzLR6\"\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.validatedBy\",\n      \"summary\": \"Get the Subnet that validates a given blockchain.\",\n      \"params\": [\n        {\n          \"name\": \"blockchainID\",\n          \"description\": \"is the blockchainâ€™s ID.\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"validatedByResult\",\n        \"description\": \"is the ID of the Subnet that validates the blockchain.\",\n        \"schema\": {\n          \"title\": \"subnetID\",\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"validatedByExample\",\n          \"params\": [\n            {\n              \"name\": \"blockchainID\",\n              \"value\": {\n                \"blockchainID\": \"2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"validatedByResultExample\",\n            \"value\": {\n              \"subnetID\": \"11111111111111111111111111111111LpoYY\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/P\"\n        }\n      ],\n      \"name\": \"platform.validates\",\n      \"summary\": \"Get the IDs of the blockchains a Subnet validates.\",\n      \"params\": [\n        {\n          \"name\": \"subnetID\",\n          \"description\": \"subnetID is the Subnetâ€™s ID.\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"validatesResult\",\n        \"description\": \"Each element of blockchainIDs is the ID of a blockchain the Subnet validates.\",\n        \"schema\": {\n          \"title\": \"blockchainIDs\",\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"validatesExample\",\n          \"params\": [\n            {\n              \"name\": \"subnetID\",\n              \"value\": {\n                \"subnetID\": \"11111111111111111111111111111111LpoYY\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"validatesResultExample\",\n            \"value\": {\n              \"blockchainIDs\": [\n                \"2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5\",\n                \"2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM\"\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/info\"\n        }\n      ],\n      \"name\": \"info.getBlockchainID\",\n      \"summary\": \"Given a blockchainâ€™s alias, get its ID.\",\n      \"params\": [\n        {\n          \"name\": \"alias\",\n          \"required\": true,\n          \"description\": \"alias X,P or C\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getBlockchainIDResult\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBlockchainIDExample\",\n          \"params\": [\n            {\n              \"name\": \"TransactionHash\",\n              \"value\": {\n                \"alias\": \"X\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBlockchainIDResultExample\",\n            \"value\": \"0x5508f1e4304cdc7d1f601e8e0322629ddcfb4ad1b1858d09e6c0b78bc097e863\"\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/info\"\n        }\n      ],\n      \"name\": \"info.getNetworkID\",\n      \"summary\": \"Get the ID of the network this node is participating in.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"getNetworkIDResult\",\n        \"schema\": {\n          \"type\": \"number\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getNetworkIDExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getNetworkIDResultExample\",\n            \"value\": {\n              \"networkID\": \"1\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/info\"\n        }\n      ],\n      \"name\": \"info.getNetworkName\",\n      \"summary\": \"Get the name of the network this node is participating in.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"getNetworkNameResult\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getNetworkNameExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getNetworkNameResultExample\",\n            \"value\": {\n              \"networkName\": \"mainnet\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/info\"\n        }\n      ],\n      \"name\": \"info.getNodeVersion\",\n      \"summary\": \"Get the version of this node.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"getNodeVersionResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"version\": {\n              \"description\": \"is this node's version\",\n              \"type\": \"string\"\n            },\n            \"databaseVersion\": {\n              \"description\": \"is the version of the database this node is using\",\n              \"type\": \"string\"\n            },\n            \"gitCommit\": {\n              \"description\": \"is the Git commit that this node was built from\",\n              \"type\": \"string\"\n            },\n            \"vmVersions\": {\n              \"description\": \"is map where each key/value pair is the name of a VM, and the version of that VM this node runs\",\n              \"type\": \"object\",\n              \"properties\": {\n                \"avm\": {\n                  \"type\": \"string\"\n                },\n                \"evm\": {\n                  \"type\": \"string\"\n                },\n                \"platform\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getNodeVersionExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getNodeVersionResultExample\",\n            \"value\": {\n              \"version\": \"avalanche/1.4.12\",\n              \"databaseVersion\": \"v1.4.5\",\n              \"gitCommit\": \"507233ad896c8d64567c450cd9b4ad971d98cee8\",\n              \"vmVersions\": {\n                \"avm\": \"v1.4.12\",\n                \"evm\": \"v0.5.7-rc.1\",\n                \"platform\": \"v1.4.12\"\n              }\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/info\"\n        }\n      ],\n      \"name\": \"info.isBootstrapped\",\n      \"summary\": \"Check whether a given chain is done bootstrapping\",\n      \"params\": [\n        {\n          \"name\": \"chain\",\n          \"required\": true,\n          \"description\": \"chain X, P or C\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"isBootstrappedResult\",\n        \"schema\": {\n          \"tile\": \"isBootstrapped\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"isBootstrappedExample\",\n          \"params\": [\n            {\n              \"name\": \"chain\",\n              \"value\": {\n                \"chain\": \"X\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"isBootstrappedResultExample\",\n            \"value\": {\n              \"networkName\": \"mainnet\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/info\"\n        }\n      ],\n      \"name\": \"info.peers\",\n      \"summary\": \"Get a description of peer connections.\",\n      \"params\": [\n        {\n          \"name\": \"nodeIDs\",\n          \"description\": \"is an optional parameter to specify what nodeID's descriptions should be returned. If this parameter is left empty, descriptions for all active connections will be returned. If the node is not connected to a specified nodeID, it will be omitted from the response.\",\n          \"schema\": {\n            \"tile\": \"nodeIDs\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"peersResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"numPeers\": {\n              \"type\": \"number\"\n            },\n            \"peers\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"ip\": {\n                    \"type\": \"string\"\n                  },\n                  \"publicIP\": {\n                    \"type\": \"string\"\n                  },\n                  \"nodeID\": {\n                    \"type\": \"string\"\n                  },\n                  \"version\": {\n                    \"type\": \"string\"\n                  },\n                  \"lastSent\": {\n                    \"type\": \"string\"\n                  },\n                  \"lastReceived\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"peersExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"peersResultExample\",\n            \"value\": [\n              {\n                \"ip\": \"3.128.138.36:9651\",\n                \"publicIP\": \"3.128.138.36:9651\",\n                \"nodeID\": \"NodeID-9CkG9MBNavnw7EVSRsuFr7ws9gascDQy3\",\n                \"version\": \"avalanche/1.4.12\",\n                \"lastSent\": \"2021-07-30T10:57:12Z\",\n                \"lastReceived\": \"2021-07-30T10:57:12Z\",\n                \"benched\": []\n              },\n              {\n                \"ip\": \"3.23.198.85:9651\",\n                \"publicIP\": \"3.23.198.85:9651\",\n                \"nodeID\": \"NodeID-2Acrc5w3sGyPD649vtLpfYreyjWWnofU4\",\n                \"version\": \"avalanche/1.4.10\",\n                \"lastSent\": \"2021-07-30T10:57:09Z\",\n                \"lastReceived\": \"2021-07-30T10:57:09Z\",\n                \"benched\": []\n              }\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/info\"\n        }\n      ],\n      \"name\": \"info.getTxFee\",\n      \"summary\": \"Get the fees of the network.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"getTxFeeResult\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"creationTxFee\": {\n              \"type\": \"number\"\n            },\n            \"txFee\": {\n              \"type\": \"number\"\n            }\n          }\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTxFeeExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"getTxFeeResultExample\",\n            \"value\": {\n              \"creationTxFee\": \"10000000\",\n              \"txFee\": \"1000000\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"eth_blockNumber\",\n      \"summary\": \"Returns the number of most recent block.\",\n      \"params\": [],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"blockNumberExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"blockNumberResultExample\",\n            \"value\": \"0x2b2340\"\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"eth_call\",\n      \"summary\": \"Executes a new message call (locally) immediately without creating a transaction on the block chain.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/Transaction\"\n        },\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"returnValue\",\n        \"description\": \"The return value of the executed contract\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Bytes\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"callExample\",\n          \"params\": [\n            {\n              \"name\": \"address\",\n              \"value\": {\n                \"to\": \"0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7\",\n                \"data\": \"0xc92aecc4\"\n              }\n            },\n            {\n              \"name\": \"blockNumber\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"callResultExample\",\n            \"value\": \"0x\"\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"eth_chainId\",\n      \"summary\": \"Returns the currently configured chain id\",\n      \"description\": \"Returns the currently configured chain id, a value used in replay-protected transaction signing as introduced by [EIP-155](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md).\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"chainId\",\n        \"description\": \"hex format integer of the current chain id. Defaults are ETC=61, ETH=1, Morden=62.\",\n        \"schema\": {\n          \"title\": \"chainId\",\n          \"type\": \"string\",\n          \"pattern\": \"^0x[a-fA-F\\\\d]+$\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"chainIdExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"chainIdResultExample\",\n            \"value\": \"0xa86a\"\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"eth_getAssetBalance\",\n      \"summary\": \"Returns balance of first class Avalanche Native Tokens on the C-Chain\",\n      \"params\": [\n        {\n          \"name\": \"address\",\n          \"required\": true,\n          \"description\": \"owner of the asset\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          }\n        },\n        {\n          \"name\": \"blockNumber\",\n          \"required\": true,\n          \"description\": \"the block number or hash at which to retrieve the balance\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        },\n        {\n          \"name\": \"assetID\",\n          \"required\": true,\n          \"description\": \"id of the asset for which the balance is requested\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getAssetBalanceResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/IntegerOrNull\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getAssetBalanceExample\",\n          \"params\": [\n            {\n              \"name\": \"0x233a0248528e82f0D3d9Ab932f255a9667154E8C\",\n              \"value\": \"latest\"\n            },\n            {\n              \"name\": \"blockNumber\",\n              \"value\": \"latest\"\n            },\n            {\n              \"name\": \"assetID\",\n              \"value\": \"FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getAssetBalanceResultExample\",\n            \"value\": \"0x0\"\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"eth_getBalance\",\n      \"summary\": \"Returns AVAX balance of a given or account or contract\",\n      \"params\": [\n        {\n          \"name\": \"address\",\n          \"required\": true,\n          \"description\": \"The address of the account or contract\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          }\n        },\n        {\n          \"name\": \"blockNumber\",\n          \"description\": \"A BlockNumber at which to request the balance\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getBalanceResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/IntegerOrNull\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBalanceExample\",\n          \"params\": [\n            {\n              \"name\": \"Address\",\n              \"value\": \"0x233a0248528e82f0D3d9Ab932f255a9667154E8C\"\n            },\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBalanceResultExample\",\n            \"value\": {\n              \"txID\": \"NUPLwbt2hsYxpQg4H2o451hmTWQ4JZx2zMzM4SinwtHgAdX1JLPHXvWSXEnpecStLj\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"eth_signTransaction\",\n      \"summary\": \"Signs a transaction that can be submitted to the network at a later time using with eth_sendRawTransaction.\",\n      \"params\": [\n        {\n          \"name\": \"Transaction\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/SignTransaction\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"Encoded transaction\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Bytes\"\n        }\n      }\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"eth_getTransactionCount\",\n      \"summary\": \"Returns the number of transactions sent from an address\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/Address\"\n        },\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"transactionCount\",\n        \"schema\": {\n          \"title\": \"nonceOrNull\",\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/components/schemas/Nonce\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/Null\"\n            }\n          ]\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTransactionCountExample\",\n          \"params\": [\n            {\n              \"name\": \"Address\",\n              \"value\": \"0xE17Ea0479beF107fe23AeCD9d984fcE6FD96dCa6\"\n            },\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"latest\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTransactionCountResultExample\",\n            \"value\": \"0x42\"\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"eth_sendRawTransaction\",\n      \"summary\": \"Creates new message call transaction or a contract creation for signed transactions.\",\n      \"params\": [\n        {\n          \"name\": \"signedTransactionData\",\n          \"required\": true,\n          \"description\": \"The signed transaction data\",\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/Bytes\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"transactionHash\",\n        \"description\": \"The transaction hash, or the zero hash if the transaction is not yet available.\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Keccak\"\n        }\n      }\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"eth_getBlockByHash\",\n      \"summary\": \"Gets a block for a given hash\",\n      \"params\": [\n        {\n          \"name\": \"blockHash\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          }\n        },\n        {\n          \"name\": \"includeTransactions\",\n          \"description\": \"If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.\",\n          \"required\": true,\n          \"schema\": {\n            \"title\": \"isTransactionsIncluded\",\n            \"type\": \"boolean\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getBlockByHashResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/BlockOrNull\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBlockByHashExample\",\n          \"params\": [\n            {\n              \"name\": \"Address\",\n              \"value\": \"0xe20b733bd281ee2fa40dc6b4c3b61fb152356b02cd111a885ac3d81e84bcf8e6\"\n            },\n            {\n              \"name\": \"isTransactionsIncluded\",\n              \"value\": true\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBlockByHashExampleResult\",\n            \"value\": {\n              \"blockExtraData\": \"0x\",\n              \"difficulty\": \"0x1\",\n              \"extDataHash\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n              \"extraData\": \"0x\",\n              \"gasLimit\": \"0x7a1200\",\n              \"gasUsed\": \"0x1fa79\",\n              \"hash\": \"0xe20b733bd281ee2fa40dc6b4c3b61fb152356b02cd111a885ac3d81e84bcf8e6\",\n              \"logsBloom\": \"0xn              \"miner\": \"0x0100000000000000000000000000000000000000\",\n              \"mixHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n              \"nonce\": \"0x0000000000000000\",\n              \"number\": \"0x2b2467\",\n              \"parentHash\": \"0xb4b0343c9557772d16460be8866e807c82d0835ad96dd10642c20a1dd7f4fd44\",\n              \"receiptsRoot\": \"0x75e95716f026716f8a39599f32e5e875f7bac8afe8e64cfa0d389bcc5563ccc2\",\n              \"sha3Uncles\": \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\n              \"size\": \"0x382\",\n              \"stateRoot\": \"0x8e09d050f1fb71cc01d16d5d03994cf26d37477c0049fb8efeb6b766060bd040\",\n              \"timestamp\": \"0x61049d85\",\n              \"totalDifficulty\": \"0x2b2467\",\n              \"transactions\": [\n                {\n                  \"blockHash\": \"0xe20b733bd281ee2fa40dc6b4c3b61fb152356b02cd111a885ac3d81e84bcf8e6\",\n                  \"blockNumber\": \"0x2b2467\",\n                  \"from\": \"0x741d2cbf05ccdcaf537692ebdeb1dd86039d6db7\",\n                  \"gas\": \"0x2383d\",\n                  \"gasPrice\": \"0x34630b8a00\",\n                  \"hash\": \"0x8faf3db0288f9abbbae9e9ab8552a21a62cb85596f53c08c9b68727ba098c094\",\n                  \"input\": \"0xa2a1623d000000000000000000000000000000000000000000000043e0c5c0f891de4d860000000000000000000000000000000000000000000000000000000000000080000000000000000000000000741d2cbf05ccdcaf537692ebdeb1dd86039d6db70000000000000000000000000000000000000000000000000000017afa08cb450000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000ba7deebbfc5fa1100fb055a87773e1e99cd3507a\",\n                  \"nonce\": \"0x1f29\",\n                  \"to\": \"0xe54ca86531e17ef3616d22ca28b0d458b6c89106\",\n                  \"transactionIndex\": \"0x0\",\n                  \"value\": \"0x556f64c1fe7fa0000\",\n                  \"type\": \"0x0\",\n                  \"v\": \"0x150f8\",\n                  \"r\": \"0x9f5a848525414d38c6b64f0e158f069479838b662058844b70213e5ff924e991\",\n                  \"s\": \"0x6f541ca8d3d9811661025203089233bd0c751c82d9e160682be5c55d93a1d0a\"\n                }\n              ],\n              \"transactionsRoot\": \"0xdf14e5d58dde108b941dd65e42f593f1760e6afabc04d6f7741566286a7ce47f\",\n              \"uncles\": []\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"eth_getBlockByNumber\",\n      \"summary\": \"Gets a block for a given number\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/BlockNumber\"\n        },\n        {\n          \"name\": \"includeTransactions\",\n          \"description\": \"If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.\",\n          \"required\": true,\n          \"schema\": {\n            \"title\": \"isTransactionsIncluded\",\n            \"type\": \"boolean\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"getBlockByNumberResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/BlockOrNull\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBlockByNumberExample\",\n          \"params\": [\n            {\n              \"name\": \"BlockNumber\",\n              \"value\": \"0x2b2467\"\n            },\n            {\n              \"name\": \"isTransactionsIncluded\",\n              \"value\": true\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBlockByNumberExampleResult\",\n            \"value\": {\n              \"blockExtraData\": \"0x\",\n              \"difficulty\": \"0x1\",\n              \"extDataHash\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n              \"extraData\": \"0x\",\n              \"gasLimit\": \"0x7a1200\",\n              \"gasUsed\": \"0x1fa79\",\n              \"hash\": \"0xe20b733bd281ee2fa40dc6b4c3b61fb152356b02cd111a885ac3d81e84bcf8e6\",\n              \"logsBloom\": \"0xn              \"miner\": \"0x0100000000000000000000000000000000000000\",\n              \"mixHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n              \"nonce\": \"0x0000000000000000\",\n              \"number\": \"0x2b2467\",\n              \"parentHash\": \"0xb4b0343c9557772d16460be8866e807c82d0835ad96dd10642c20a1dd7f4fd44\",\n              \"receiptsRoot\": \"0x75e95716f026716f8a39599f32e5e875f7bac8afe8e64cfa0d389bcc5563ccc2\",\n              \"sha3Uncles\": \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\n              \"size\": \"0x382\",\n              \"stateRoot\": \"0x8e09d050f1fb71cc01d16d5d03994cf26d37477c0049fb8efeb6b766060bd040\",\n              \"timestamp\": \"0x61049d85\",\n              \"totalDifficulty\": \"0x2b2467\",\n              \"transactions\": [\n                {\n                  \"blockHash\": \"0xe20b733bd281ee2fa40dc6b4c3b61fb152356b02cd111a885ac3d81e84bcf8e6\",\n                  \"blockNumber\": \"0x2b2467\",\n                  \"from\": \"0x741d2cbf05ccdcaf537692ebdeb1dd86039d6db7\",\n                  \"gas\": \"0x2383d\",\n                  \"gasPrice\": \"0x34630b8a00\",\n                  \"hash\": \"0x8faf3db0288f9abbbae9e9ab8552a21a62cb85596f53c08c9b68727ba098c094\",\n                  \"input\": \"0xa2a1623d000000000000000000000000000000000000000000000043e0c5c0f891de4d860000000000000000000000000000000000000000000000000000000000000080000000000000000000000000741d2cbf05ccdcaf537692ebdeb1dd86039d6db70000000000000000000000000000000000000000000000000000017afa08cb450000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000ba7deebbfc5fa1100fb055a87773e1e99cd3507a\",\n                  \"nonce\": \"0x1f29\",\n                  \"to\": \"0xe54ca86531e17ef3616d22ca28b0d458b6c89106\",\n                  \"transactionIndex\": \"0x0\",\n                  \"value\": \"0x556f64c1fe7fa0000\",\n                  \"type\": \"0x0\",\n                  \"v\": \"0x150f8\",\n                  \"r\": \"0x9f5a848525414d38c6b64f0e158f069479838b662058844b70213e5ff924e991\",\n                  \"s\": \"0x6f541ca8d3d9811661025203089233bd0c751c82d9e160682be5c55d93a1d0a\"\n                }\n              ],\n              \"transactionsRoot\": \"0xdf14e5d58dde108b941dd65e42f593f1760e6afabc04d6f7741566286a7ce47f\",\n              \"uncles\": []\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"eth_getTransactionByHash\",\n      \"summary\": \"Returns the information about a transaction requested by transaction hash.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/TransactionHash\"\n        }\n      ],\n      \"result\": {\n        \"$ref\": \"#/components/contentDescriptors/TransactionResult\"\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTransactionByHashExample\",\n          \"params\": [\n            {\n              \"name\": \"TransactionHash\",\n              \"value\": \"0x7f9bff67d69a79543a82308485fd3acae0713b8a81223ff1a3b0a6d257446c0d\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"getTransactionByHashResultExample\",\n            \"value\": [\n              {\n                \"blockHash\": \"0xa18a201a037c01a99943bcc3f715901bc46954967e6dad4a8d04d7044813c9db\",\n                \"blockNumber\": \"0x2b2481\",\n                \"from\": \"0xd84d2e392ca6b993f98bf48e53a722c1b57dc66b\",\n                \"gas\": \"0x493e0\",\n                \"gasPrice\": \"0x34630b8a00\",\n                \"hash\": \"0x7f9bff67d69a79543a82308485fd3acae0713b8a81223ff1a3b0a6d257446c0d\",\n                \"input\": \"0xe9fad8ee\",\n                \"nonce\": \"0x8\",\n                \"to\": \"0x39124af473501ccd83a5791ea1efbc2e6dd78f10\",\n                \"transactionIndex\": \"0x0\",\n                \"value\": \"0x0\",\n                \"type\": \"0x0\",\n                \"v\": \"0x150f7\",\n                \"r\": \"0xc06dbda9c570ecaa3ce1af65bed110fa3475770d2ed2fddae9f401993a934d02\",\n                \"s\": \"0x32c9fd37487a6bf6d6a70c657efb59063b75b7584d3e695ba73007e66eaca6a1\"\n              }\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"eth_getTransactionReceipt\",\n      \"summary\": \"Returns the receipt information of a transaction by its hash.\",\n      \"params\": [\n        {\n          \"$ref\": \"#/components/contentDescriptors/TransactionHash\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"transactionReceiptResult\",\n        \"description\": \"returns either a receipt or null\",\n        \"schema\": {\n          \"title\": \"transactionReceiptOrNull\",\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/components/schemas/Receipt\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/Null\"\n            }\n          ]\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getTransactionReceiptExample\",\n          \"params\": [\n            {\n              \"name\": \"TransactionHash\",\n              \"value\": \"0x6b61a565d49eb99cdd45b8836279f5686eafbb81b3ee8dc19b93eb8ef2d283ff\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"tTransactionReceiptResultExample\",\n            \"value\": {\n              \"blockHash\": \"0x43030dd7556aab55f369f6145d9e3767c38fd3f5468ef8a5dbffae837292b9df\",\n              \"blockNumber\": \"0x2b2490\",\n              \"contractAddress\": null,\n              \"cumulativeGasUsed\": \"0xb871\",\n              \"from\": \"0xe558e2d80bbb2290b62af64400d66cc69bbb29a3\",\n              \"gasUsed\": \"0xb871\",\n              \"logs\": [\n                {\n                  \"address\": \"0xa5e59761ebd4436fa4d20e1a27cba29fb2471fc6\",\n                  \"topics\": [\n                    \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n                    \"0x000000000000000000000000e558e2d80bbb2290b62af64400d66cc69bbb29a3\",\n                    \"0x00000000000000000000000060ae616a2155ee3d9a68541ba4544862310933d4\"\n                  ],\n                  \"data\": \"0x0000000000000000000000000000000000000000ffffffffffffffffffffffff\",\n                  \"blockNumber\": \"0x2b2490\",\n                  \"transactionHash\": \"0x6b61a565d49eb99cdd45b8836279f5686eafbb81b3ee8dc19b93eb8ef2d283ff\",\n                  \"transactionIndex\": \"0x0\",\n                  \"blockHash\": \"0x43030dd7556aab55f369f6145d9e3767c38fd3f5468ef8a5dbffae837292b9df\",\n                  \"logIndex\": \"0x0\",\n                  \"removed\": false\n                }\n              ],\n              \"logsBloom\": \"0xn              \"status\": \"0x1\",\n              \"to\": \"0xa5e59761ebd4436fa4d20e1a27cba29fb2471fc6\",\n              \"transactionHash\": \"0x6b61a565d49eb99cdd45b8836279f5686eafbb81b3ee8dc19b93eb8ef2d283ff\",\n              \"transactionIndex\": \"0x0\",\n              \"type\": \"0x0\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/avax\"\n        }\n      ],\n      \"name\": \"avax.getAtomicTxStatus\",\n      \"summary\": \"Get the status of an atomic transaction sent to the network.\",\n      \"params\": [\n        {\n          \"name\": \"txID\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/TxID\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"AtomicTxStatusResult\",\n        \"schema\": {\n          \"title\": \"AtomicTxStatusStatus\",\n          \"oneOf\": [\n            {\n              \"name\": \"status\",\n              \"schema\": {\n                \"title\": \"status\",\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"status\": {\n                    \"type\": \"string\"\n                  },\n                  \"blockHeight\": {\n                    \"schema\": {\n                      \"type\": \"number\"\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBlockchainIDExample\",\n          \"params\": [\n            {\n              \"name\": \"txId\",\n              \"value\": {\n                \"txID\": \"2uC1ym6GNUZGfYHSbaaniVfi4zPQtZMjwbYZnjpZUnUDykEy35\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBlockchainIDResultExample\",\n            \"value\": {\n              \"status\": \"Accepted\",\n              \"blockHeight\": \"2825076\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/avax\"\n        }\n      ],\n      \"name\": \"avax.getUTXOs\",\n      \"summary\": \"Gets the UTXOs that reference a given address.\",\n      \"params\": [\n        {\n          \"name\": \"addresses\",\n          \"description\": \"is a list of UTXOs such that each UTXO references at least one address in addresses.\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        {\n          \"name\": \"limit\",\n          \"description\": \"At most limit UTXOs are returned. If limit is omitted or greater than 1024, it is set to 1024.\",\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"sourceChain\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"startIndex\",\n          \"description\": \"If startIndex is omitted, will fetch all UTXOs up to limit\",\n          \"schema\": {\n            \"title\": \"startIndex\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"address\": {\n                \"type\": \"string\"\n              },\n              \"utxo\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        {\n          \"$ref\": \"#/components/schemas/Encoding\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"getUTXOsResult\",\n        \"schema\": {\n          \"type\": \"object\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"getBlockchainIDExample\",\n          \"params\": [\n            {\n              \"name\": \"Address\",\n              \"value\": {\n                \"addresses\": [\n                  \"C-avax1nz70l5hlhpjch24fr6xcvpj3tmr2uladasg4jn\"\n                ],\n                \"sourceChain\": \"X\",\n                \"encoding\": \"cb58\"\n              }\n            }\n          ],\n          \"result\": {\n            \"name\": \"getBlockchainIDResultExample\",\n            \"value\": {\n              \"numFetched\": \"0\",\n              \"utxos\": [],\n              \"endIndex\": {\n                \"address\": \"C-avax1nz70l5hlhpjch24fr6xcvpj3tmr2uladasg4jn\",\n                \"utxo\": \"11111111111111111111111111111111LpoYY\"\n              },\n              \"encoding\": \"cb58\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/avax\"\n        }\n      ],\n      \"name\": \"avax.issueTx\",\n      \"summary\": \"Send a signed transaction to the network. encoding specifies the format of the signed transaction. Can be either \\\"cb58\\\" or \\\"hex\\\". Defaults to \\\"cb58\\\".\",\n      \"params\": [\n        {\n          \"name\": \"tx\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"$ref\": \"#/components/schemas/Encoding\"\n        }\n      ],\n      \"result\": {\n        \"name\": \"issueTxResult\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/TxID\"\n        }\n      }\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"net_version\",\n      \"summary\": \"Network identifier associated with network\",\n      \"description\": \"Returns the network ID associated with the current network.\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"networkId\",\n        \"description\": \"Network ID associated with the current network\",\n        \"schema\": {\n          \"title\": \"networkId\",\n          \"type\": \"string\",\n          \"pattern\": \"^[\\\\d]+$\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"netversionExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"netversionResultExample\",\n            \"value\": \"1\"\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"web3_clientVersion\",\n      \"description\": \"Returns the version of the current client\",\n      \"summary\": \"current client version\",\n      \"params\": [],\n      \"result\": {\n        \"name\": \"clientVersion\",\n        \"description\": \"client version\",\n        \"schema\": {\n          \"title\": \"clientVersion\",\n          \"type\": \"string\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"clientVersionExample\",\n          \"params\": [],\n          \"result\": {\n            \"name\": \"clientVersionResultExample\",\n            \"value\": \"v0.5.7-rc.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"tags\": [\n        {\n          \"name\": \"/bc/C/rpc\"\n        }\n      ],\n      \"name\": \"web3_sha3\",\n      \"summary\": \"Hashes data\",\n      \"description\": \"Hashes data using the Keccak-256 algorithm\",\n      \"params\": [\n        {\n          \"name\": \"data\",\n          \"description\": \"data to hash using the Keccak-256 algorithm\",\n          \"summary\": \"data to hash\",\n          \"schema\": {\n            \"title\": \"data\",\n            \"type\": \"string\",\n            \"pattern\": \"^0x[a-fA-F\\\\d]+$\"\n          }\n        }\n      ],\n      \"result\": {\n        \"name\": \"hashedData\",\n        \"description\": \"Keccak-256 hash of the given data\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Keccak\"\n        }\n      },\n      \"examples\": [\n        {\n          \"name\": \"sha3Example\",\n          \"params\": [\n            {\n              \"name\": \"sha3ParamExample\",\n              \"value\": \"0x736e6f7773746f726d\"\n            }\n          ],\n          \"result\": {\n            \"name\": \"sha3ResultExample\",\n            \"value\": \"0x627119bb8286874a15d562d32829613311a678da26ca7a6a785ec4ad85937d06\"\n          }\n        }\n      ]\n    }\n  ],\n  \"components\": {\n    \"schemas\": {\n      \"Bytes65\": {\n        \"title\": \"65 hex encoded bytes\",\n        \"type\": \"string\",\n        \"pattern\": \"^0x[0-9a-f]{512}$\"\n      },\n      \"ProofNode\": {\n        \"title\": \"proofNode\",\n        \"description\": \"An individual node used to prove a path down a merkle-patricia-tree\",\n        \"$ref\": \"#/components/schemas/Bytes\"\n      },\n      \"StorageProofKey\": {\n        \"title\": \"storageProofKey\",\n        \"description\": \"The key used to get the storage slot in its account tree.\",\n        \"$ref\": \"#/components/schemas/Integer\"\n      },\n      \"StorageProof\": {\n        \"title\": \"storageProofSet\",\n        \"type\": \"array\",\n        \"description\": \"Current block header PoW hash.\",\n        \"items\": {\n          \"title\": \"storageProof\",\n          \"type\": \"object\",\n          \"description\": \"Object proving a relationship of a storage value to an account's storageHash.\",\n          \"properties\": {\n            \"key\": {\n              \"$ref\": \"#/components/schemas/StorageProofKey\"\n            },\n            \"value\": {\n              \"title\": \"storageProofValue\",\n              \"description\": \"The value of the storage slot in its account tree\",\n              \"$ref\": \"#/components/schemas/Integer\"\n            },\n            \"proof\": {\n              \"$ref\": \"#/components/schemas/ProofNodes\"\n            }\n          }\n        }\n      },\n      \"ProofNodes\": {\n        \"title\": \"proofNodes\",\n        \"type\": \"array\",\n        \"description\": \"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/ProofNode\"\n        }\n      },\n      \"PowHash\": {\n        \"title\": \"powHash\",\n        \"description\": \"Current block header PoW hash.\",\n        \"$ref\": \"#/components/schemas/DataWord\"\n      },\n      \"SeedHash\": {\n        \"title\": \"seedHash\",\n        \"description\": \"The seed hash used for the DAG.\",\n        \"$ref\": \"#/components/schemas/DataWord\"\n      },\n      \"MixHash\": {\n        \"title\": \"mixHash\",\n        \"description\": \"The mix digest.\",\n        \"$ref\": \"#/components/schemas/DataWord\"\n      },\n      \"Difficulty\": {\n        \"title\": \"difficulty\",\n        \"description\": \"The boundary condition ('target'), 2^256 / difficulty.\",\n        \"$ref\": \"#/components/schemas/DataWord\"\n      },\n      \"FilterId\": {\n        \"title\": \"filterId\",\n        \"type\": \"string\",\n        \"description\": \"An identifier used to reference the filter.\"\n      },\n      \"BlockHash\": {\n        \"title\": \"blockHash\",\n        \"type\": \"string\",\n        \"pattern\": \"^0x[a-fA-F\\\\d]{64}$\",\n        \"description\": \"The hex representation of the Keccak 256 of the RLP encoded block\"\n      },\n      \"BlockNumber\": {\n        \"title\": \"blockNumber\",\n        \"type\": \"string\",\n        \"description\": \"The hex representation of the block's height\",\n        \"$ref\": \"#/components/schemas/Integer\"\n      },\n      \"BlockNumberTag\": {\n        \"title\": \"blockNumberTag\",\n        \"type\": \"string\",\n        \"description\": \"The optional block height description\",\n        \"enum\": [\n          \"earliest\",\n          \"latest\",\n          \"pending\"\n        ]\n      },\n      \"BlockOrNull\": {\n        \"title\": \"blockOrNull\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Block\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"IntegerOrNull\": {\n        \"title\": \"integerOrNull\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Integer\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"AddressOrNull\": {\n        \"title\": \"addressOrNull\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Address\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"Receipt\": {\n        \"title\": \"receipt\",\n        \"type\": \"object\",\n        \"description\": \"The receipt of a transaction\",\n        \"required\": [\n          \"blockHash\",\n          \"blockNumber\",\n          \"contractAddress\",\n          \"cumulativeGasUsed\",\n          \"from\",\n          \"gasUsed\",\n          \"logs\",\n          \"logsBloom\",\n          \"to\",\n          \"transactionHash\",\n          \"transactionIndex\"\n        ],\n        \"properties\": {\n          \"blockHash\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          },\n          \"blockNumber\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          },\n          \"contractAddress\": {\n            \"title\": \"ReceiptContractAddress\",\n            \"description\": \"The contract address created, if the transaction was a contract creation, otherwise null\",\n            \"$ref\": \"#/components/schemas/AddressOrNull\"\n          },\n          \"cumulativeGasUsed\": {\n            \"title\": \"ReceiptCumulativeGasUsed\",\n            \"description\": \"The gas units used by the transaction\",\n            \"$ref\": \"#/components/schemas/Integer\"\n          },\n          \"from\": {\n            \"$ref\": \"#/components/schemas/From\"\n          },\n          \"gasUsed\": {\n            \"title\": \"ReceiptGasUsed\",\n            \"description\": \"The total gas used by the transaction\",\n            \"$ref\": \"#/components/schemas/Integer\"\n          },\n          \"logs\": {\n            \"title\": \"logs\",\n            \"type\": \"array\",\n            \"description\": \"An array of all the logs triggered during the transaction\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Log\"\n            }\n          },\n          \"logsBloom\": {\n            \"$ref\": \"#/components/schemas/BloomFilter\"\n          },\n          \"to\": {\n            \"$ref\": \"#/components/schemas/To\"\n          },\n          \"transactionHash\": {\n            \"$ref\": \"#/components/schemas/TransactionHash\"\n          },\n          \"transactionIndex\": {\n            \"$ref\": \"#/components/schemas/TransactionIndex\"\n          },\n          \"postTransactionState\": {\n            \"title\": \"ReceiptPostTransactionState\",\n            \"description\": \"The intermediate stateRoot directly after transaction execution.\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          \"status\": {\n            \"title\": \"ReceiptStatus\",\n            \"description\": \"Whether or not the transaction threw an error.\",\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"BloomFilter\": {\n        \"title\": \"bloomFilter\",\n        \"type\": \"string\",\n        \"description\": \"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series\"\n      },\n      \"Log\": {\n        \"title\": \"log\",\n        \"type\": \"object\",\n        \"description\": \"An indexed event generated during a transaction\",\n        \"properties\": {\n          \"address\": {\n            \"title\": \"LogAddress\",\n            \"description\": \"Sender of the transaction\",\n            \"$ref\": \"#/components/schemas/Address\"\n          },\n          \"blockHash\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          },\n          \"blockNumber\": {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          },\n          \"data\": {\n            \"title\": \"LogData\",\n            \"description\": \"The data/input string sent along with the transaction\",\n            \"$ref\": \"#/components/schemas/Bytes\"\n          },\n          \"logIndex\": {\n            \"title\": \"LogIndex\",\n            \"description\": \"The index of the event within its transaction, null when its pending\",\n            \"$ref\": \"#/components/schemas/Integer\"\n          },\n          \"removed\": {\n            \"title\": \"logIsRemoved\",\n            \"description\": \"Whether or not the log was orphaned off the main chain\",\n            \"type\": \"boolean\"\n          },\n          \"topics\": {\n            \"$ref\": \"#/components/schemas/Topics\"\n          },\n          \"transactionHash\": {\n            \"$ref\": \"#/components/schemas/TransactionHash\"\n          },\n          \"transactionIndex\": {\n            \"$ref\": \"#/components/schemas/TransactionIndex\"\n          }\n        }\n      },\n      \"Topics\": {\n        \"title\": \"LogTopics\",\n        \"description\": \"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.\",\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Topic\"\n        }\n      },\n      \"Topic\": {\n        \"title\": \"topic\",\n        \"description\": \"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))\",\n        \"$ref\": \"#/components/schemas/DataWord\"\n      },\n      \"TransactionIndex\": {\n        \"title\": \"transactionIndex\",\n        \"description\": \"The index of the transaction. null when its pending\",\n        \"$ref\": \"#/components/schemas/IntegerOrNull\"\n      },\n      \"BlockNumberOrNull\": {\n        \"title\": \"blockNumberOrNull\",\n        \"description\": \"The block number or null when its the pending block\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BlockNumber\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"BlockHashOrNull\": {\n        \"title\": \"blockHashOrNull\",\n        \"description\": \"The block hash or null when its the pending block\",\n        \"$ref\": \"#/components/schemas/KeccakOrPending\"\n      },\n      \"NonceOrNull\": {\n        \"title\": \"nonceOrNull\",\n        \"description\": \"Randomly selected number to satisfy the proof-of-work or null when its the pending block\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Nonce\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"From\": {\n        \"title\": \"From\",\n        \"description\": \"The sender of the transaction\",\n        \"$ref\": \"#/components/schemas/Address\"\n      },\n      \"To\": {\n        \"title\": \"To\",\n        \"description\": \"Destination address of the transaction. Null if it was a contract create.\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Address\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"Block\": {\n        \"title\": \"Block\",\n        \"description\": \"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present blockâ€™s parentâ€™s parent.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"number\": {\n            \"$ref\": \"#/components/schemas/BlockNumberOrNull\"\n          },\n          \"hash\": {\n            \"$ref\": \"#/components/schemas/BlockHashOrNull\"\n          },\n          \"parentHash\": {\n            \"$ref\": \"#/components/schemas/BlockHash\"\n          },\n          \"nonce\": {\n            \"$ref\": \"#/components/schemas/NonceOrNull\"\n          },\n          \"sha3Uncles\": {\n            \"title\": \"blockShaUncles\",\n            \"description\": \"Keccak hash of the uncles data in the block\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          \"logsBloom\": {\n            \"title\": \"blockLogsBloom\",\n            \"type\": \"string\",\n            \"description\": \"The bloom filter for the logs of the block or null when its the pending block\",\n            \"pattern\": \"^0x[a-fA-F\\\\d]+$\"\n          },\n          \"transactionsRoot\": {\n            \"title\": \"blockTransactionsRoot\",\n            \"description\": \"The root of the transactions trie of the block.\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          \"stateRoot\": {\n            \"title\": \"blockStateRoot\",\n            \"description\": \"The root of the final state trie of the block\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          \"receiptsRoot\": {\n            \"title\": \"blockReceiptsRoot\",\n            \"description\": \"The root of the receipts trie of the block\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          \"miner\": {\n            \"$ref\": \"#/components/schemas/AddressOrNull\"\n          },\n          \"difficulty\": {\n            \"title\": \"blockDifficulty\",\n            \"type\": \"string\",\n            \"description\": \"Integer of the difficulty for this block\"\n          },\n          \"totalDifficulty\": {\n            \"title\": \"blockTotalDifficulty\",\n            \"description\": \"Integer of the total difficulty of the chain until this block\",\n            \"$ref\": \"#/components/schemas/IntegerOrNull\"\n          },\n          \"extraData\": {\n            \"title\": \"blockExtraData\",\n            \"type\": \"string\",\n            \"description\": \"The 'extra data' field of this block\"\n          },\n          \"size\": {\n            \"title\": \"blockSize\",\n            \"type\": \"string\",\n            \"description\": \"Integer the size of this block in bytes\"\n          },\n          \"gasLimit\": {\n            \"title\": \"blockGasLimit\",\n            \"type\": \"string\",\n            \"description\": \"The maximum gas allowed in this block\"\n          },\n          \"gasUsed\": {\n            \"title\": \"blockGasUsed\",\n            \"type\": \"string\",\n            \"description\": \"The total used gas by all transactions in this block\"\n          },\n          \"timestamp\": {\n            \"title\": \"blockTimeStamp\",\n            \"type\": \"string\",\n            \"description\": \"The unix timestamp for when the block was collated\"\n          },\n          \"transactions\": {\n            \"title\": \"transactionsOrHashes\",\n            \"description\": \"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter\",\n            \"type\": \"array\",\n            \"items\": {\n              \"title\": \"transactionOrTransactionHash\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Transaction\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/TransactionHash\"\n                }\n              ]\n            }\n          },\n          \"uncles\": {\n            \"title\": \"uncleHashes\",\n            \"description\": \"Array of uncle hashes\",\n            \"type\": \"array\",\n            \"items\": {\n              \"title\": \"uncleHash\",\n              \"description\": \"Block hash of the RLP encoding of an uncle block\",\n              \"$ref\": \"#/components/schemas/Keccak\"\n            }\n          }\n        }\n      },\n      \"SignTransaction\": {\n        \"title\": \"signTransaction\",\n        \"type\": \"object\",\n        \"required\": [\n          \"data\",\n          \"from\",\n          \"gas\",\n          \"gasPrice\",\n          \"to\",\n          \"value\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"type\": \"string\"\n          },\n          \"from\": {\n            \"$ref\": \"#/components/schemas/From\"\n          },\n          \"gas\": {\n            \"title\": \"transactionGas\",\n            \"type\": \"string\",\n            \"description\": \"The gas limit provided by the sender in Wei\"\n          },\n          \"gasPrice\": {\n            \"title\": \"transactionGasPrice\",\n            \"type\": \"string\",\n            \"description\": \"The gas price willing to be paid by the sender in Wei\"\n          },\n          \"to\": {\n            \"$ref\": \"#/components/schemas/To\"\n          },\n          \"value\": {\n            \"title\": \"transactionValue\",\n            \"description\": \"Value of Ether being transferred in Wei\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          }\n        }\n      },\n      \"Transaction\": {\n        \"title\": \"transaction\",\n        \"type\": \"object\",\n        \"required\": [\n          \"gas\",\n          \"gasPrice\",\n          \"nonce\"\n        ],\n        \"properties\": {\n          \"blockHash\": {\n            \"$ref\": \"#/components/schemas/BlockHashOrNull\"\n          },\n          \"blockNumber\": {\n            \"$ref\": \"#/components/schemas/BlockNumberOrNull\"\n          },\n          \"from\": {\n            \"$ref\": \"#/components/schemas/From\"\n          },\n          \"gas\": {\n            \"title\": \"transactionGas\",\n            \"type\": \"string\",\n            \"description\": \"The gas limit provided by the sender in Wei\"\n          },\n          \"gasPrice\": {\n            \"title\": \"transactionGasPrice\",\n            \"type\": \"string\",\n            \"description\": \"The gas price willing to be paid by the sender in Wei\"\n          },\n          \"hash\": {\n            \"$ref\": \"#/components/schemas/TransactionHash\"\n          },\n          \"input\": {\n            \"title\": \"transactionInput\",\n            \"type\": \"string\",\n            \"description\": \"The data field sent with the transaction\"\n          },\n          \"nonce\": {\n            \"title\": \"transactionNonce\",\n            \"description\": \"The total number of prior transactions made by the sender\",\n            \"$ref\": \"#/components/schemas/Nonce\"\n          },\n          \"to\": {\n            \"$ref\": \"#/components/schemas/To\"\n          },\n          \"transactionIndex\": {\n            \"$ref\": \"#/components/schemas/TransactionIndex\"\n          },\n          \"value\": {\n            \"title\": \"transactionValue\",\n            \"description\": \"Value of Ether being transferred in Wei\",\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          \"v\": {\n            \"title\": \"transactionSigV\",\n            \"type\": \"string\",\n            \"description\": \"ECDSA recovery id\"\n          },\n          \"r\": {\n            \"title\": \"transactionSigR\",\n            \"type\": \"string\",\n            \"description\": \"ECDSA signature r\"\n          },\n          \"s\": {\n            \"title\": \"transactionSigS\",\n            \"type\": \"string\",\n            \"description\": \"ECDSA signature s\"\n          }\n        }\n      },\n      \"Transactions\": {\n        \"title\": \"transactions\",\n        \"description\": \"An array of transactions\",\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Transaction\"\n        }\n      },\n      \"TransactionHash\": {\n        \"title\": \"transactionHash\",\n        \"type\": \"string\",\n        \"description\": \"Keccak 256 Hash of the RLP encoding of a transaction\",\n        \"$ref\": \"#/components/schemas/Keccak\"\n      },\n      \"KeccakOrPending\": {\n        \"title\": \"keccakOrPending\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Keccak\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Null\"\n          }\n        ]\n      },\n      \"Keccak\": {\n        \"title\": \"keccak\",\n        \"type\": \"string\",\n        \"description\": \"Hex representation of a Keccak 256 hash\",\n        \"pattern\": \"^0x[a-fA-F\\\\d]{64}$\"\n      },\n      \"Nonce\": {\n        \"title\": \"nonce\",\n        \"description\": \"A number only to be used once\",\n        \"$ref\": \"#/components/schemas/Integer\"\n      },\n      \"Null\": {\n        \"title\": \"null\",\n        \"type\": \"null\",\n        \"description\": \"Null\"\n      },\n      \"Integer\": {\n        \"title\": \"integer\",\n        \"type\": \"string\",\n        \"pattern\": \"^0x[a-fA-F0-9]+$\",\n        \"description\": \"Hex representation of the integer\"\n      },\n      \"TxID\": {\n        \"title\": \"txID\",\n        \"type\": \"string\"\n      },\n      \"StartTime\": {\n        \"description\": \"is the Unix time when the validator starts validating the Subnet.\",\n        \"type\": \"number\"\n      },\n      \"EndTime\": {\n        \"description\": \"is the Unix time when the validator stops validating the Subnet.\",\n        \"type\": \"number\"\n      },\n      \"StakeAmount\": {\n        \"description\": \"is the amount of nAVAX this validator staked. Omitted if subnetID is not the Primary Network\",\n        \"type\": \"number\"\n      },\n      \"Encoding\": {\n        \"name\": \"encoding\",\n        \"description\": \"specifies the format for the returned UTXOs. Can be either \\\"cb58\\\" or \\\"hex\\\" and defaults to \\\"cb58\\\".\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"NodeID\": {\n        \"description\": \"is the validatorâ€™s node ID.\",\n        \"type\": \"string\"\n      },\n      \"Address\": {\n        \"title\": \"address\",\n        \"type\": \"string\",\n        \"pattern\": \"^0x[a-fA-F\\\\d]{40}$\"\n      },\n      \"XAddress\": {\n        \"title\": \"address\",\n        \"type\": \"string\",\n        \"pattern\": \"^X-[a-fA-F\\\\d]{43}$\"\n      },\n      \"XAddresses\": {\n        \"title\": \"addresses\",\n        \"type\": \"array\",\n        \"description\": \"List of contract addresses from which to monitor events\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/XAddress\"\n        }\n      },\n      \"PAddress\": {\n        \"title\": \"address\",\n        \"type\": \"string\",\n        \"pattern\": \"^P-[a-fA-F\\\\d]{43}$\"\n      },\n      \"PAddresses\": {\n        \"title\": \"addresses\",\n        \"type\": \"array\",\n        \"description\": \"List of contract addresses from which to monitor events\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/PAddress\"\n        }\n      },\n      \"Addresses\": {\n        \"title\": \"addresses\",\n        \"type\": \"array\",\n        \"description\": \"List of contract addresses from which to monitor events\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Address\"\n        }\n      },\n      \"Position\": {\n        \"title\": \"position\",\n        \"type\": \"string\",\n        \"description\": \"Hex representation of the storage slot where the variable exists\",\n        \"pattern\": \"^0x([a-fA-F0-9]?)+$\"\n      },\n      \"DataWord\": {\n        \"title\": \"dataWord\",\n        \"type\": \"string\",\n        \"description\": \"Hex representation of a 256 bit unit of data\",\n        \"pattern\": \"^0x([a-fA-F\\\\d]{64})?$\"\n      },\n      \"Bytes\": {\n        \"title\": \"bytes\",\n        \"type\": \"string\",\n        \"description\": \"Hex representation of a variable length byte array\",\n        \"pattern\": \"^0x([a-fA-F0-9]?)+$\"\n      }\n    },\n    \"contentDescriptors\": {\n      \"Block\": {\n        \"name\": \"block\",\n        \"summary\": \"A block\",\n        \"description\": \"A block object\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Block\"\n        }\n      },\n      \"Null\": {\n        \"name\": \"Null\",\n        \"description\": \"JSON Null value\",\n        \"summary\": \"Null value\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Null\"\n        }\n      },\n      \"Signature\": {\n        \"name\": \"signature\",\n        \"summary\": \"The signature.\",\n        \"required\": true,\n        \"schema\": {\n          \"title\": \"signatureBytes\",\n          \"type\": \"string\",\n          \"description\": \"Hex representation of byte array between 2 and 65 chars long\",\n          \"pattern\": \"0x^([A-Fa-f0-9]{2}){65}$\"\n        }\n      },\n      \"GasPrice\": {\n        \"name\": \"gasPrice\",\n        \"required\": true,\n        \"schema\": {\n          \"title\": \"gasPriceResult\",\n          \"description\": \"Integer of the current gas price\",\n          \"$ref\": \"#/components/schemas/Integer\"\n        }\n      },\n      \"Transaction\": {\n        \"required\": true,\n        \"name\": \"transaction\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Transaction\"\n        }\n      },\n      \"TransactionResult\": {\n        \"name\": \"transactionResult\",\n        \"description\": \"Returns a transaction or null\",\n        \"schema\": {\n          \"title\": \"TransactionOrNull\",\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/components/schemas/Transaction\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/Null\"\n            }\n          ]\n        }\n      },\n      \"UncleCountResult\": {\n        \"name\": \"uncleCountResult\",\n        \"description\": \"The Number of total uncles in the given block\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/IntegerOrNull\"\n        }\n      },\n      \"Message\": {\n        \"name\": \"message\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Bytes\"\n        }\n      },\n      \"Filter\": {\n        \"name\": \"filter\",\n        \"required\": true,\n        \"schema\": {\n          \"title\": \"filter\",\n          \"type\": \"object\",\n          \"description\": \"A filter used to monitor the blockchain for log/events\",\n          \"properties\": {\n            \"fromBlock\": {\n              \"$ref\": \"#/components/schemas/BlockNumber\"\n            },\n            \"toBlock\": {\n              \"$ref\": \"#/components/schemas/BlockNumber\"\n            },\n            \"address\": {\n              \"title\": \"oneOrArrayOfAddresses\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Address\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Addresses\"\n                }\n              ]\n            },\n            \"topics\": {\n              \"$ref\": \"#/components/schemas/Topics\"\n            }\n          }\n        }\n      },\n      \"Address\": {\n        \"name\": \"address\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Address\"\n        }\n      },\n      \"BlockHash\": {\n        \"name\": \"blockHash\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/BlockHash\"\n        }\n      },\n      \"Nonce\": {\n        \"name\": \"nonce\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Nonce\"\n        }\n      },\n      \"Position\": {\n        \"name\": \"key\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Position\"\n        }\n      },\n      \"Logs\": {\n        \"name\": \"logs\",\n        \"description\": \"An array of all logs matching filter with given id.\",\n        \"schema\": {\n          \"title\": \"setOfLogs\",\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/components/schemas/Log\"\n          }\n        }\n      },\n      \"FilterId\": {\n        \"name\": \"filterId\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/FilterId\"\n        }\n      },\n      \"BlockNumber\": {\n        \"name\": \"blockNumber\",\n        \"required\": true,\n        \"schema\": {\n          \"title\": \"blockNumberOrTag\",\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/components/schemas/BlockNumber\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/BlockNumberTag\"\n            }\n          ]\n        }\n      },\n      \"TransactionHash\": {\n        \"name\": \"transactionHash\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/TransactionHash\"\n        }\n      }\n    }\n  }\n}"}}}